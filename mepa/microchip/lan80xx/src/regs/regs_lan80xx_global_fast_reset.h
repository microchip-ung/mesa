// Copyright (c) 2004-2020 Microchip Technology Inc. and its subsidiaries.
// SPDX-License-Identifier: MIT

#ifndef _LAN80XX_MALIBU25G_REGS_GLOBAL_FAST_RESET_H_
#define _LAN80XX_MALIBU25G_REGS_GLOBAL_FAST_RESET_H_

#include "regs_lan8042_common.h"

/***********************************************************************
 *
 * Target: \a GLOBAL_FAST_RESET
 *
 *
 *
 ***********************************************************************/

/**
 * Register Group: \a GLOBAL_FAST_RESET:FAST_ACCESS_RESET
 *
 * Global fast reset registers
 */


/**
 * \brief Global fast reset register 0
 *
 * \details
 * Register: \a GLOBAL_FAST_RESET:FAST_ACCESS_RESET:GLOBAL_FAST_RESET_0
 */
#define LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0  LAN80XX_IOREG(MMD_ID_GLOBAL_REGISTERS, 0, 0x8000)

/**
 * \brief
 * Reset the datapath, configuration registers and csr rings in slice 3
 * host. self-clearing
 *
 * \details
 * 0: Normal operation
 * 1: Reset

 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SLICE_HOST_3_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_3_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),15,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_3_FAST_RESET  LAN80XX_BIT(15)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_3_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,15,1)

/**
 * \brief
 * Reset the datapath, configuration registers and csr rings in slice 2
 * host. self-clearing
 *
 * \details
 * 0: Normal operation
 * 1: Reset
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SLICE_HOST_2_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_2_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),14,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_2_FAST_RESET  LAN80XX_BIT(14)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_2_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,14,1)

/**
 * \brief
 * Reset the datapath, configuration registers and csr rings in slice 1
 * host. self-clearing
 *
 * \details
 * 0: Normal operation
 * 1: Reset
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SLICE_HOST_1_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_1_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),13,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_1_FAST_RESET  LAN80XX_BIT(13)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_1_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,13,1)

/**
 * \brief
 * Reset the datapath, configuration registers and csr rings in slice 0
 * host. self-clearing
 *
 * \details
 * 0: Normal operation
 * 1: Reset
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SLICE_HOST_0_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_0_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),12,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_0_FAST_RESET  LAN80XX_BIT(12)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_HOST_0_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,12,1)

/**
 * \brief
 * Reset the datapath, configuration registers and csr rings in slice 3
 * line. self-clearing
 *
 * \details
 * 0: Normal operation
 * 1: Reset
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SLICE_LINE_3_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_3_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),11,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_3_FAST_RESET  LAN80XX_BIT(11)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_3_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,11,1)

/**
 * \brief
 * Reset the datapath, configuration registers and csr rings in slice 2
 * line. self-clearing
 *
 * \details
 * 0: Normal operation
 * 1: Reset
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SLICE_LINE_2_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_2_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),10,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_2_FAST_RESET  LAN80XX_BIT(10)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_2_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,10,1)

/**
 * \brief
 * Reset the datapath, configuration registers and csr rings in slice 1
 * line. self-clearing
 *
 * \details
 * 0: Normal operation
 * 1: Reset
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SLICE_LINE_1_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_1_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),9,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_1_FAST_RESET  LAN80XX_BIT(9)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_1_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,9,1)

/**
 * \brief
 * Reset the datapath, configuration registers and csr rings in slice 0
 * line. self-clearing
 *
 * \details
 * 0: Normal operation
 * 1: Reset
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SLICE_LINE_0_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_0_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),8,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_0_FAST_RESET  LAN80XX_BIT(8)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SLICE_LINE_0_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,8,1)

/**
 * \brief
 * Reserved
 *
 * \details
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SPARE_FAST_RESET_4
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_4(x)  LAN80XX_ENCODE_BITFIELD(!!(x),7,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_4  LAN80XX_BIT(7)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_4(x)  LAN80XX_EXTRACT_BITFIELD(x,7,1)

/**
 * \brief
 * Reserved
 *
 * \details
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SPARE_FAST_RESET_3
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_3(x)  LAN80XX_ENCODE_BITFIELD(!!(x),6,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_3  LAN80XX_BIT(6)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_3(x)  LAN80XX_EXTRACT_BITFIELD(x,6,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 17, also reset registers within ring 17 targets
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . CSR_RING_17_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_CSR_RING_17_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),5,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_CSR_RING_17_FAST_RESET  LAN80XX_BIT(5)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_CSR_RING_17_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,5,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 16, also reset registers within ring 16 targets except
 * GLOBAL, GPIO_CTRL and CLK_CFG
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . CSR_RING_16_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_CSR_RING_16_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),4,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_CSR_RING_16_FAST_RESET  LAN80XX_BIT(4)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_CSR_RING_16_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,4,1)

/**
 * \brief
 * Reserved
 *
 * \details
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SPARE_FAST_RESET_2
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_2(x)  LAN80XX_ENCODE_BITFIELD(!!(x),3,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_2  LAN80XX_BIT(3)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_2(x)  LAN80XX_EXTRACT_BITFIELD(x,3,1)

/**
 * \brief
 * Reserved
 *
 * \details
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SPARE_FAST_RESET_1
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_1(x)  LAN80XX_ENCODE_BITFIELD(!!(x),2,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_1  LAN80XX_BIT(2)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_1(x)  LAN80XX_EXTRACT_BITFIELD(x,2,1)

/**
 * \brief
 * Reserved
 *
 * \details
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . SPARE_FAST_RESET_0
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_0(x)  LAN80XX_ENCODE_BITFIELD(!!(x),1,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_0  LAN80XX_BIT(1)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_SPARE_FAST_RESET_0(x)  LAN80XX_EXTRACT_BITFIELD(x,1,1)

/**
 * \brief
 * Reset the datapath in all slices, all csr rings and all configuration
 * registers except the GPIO configuration registers (1ExF200-1ExF2FF) and
 * global configuration registers(1Ex0200-1Ex05FF) . GPIO functions are not
 * modified when using this software reset since the GPIO configuration
 * registers are not reset to default settings. STRAP inputs are not
 * reloaded. MCU subsystem is reset.Self-clearing.
 *
 * \details
 * 0: Normal operation
 * 1: Reset

 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0 . CHIP_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_CHIP_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),0,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_CHIP_FAST_RESET  LAN80XX_BIT(0)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_0_CHIP_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,0,1)


/**
 * \brief Global fast reset register 1
 *
 * \details
 * Register: \a GLOBAL_FAST_RESET:FAST_ACCESS_RESET:GLOBAL_FAST_RESET_1
 */
#define LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1  LAN80XX_IOREG(MMD_ID_GLOBAL_REGISTERS, 0, 0x8001)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 15
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_15_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_15_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),15,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_15_FAST_RESET  LAN80XX_BIT(15)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_15_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,15,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 14
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_14_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_14_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),14,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_14_FAST_RESET  LAN80XX_BIT(14)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_14_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,14,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 13
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_13_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_13_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),13,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_13_FAST_RESET  LAN80XX_BIT(13)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_13_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,13,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 12
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_12_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_12_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),12,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_12_FAST_RESET  LAN80XX_BIT(12)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_12_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,12,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 11
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_11_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_11_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),11,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_11_FAST_RESET  LAN80XX_BIT(11)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_11_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,11,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 10
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_10_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_10_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),10,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_10_FAST_RESET  LAN80XX_BIT(10)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_10_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,10,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 9
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_9_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_9_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),9,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_9_FAST_RESET  LAN80XX_BIT(9)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_9_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,9,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 8
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_8_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_8_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),8,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_8_FAST_RESET  LAN80XX_BIT(8)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_8_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,8,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 7
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_7_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_7_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),7,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_7_FAST_RESET  LAN80XX_BIT(7)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_7_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,7,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 6
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_6_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_6_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),6,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_6_FAST_RESET  LAN80XX_BIT(6)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_6_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,6,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 5
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_5_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_5_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),5,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_5_FAST_RESET  LAN80XX_BIT(5)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_5_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,5,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 4
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_4_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_4_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),4,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_4_FAST_RESET  LAN80XX_BIT(4)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_4_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,4,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 3
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_3_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_3_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),3,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_3_FAST_RESET  LAN80XX_BIT(3)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_3_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,3,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 2
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_2_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_2_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),2,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_2_FAST_RESET  LAN80XX_BIT(2)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_2_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,2,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 1
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_1_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_1_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),1,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_1_FAST_RESET  LAN80XX_BIT(1)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_1_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,1,1)

/**
 * \brief
 * Self-clearing software reset register
 *
 * \details
 * 0: Normal operation
 * 1: Reset CSR ring 0
 *
 * Field: ::LAN80XX_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1 . CSR_RING_0_FAST_RESET
 */
#define  LAN80XX_F_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_0_FAST_RESET(x)  LAN80XX_ENCODE_BITFIELD(!!(x),0,1)
#define  LAN80XX_M_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_0_FAST_RESET  LAN80XX_BIT(0)
#define  LAN80XX_X_GLOBAL_FAST_RESET_GLOBAL_FAST_RESET_1_CSR_RING_0_FAST_RESET(x)  LAN80XX_EXTRACT_BITFIELD(x,0,1)


#endif /* _LAN80XX_MALIBU25G_REGS_GLOBAL_FAST_RESET_H_ */
