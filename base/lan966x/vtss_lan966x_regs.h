// Copyright (c) 2004-2020 Microchip Technology Inc. and its subsidiaries.
// SPDX-License-Identifier: MIT

/* This file is autogenerated by cml-utils 2021-05-06 20:05:11 +0200.
 * Commit ID: dbe188f718027a2c414b90d45f152b73468cbc5c
 */

#ifndef _VTSS_LAN966X_REGS_H_
#define _VTSS_LAN966X_REGS_H_

#define GENMASK(h, l) VTSS_ENCODE_BITMASK(l, (h) - (l) + 1)

#define LAN966X_BUILD_ID_REG GCB_BUILDID
enum lan966x_region {
	REGION_DEFAULT,
	REGION_AMBA_AXI_TOP,
	NUM_REGIONS
};

#define LAN966X_TARGET_AES_OFFSET 0x0004c000
#define LAN966X_TARGET_AES_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_AESB_ASC_OFFSET 0x00050000
#define LAN966X_TARGET_AESB_ASC_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_AFI_OFFSET 0x02120000
#define LAN966X_TARGET_AFI_REGION REGION_DEFAULT

#define LAN966X_TARGET_ANA_OFFSET 0x02140000
#define LAN966X_TARGET_ANA_REGION REGION_DEFAULT

#define LAN966X_TARGET_CA7_DBG_OFFSET 0x08800000
#define LAN966X_TARGET_CA7_DBG_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_CHIP_TOP_OFFSET 0x02010000
#define LAN966X_TARGET_CHIP_TOP_REGION REGION_DEFAULT

#define LAN966X_TARGET_CPU_OFFSET 0x000c0000
#define LAN966X_TARGET_CPU_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_CPU_SYSCNT_OFFSET 0x08843000
#define LAN966X_TARGET_CPU_SYSCNT_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_CPU_SYSCNT_RO_OFFSET 0x08900000
#define LAN966X_TARGET_CPU_SYSCNT_RO_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_CUPHY_1_OFFSET 0x000a0600
#define LAN966X_TARGET_CUPHY_1_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_CUPHY_2_OFFSET 0x000a0a00
#define LAN966X_TARGET_CUPHY_2_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_DDR_PHY_OFFSET 0x00084000
#define LAN966X_TARGET_DDR_PHY_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_DDR_UMCTL2_OFFSET 0x00080000
#define LAN966X_TARGET_DDR_UMCTL2_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_DEV_0_OFFSET 0x02034000
#define LAN966X_TARGET_DEV_0_REGION REGION_DEFAULT

#define LAN966X_TARGET_DEV_1_OFFSET 0x02038000
#define LAN966X_TARGET_DEV_1_REGION REGION_DEFAULT

#define LAN966X_TARGET_DEV_2_OFFSET 0x0203c000
#define LAN966X_TARGET_DEV_2_REGION REGION_DEFAULT

#define LAN966X_TARGET_DEV_3_OFFSET 0x02040000
#define LAN966X_TARGET_DEV_3_REGION REGION_DEFAULT

#define LAN966X_TARGET_DEV_4_OFFSET 0x02044000
#define LAN966X_TARGET_DEV_4_REGION REGION_DEFAULT

#define LAN966X_TARGET_DEV_5_OFFSET 0x02048000
#define LAN966X_TARGET_DEV_5_REGION REGION_DEFAULT

#define LAN966X_TARGET_DEV_6_OFFSET 0x0204c000
#define LAN966X_TARGET_DEV_6_REGION REGION_DEFAULT

#define LAN966X_TARGET_DEV_7_OFFSET 0x02050000
#define LAN966X_TARGET_DEV_7_REGION REGION_DEFAULT

#define LAN966X_TARGET_FDMA_OFFSET 0x000c0400
#define LAN966X_TARGET_FDMA_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_FLEXCOM_0_OFFSET 0x00040000
#define LAN966X_TARGET_FLEXCOM_0_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_FLEXCOM_1_OFFSET 0x00044000
#define LAN966X_TARGET_FLEXCOM_1_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_FLEXCOM_2_OFFSET 0x00060000
#define LAN966X_TARGET_FLEXCOM_2_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_FLEXCOM_3_OFFSET 0x00064000
#define LAN966X_TARGET_FLEXCOM_3_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_FLEXCOM_4_OFFSET 0x00070000
#define LAN966X_TARGET_FLEXCOM_4_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_GCB_OFFSET 0x02004000
#define LAN966X_TARGET_GCB_REGION REGION_DEFAULT

#define LAN966X_TARGET_GIC400_OFFSET 0x08c10000
#define LAN966X_TARGET_GIC400_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_GPV_OFFSET 0x08b00000
#define LAN966X_TARGET_GPV_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_HICM_OFFSET 0x00810000
#define LAN966X_TARGET_HICM_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_HMATRIX2_OFFSET 0x00800000
#define LAN966X_TARGET_HMATRIX2_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_HSIO_OFFSET 0x0202c000
#define LAN966X_TARGET_HSIO_REGION REGION_DEFAULT

#define LAN966X_TARGET_MCAN_0_OFFSET 0x0081c000
#define LAN966X_TARGET_MCAN_0_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_MCAN_1_OFFSET 0x00820000
#define LAN966X_TARGET_MCAN_1_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_MEP_OFFSET 0x0201c000
#define LAN966X_TARGET_MEP_REGION REGION_DEFAULT

#define LAN966X_TARGET_ORG_0_OFFSET 0x02000000
#define LAN966X_TARGET_ORG_0_REGION REGION_DEFAULT

#define LAN966X_TARGET_ORG_1_OFFSET 0x02400000
#define LAN966X_TARGET_ORG_1_REGION REGION_DEFAULT

#define LAN966X_TARGET_OTP_OFFSET 0x00021000
#define LAN966X_TARGET_OTP_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_PCIE_CFG_OFFSET 0x000d0000
#define LAN966X_TARGET_PCIE_CFG_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_PCIE_DBI_OFFSET 0x00400000
#define LAN966X_TARGET_PCIE_DBI_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_PTP_OFFSET 0x0200c000
#define LAN966X_TARGET_PTP_REGION REGION_DEFAULT

#define LAN966X_TARGET_QS_OFFSET 0x02008000
#define LAN966X_TARGET_QS_REGION REGION_DEFAULT

#define LAN966X_TARGET_QSPI_0_OFFSET 0x00804000
#define LAN966X_TARGET_QSPI_0_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_QSPI_1_OFFSET 0x00054000
#define LAN966X_TARGET_QSPI_1_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_QSPI_2_OFFSET 0x00834000
#define LAN966X_TARGET_QSPI_2_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_QSYS_OFFSET 0x02100000
#define LAN966X_TARGET_QSYS_REGION REGION_DEFAULT

#define LAN966X_TARGET_REW_OFFSET 0x02014000
#define LAN966X_TARGET_REW_REGION REGION_DEFAULT

#define LAN966X_TARGET_RTE_OFFSET 0x02600000
#define LAN966X_TARGET_RTE_REGION REGION_DEFAULT

#define LAN966X_TARGET_SDMMC_OFFSET 0x00830000
#define LAN966X_TARGET_SDMMC_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_SHA_OFFSET 0x0006c000
#define LAN966X_TARGET_SHA_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_SJTAG_OFFSET 0x00020000
#define LAN966X_TARGET_SJTAG_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_SYS_OFFSET 0x02028000
#define LAN966X_TARGET_SYS_REGION REGION_DEFAULT

#define LAN966X_TARGET_TIMER1_OFFSET 0x00824000
#define LAN966X_TARGET_TIMER1_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_TIMERS_OFFSET 0x0008c000
#define LAN966X_TARGET_TIMERS_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_TRNG_OFFSET 0x00048000
#define LAN966X_TARGET_TRNG_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_TZAESBNS_OFFSET 0x00814000
#define LAN966X_TARGET_TZAESBNS_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_TZAESBS_OFFSET 0x00818000
#define LAN966X_TARGET_TZAESBS_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_TZPM_OFFSET 0x00004000
#define LAN966X_TARGET_TZPM_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_UDPHS0_OFFSET 0x00808000
#define LAN966X_TARGET_UDPHS0_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_UVOV_OFFSET 0x00094000
#define LAN966X_TARGET_UVOV_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_VCAP_0_OFFSET 0x02018000
#define LAN966X_TARGET_VCAP_0_REGION REGION_DEFAULT

#define LAN966X_TARGET_VCAP_1_OFFSET 0x02020000
#define LAN966X_TARGET_VCAP_1_REGION REGION_DEFAULT

#define LAN966X_TARGET_VCAP_2_OFFSET 0x02024000
#define LAN966X_TARGET_VCAP_2_REGION REGION_DEFAULT

#define LAN966X_TARGET_WDT_OFFSET 0x00090000
#define LAN966X_TARGET_WDT_REGION REGION_AMBA_AXI_TOP

#define LAN966X_TARGET_XDMAC_OFFSET 0x00068000
#define LAN966X_TARGET_XDMAC_REGION REGION_AMBA_AXI_TOP

enum lan966x_target {
	TARGET_AFI = 2,
	TARGET_ANA = 3,
	TARGET_CHIP_TOP = 5,
	TARGET_CPU = 6,
	TARGET_DEV = 13,
	TARGET_GCB = 27,
	TARGET_HSIO = 32,
	TARGET_MEP = 35,
	TARGET_ORG = 36,
	TARGET_PTP = 41,
	TARGET_QS = 42,
	TARGET_QSYS = 46,
	TARGET_REW = 47,
	TARGET_SYS = 52,
	TARGET_VCAP = 61,
	NUM_TARGETS = 66
};

#define __REG(...)    __VA_ARGS__

/*      AFI:MISC:MISC_CTRL */
#define AFI_MISC_CTRL             __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 0, 0, 1, 4)

#define AFI_MISC_CTRL_AFI_ENA(x)                 ((x) & GENMASK(0, 0))
#define AFI_MISC_CTRL_AFI_ENA_M                  GENMASK(0, 0)
#define AFI_MISC_CTRL_AFI_ENA_X(x)               ((x) & GENMASK(0, 0))

/*      AFI:MISC:NEW_FRM_CTRL */
#define AFI_NEW_FRM_CTRL          __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 4, 0, 1, 4)

#define AFI_NEW_FRM_CTRL_VLD(x)                  ((x) & GENMASK(0, 0))
#define AFI_NEW_FRM_CTRL_VLD_M                   GENMASK(0, 0)
#define AFI_NEW_FRM_CTRL_VLD_X(x)                ((x) & GENMASK(0, 0))

/*      AFI:MISC:NEW_FRM_INFO */
#define AFI_NEW_FRM_INFO          __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 8, 0, 1, 4)

#define AFI_NEW_FRM_INFO_FRM_INFO(x)             ((x) & GENMASK(19, 0))
#define AFI_NEW_FRM_INFO_FRM_INFO_M              GENMASK(19, 0)
#define AFI_NEW_FRM_INFO_FRM_INFO_X(x)           ((x) & GENMASK(19, 0))

/*      AFI:MISC:ERR */
#define AFI_ERR                   __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 12, 0, 1, 4)

#define AFI_ERR_ERR_FRM_OUT_NEG_STICKY(x)        ((x) & GENMASK(0, 0))
#define AFI_ERR_ERR_FRM_OUT_NEG_STICKY_M         GENMASK(0, 0)
#define AFI_ERR_ERR_FRM_OUT_NEG_STICKY_X(x)      ((x) & GENMASK(0, 0))

/*      AFI:MISC:WARN */
#define AFI_WARN                  __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 16, 0, 1, 4)

#define AFI_WARN_WARN_DTI_CD_MAX_NEG_STICKY(x)   (((x) << 4) & GENMASK(4, 4))
#define AFI_WARN_WARN_DTI_CD_MAX_NEG_STICKY_M    GENMASK(4, 4)
#define AFI_WARN_WARN_DTI_CD_MAX_NEG_STICKY_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define AFI_WARN_WARN_TTI_BUSY_STICKY(x)         (((x) << 3) & GENMASK(3, 3))
#define AFI_WARN_WARN_TTI_BUSY_STICKY_M          GENMASK(3, 3)
#define AFI_WARN_WARN_TTI_BUSY_STICKY_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define AFI_WARN_WARN_ENQ_STOP_STICKY(x)         (((x) << 2) & GENMASK(2, 2))
#define AFI_WARN_WARN_ENQ_STOP_STICKY_M          GENMASK(2, 2)
#define AFI_WARN_WARN_ENQ_STOP_STICKY_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define AFI_WARN_WARN_FRM_OUT_MAX_STICKY(x)      (((x) << 1) & GENMASK(1, 1))
#define AFI_WARN_WARN_FRM_OUT_MAX_STICKY_M       GENMASK(1, 1)
#define AFI_WARN_WARN_FRM_OUT_MAX_STICKY_X(x)    (((x) & GENMASK(1, 1)) >> 1)

#define AFI_WARN_WARN_NEW_FRM_VLD_STICKY(x)      ((x) & GENMASK(0, 0))
#define AFI_WARN_WARN_NEW_FRM_VLD_STICKY_M       GENMASK(0, 0)
#define AFI_WARN_WARN_NEW_FRM_VLD_STICKY_X(x)    ((x) & GENMASK(0, 0))

/*      AFI:MISC:STICKY_INFO */
#define AFI_STICKY_INFO           __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 20, 0, 1, 4)

#define AFI_STICKY_INFO_STICKY_INFO_WR_CNT(x)    (((x) << 28) & GENMASK(31, 28))
#define AFI_STICKY_INFO_STICKY_INFO_WR_CNT_M     GENMASK(31, 28)
#define AFI_STICKY_INFO_STICKY_INFO_WR_CNT_X(x)  (((x) & GENMASK(31, 28)) >> 28)

#define AFI_STICKY_INFO_TTI_PTR(x)               (((x) << 8) & GENMASK(18, 8))
#define AFI_STICKY_INFO_TTI_PTR_M                GENMASK(18, 8)
#define AFI_STICKY_INFO_TTI_PTR_X(x)             (((x) & GENMASK(18, 8)) >> 8)

#define AFI_STICKY_INFO_PORT_NUM(x)              ((x) & GENMASK(3, 0))
#define AFI_STICKY_INFO_PORT_NUM_M               GENMASK(3, 0)
#define AFI_STICKY_INFO_PORT_NUM_X(x)            ((x) & GENMASK(3, 0))

/*      AFI:MISC:STICKY_INFO_ENA */
#define AFI_STICKY_INFO_ENA       __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 24, 0, 1, 4)

#define AFI_STICKY_INFO_ENA_TTI_BUSY(x)          (((x) << 3) & GENMASK(3, 3))
#define AFI_STICKY_INFO_ENA_TTI_BUSY_M           GENMASK(3, 3)
#define AFI_STICKY_INFO_ENA_TTI_BUSY_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define AFI_STICKY_INFO_ENA_ENQ_STOP(x)          (((x) << 2) & GENMASK(2, 2))
#define AFI_STICKY_INFO_ENA_ENQ_STOP_M           GENMASK(2, 2)
#define AFI_STICKY_INFO_ENA_ENQ_STOP_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define AFI_STICKY_INFO_ENA_FRM_OUT_MAX(x)       (((x) << 1) & GENMASK(1, 1))
#define AFI_STICKY_INFO_ENA_FRM_OUT_MAX_M        GENMASK(1, 1)
#define AFI_STICKY_INFO_ENA_FRM_OUT_MAX_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define AFI_STICKY_INFO_ENA_FRM_OUT_NEG(x)       ((x) & GENMASK(0, 0))
#define AFI_STICKY_INFO_ENA_FRM_OUT_NEG_M        GENMASK(0, 0)
#define AFI_STICKY_INFO_ENA_FRM_OUT_NEG_X(x)     ((x) & GENMASK(0, 0))

/*      AFI:MISC:DTI_DUR_TICK_LEN */
#define AFI_DTI_DUR_TICK_LEN      __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 28, 0, 1, 4)

#define AFI_DTI_DUR_TICK_LEN_DUR_TICK_LEN(x)     ((x) & GENMASK(17, 0))
#define AFI_DTI_DUR_TICK_LEN_DUR_TICK_LEN_M      GENMASK(17, 0)
#define AFI_DTI_DUR_TICK_LEN_DUR_TICK_LEN_X(x)   ((x) & GENMASK(17, 0))

/*      AFI:FRM_TBL:FRM_NXT_AND_TYPE */
#define AFI_FRM_NXT_AND_TYPE(g)   __REG(TARGET_AFI,\
					0, 1, 65536, g, 2048, 16, 0, 0, 1, 4)

#define AFI_FRM_NXT_AND_TYPE_ENTRY_TYPE(x)       (((x) << 16) & GENMASK(16, 16))
#define AFI_FRM_NXT_AND_TYPE_ENTRY_TYPE_M        GENMASK(16, 16)
#define AFI_FRM_NXT_AND_TYPE_ENTRY_TYPE_X(x)     (((x) & GENMASK(16, 16)) >> 16)

#define AFI_FRM_NXT_AND_TYPE_NEXT_PTR(x)         ((x) & GENMASK(10, 0))
#define AFI_FRM_NXT_AND_TYPE_NEXT_PTR_M          GENMASK(10, 0)
#define AFI_FRM_NXT_AND_TYPE_NEXT_PTR_X(x)       ((x) & GENMASK(10, 0))

/*      AFI:FRM_TBL:FRM_ENTRY_PART0 */
#define AFI_FRM_ENTRY_PART0(g)    __REG(TARGET_AFI,\
					0, 1, 65536, g, 2048, 16, 4, 0, 1, 4)

#define AFI_FRM_ENTRY_PART0_PART0(x)             ((x) & GENMASK(29, 0))
#define AFI_FRM_ENTRY_PART0_PART0_M              GENMASK(29, 0)
#define AFI_FRM_ENTRY_PART0_PART0_X(x)           ((x) & GENMASK(29, 0))

/*      AFI:FRM_TBL:FRM_ENTRY_PART1 */
#define AFI_FRM_ENTRY_PART1(g)    __REG(TARGET_AFI,\
					0, 1, 65536, g, 2048, 16, 8, 0, 1, 4)

#define AFI_FRM_ENTRY_PART1_PART1(x)             ((x) & GENMASK(5, 0))
#define AFI_FRM_ENTRY_PART1_PART1_M              GENMASK(5, 0)
#define AFI_FRM_ENTRY_PART1_PART1_X(x)           ((x) & GENMASK(5, 0))

/*      AFI:DTI_TBL:DTI_MODE */
#define AFI_DTI_MODE(g)           __REG(TARGET_AFI,\
					0, 1, 98304, g, 16, 32, 0, 0, 1, 4)

#define AFI_DTI_MODE_FC_POSTPONE_MODE(x)         (((x) << 31) & GENMASK(31, 31))
#define AFI_DTI_MODE_FC_POSTPONE_MODE_M          GENMASK(31, 31)
#define AFI_DTI_MODE_FC_POSTPONE_MODE_X(x)       (((x) & GENMASK(31, 31)) >> 31)

#define AFI_DTI_MODE_DTI_NEXT(x)                 (((x) << 24) & GENMASK(27, 24))
#define AFI_DTI_MODE_DTI_NEXT_M                  GENMASK(27, 24)
#define AFI_DTI_MODE_DTI_NEXT_X(x)               (((x) & GENMASK(27, 24)) >> 24)

#define AFI_DTI_MODE_FC_POSTPONE_LEN(x)          (((x) << 16) & GENMASK(23, 16))
#define AFI_DTI_MODE_FC_POSTPONE_LEN_M           GENMASK(23, 16)
#define AFI_DTI_MODE_FC_POSTPONE_LEN_X(x)        (((x) & GENMASK(23, 16)) >> 16)

#define AFI_DTI_MODE_FRM_INJ_CNT(x)              (((x) << 8) & GENMASK(15, 8))
#define AFI_DTI_MODE_FRM_INJ_CNT_M               GENMASK(15, 8)
#define AFI_DTI_MODE_FRM_INJ_CNT_X(x)            (((x) & GENMASK(15, 8)) >> 8)

#define AFI_DTI_MODE_TRAILING_DELAY_SEQ_CNT(x)   (((x) << 2) & GENMASK(7, 2))
#define AFI_DTI_MODE_TRAILING_DELAY_SEQ_CNT_M    GENMASK(7, 2)
#define AFI_DTI_MODE_TRAILING_DELAY_SEQ_CNT_X(x) (((x) & GENMASK(7, 2)) >> 2)

#define AFI_DTI_MODE_MODE(x)                     ((x) & GENMASK(1, 0))
#define AFI_DTI_MODE_MODE_M                      GENMASK(1, 0)
#define AFI_DTI_MODE_MODE_X(x)                   ((x) & GENMASK(1, 0))

/*      AFI:DTI_TBL:DTI_PORT_QU */
#define AFI_DTI_PORT_QU(g)        __REG(TARGET_AFI,\
					0, 1, 98304, g, 16, 32, 4, 0, 1, 4)

#define AFI_DTI_PORT_QU_QU_NUM(x)                (((x) << 8) & GENMASK(17, 8))
#define AFI_DTI_PORT_QU_QU_NUM_M                 GENMASK(17, 8)
#define AFI_DTI_PORT_QU_QU_NUM_X(x)              (((x) & GENMASK(17, 8)) >> 8)

#define AFI_DTI_PORT_QU_PORT_NUM(x)              ((x) & GENMASK(3, 0))
#define AFI_DTI_PORT_QU_PORT_NUM_M               GENMASK(3, 0)
#define AFI_DTI_PORT_QU_PORT_NUM_X(x)            ((x) & GENMASK(3, 0))

/*      AFI:DTI_TBL:DTI_FRM */
#define AFI_DTI_FRM(g)            __REG(TARGET_AFI,\
					0, 1, 98304, g, 16, 32, 8, 0, 1, 4)

#define AFI_DTI_FRM_NEXT_FRM_PTR(x)              (((x) << 16) & GENMASK(26, 16))
#define AFI_DTI_FRM_NEXT_FRM_PTR_M               GENMASK(26, 16)
#define AFI_DTI_FRM_NEXT_FRM_PTR_X(x)            (((x) & GENMASK(26, 16)) >> 16)

#define AFI_DTI_FRM_FIRST_FRM_PTR(x)             ((x) & GENMASK(10, 0))
#define AFI_DTI_FRM_FIRST_FRM_PTR_M              GENMASK(10, 0)
#define AFI_DTI_FRM_FIRST_FRM_PTR_X(x)           ((x) & GENMASK(10, 0))

/*      AFI:DTI_TBL:DTI_CNT */
#define AFI_DTI_CNT(g)            __REG(TARGET_AFI,\
					0, 1, 98304, g, 16, 32, 12, 0, 1, 4)

#define AFI_DTI_CNT_CNT(x)                       ((x) & GENMASK(30, 0))
#define AFI_DTI_CNT_CNT_M                        GENMASK(30, 0)
#define AFI_DTI_CNT_CNT_X(x)                     ((x) & GENMASK(30, 0))

/*      AFI:DTI_TBL:DTI_DURATION */
#define AFI_DTI_DURATION(g)       __REG(TARGET_AFI,\
					0, 1, 98304, g, 16, 32, 16, 0, 1, 4)

#define AFI_DTI_DURATION_DURATION(x)             ((x) & GENMASK(30, 0))
#define AFI_DTI_DURATION_DURATION_M              GENMASK(30, 0)
#define AFI_DTI_DURATION_DURATION_X(x)           ((x) & GENMASK(30, 0))

/*      AFI:DTI_MISC:DTI_FC_CNT_DOWN */
#define AFI_DTI_FC_CNT_DOWN(g)    __REG(TARGET_AFI,\
					0, 1, 98928, g, 16, 12, 0, 0, 1, 4)

#define AFI_DTI_FC_CNT_DOWN_FC_CNT_DOWN(x)       ((x) & GENMASK(7, 0))
#define AFI_DTI_FC_CNT_DOWN_FC_CNT_DOWN_M        GENMASK(7, 0)
#define AFI_DTI_FC_CNT_DOWN_FC_CNT_DOWN_X(x)     ((x) & GENMASK(7, 0))

/*      AFI:DTI_MISC:DTI_CNT_DOWN */
#define AFI_DTI_CNT_DOWN(g)       __REG(TARGET_AFI,\
					0, 1, 98928, g, 16, 12, 4, 0, 1, 4)

#define AFI_DTI_CNT_DOWN_CNT_DOWN(x)             ((x) & GENMASK(30, 0))
#define AFI_DTI_CNT_DOWN_CNT_DOWN_M              GENMASK(30, 0)
#define AFI_DTI_CNT_DOWN_CNT_DOWN_X(x)           ((x) & GENMASK(30, 0))

/*      AFI:DTI_MISC:DTI_CTRL */
#define AFI_DTI_CTRL(g)           __REG(TARGET_AFI,\
					0, 1, 98928, g, 16, 12, 8, 0, 1, 4)

#define AFI_DTI_CTRL_BW(x)                       (((x) << 1) & GENMASK(1, 1))
#define AFI_DTI_CTRL_BW_M                        GENMASK(1, 1)
#define AFI_DTI_CTRL_BW_X(x)                     (((x) & GENMASK(1, 1)) >> 1)

#define AFI_DTI_CTRL_ENA(x)                      ((x) & GENMASK(0, 0))
#define AFI_DTI_CTRL_ENA_M                       GENMASK(0, 0)
#define AFI_DTI_CTRL_ENA_X(x)                    ((x) & GENMASK(0, 0))

/*      AFI:TTI_TBL:TTI_PORT_QU */
#define AFI_TTI_PORT_QU(g)        __REG(TARGET_AFI,\
					0, 1, 0, g, 2048, 32, 0, 0, 1, 4)

#define AFI_TTI_PORT_QU_QU_NUM(x)                (((x) << 8) & GENMASK(17, 8))
#define AFI_TTI_PORT_QU_QU_NUM_M                 GENMASK(17, 8)
#define AFI_TTI_PORT_QU_QU_NUM_X(x)              (((x) & GENMASK(17, 8)) >> 8)

#define AFI_TTI_PORT_QU_PORT_NUM(x)              ((x) & GENMASK(3, 0))
#define AFI_TTI_PORT_QU_PORT_NUM_M               GENMASK(3, 0)
#define AFI_TTI_PORT_QU_PORT_NUM_X(x)            ((x) & GENMASK(3, 0))

/*      AFI:TTI_TBL:TTI_TIMER */
#define AFI_TTI_TIMER(g)          __REG(TARGET_AFI,\
					0, 1, 0, g, 2048, 32, 4, 0, 1, 4)

#define AFI_TTI_TIMER_TIMER_LEN(x)               (((x) << 16) & GENMASK(24, 16))
#define AFI_TTI_TIMER_TIMER_LEN_M                GENMASK(24, 16)
#define AFI_TTI_TIMER_TIMER_LEN_X(x)             (((x) & GENMASK(24, 16)) >> 16)

#define AFI_TTI_TIMER_TIMER_ENA(x)               (((x) << 6) & GENMASK(6, 6))
#define AFI_TTI_TIMER_TIMER_ENA_M                GENMASK(6, 6)
#define AFI_TTI_TIMER_TIMER_ENA_X(x)             (((x) & GENMASK(6, 6)) >> 6)

#define AFI_TTI_TIMER_JITTER(x)                  (((x) << 4) & GENMASK(5, 4))
#define AFI_TTI_TIMER_JITTER_M                   GENMASK(5, 4)
#define AFI_TTI_TIMER_JITTER_X(x)                (((x) & GENMASK(5, 4)) >> 4)

#define AFI_TTI_TIMER_TICK_IDX(x)                ((x) & GENMASK(2, 0))
#define AFI_TTI_TIMER_TICK_IDX_M                 GENMASK(2, 0)
#define AFI_TTI_TIMER_TICK_IDX_X(x)              ((x) & GENMASK(2, 0))

/*      AFI:TTI_TBL:TTI_FRM */
#define AFI_TTI_FRM(g)            __REG(TARGET_AFI,\
					0, 1, 0, g, 2048, 32, 8, 0, 1, 4)

#define AFI_TTI_FRM_FRM_PTR(x)                   ((x) & GENMASK(10, 0))
#define AFI_TTI_FRM_FRM_PTR_M                    GENMASK(10, 0)
#define AFI_TTI_FRM_FRM_PTR_X(x)                 ((x) & GENMASK(10, 0))

/*      AFI:TTI_TBL:TTI_TICKS */
#define AFI_TTI_TICKS(g)          __REG(TARGET_AFI,\
					0, 1, 0, g, 2048, 32, 12, 0, 1, 4)

#define AFI_TTI_TICKS_LAST_TICK_ERA(x)           (((x) << 16) & GENMASK(16, 16))
#define AFI_TTI_TICKS_LAST_TICK_ERA_M            GENMASK(16, 16)
#define AFI_TTI_TICKS_LAST_TICK_ERA_X(x)         (((x) & GENMASK(16, 16)) >> 16)

#define AFI_TTI_TICKS_TICK_CNT(x)                ((x) & GENMASK(8, 0))
#define AFI_TTI_TICKS_TICK_CNT_M                 GENMASK(8, 0)
#define AFI_TTI_TICKS_TICK_CNT_X(x)              ((x) & GENMASK(8, 0))

/*      AFI:TTI_TBL:TTI_MISC_CFG */
#define AFI_TTI_MISC_CFG(g)       __REG(TARGET_AFI,\
					0, 1, 0, g, 2048, 32, 16, 0, 1, 4)

#define AFI_TTI_MISC_CFG_INJ_CNT_ENA(x)          ((x) & GENMASK(0, 0))
#define AFI_TTI_MISC_CFG_INJ_CNT_ENA_M           GENMASK(0, 0)
#define AFI_TTI_MISC_CFG_INJ_CNT_ENA_X(x)        ((x) & GENMASK(0, 0))

/*      AFI:TTI_TICKS:TTI_TICK_BASE */
#define AFI_TTI_TICK_BASE         __REG(TARGET_AFI,\
					0, 1, 99120, 0, 1, 44, 0, 0, 1, 4)

#define AFI_TTI_TICK_BASE_BASE_CNT(x)            (((x) << 16) & GENMASK(29, 16))
#define AFI_TTI_TICK_BASE_BASE_CNT_M             GENMASK(29, 16)
#define AFI_TTI_TICK_BASE_BASE_CNT_X(x)          (((x) & GENMASK(29, 16)) >> 16)

#define AFI_TTI_TICK_BASE_BASE_LEN(x)            ((x) & GENMASK(13, 0))
#define AFI_TTI_TICK_BASE_BASE_LEN_M             GENMASK(13, 0)
#define AFI_TTI_TICK_BASE_BASE_LEN_X(x)          ((x) & GENMASK(13, 0))

/*      AFI:TTI_TICKS:TTI_TICK_LEN_0_3 */
#define AFI_TTI_TICK_LEN_0_3      __REG(TARGET_AFI,\
					0, 1, 99120, 0, 1, 44, 4, 0, 1, 4)

#define AFI_TTI_TICK_LEN_0_3_LEN3(x)             (((x) << 24) & GENMASK(31, 24))
#define AFI_TTI_TICK_LEN_0_3_LEN3_M              GENMASK(31, 24)
#define AFI_TTI_TICK_LEN_0_3_LEN3_X(x)           (((x) & GENMASK(31, 24)) >> 24)

#define AFI_TTI_TICK_LEN_0_3_LEN2(x)             (((x) << 16) & GENMASK(23, 16))
#define AFI_TTI_TICK_LEN_0_3_LEN2_M              GENMASK(23, 16)
#define AFI_TTI_TICK_LEN_0_3_LEN2_X(x)           (((x) & GENMASK(23, 16)) >> 16)

#define AFI_TTI_TICK_LEN_0_3_LEN1(x)             (((x) << 8) & GENMASK(15, 8))
#define AFI_TTI_TICK_LEN_0_3_LEN1_M              GENMASK(15, 8)
#define AFI_TTI_TICK_LEN_0_3_LEN1_X(x)           (((x) & GENMASK(15, 8)) >> 8)

#define AFI_TTI_TICK_LEN_0_3_LEN0(x)             ((x) & GENMASK(7, 0))
#define AFI_TTI_TICK_LEN_0_3_LEN0_M              GENMASK(7, 0)
#define AFI_TTI_TICK_LEN_0_3_LEN0_X(x)           ((x) & GENMASK(7, 0))

/*      AFI:TTI_TICKS:TTI_TICK_LEN_4_7 */
#define AFI_TTI_TICK_LEN_4_7      __REG(TARGET_AFI,\
					0, 1, 99120, 0, 1, 44, 8, 0, 1, 4)

#define AFI_TTI_TICK_LEN_4_7_LEN7(x)             (((x) << 24) & GENMASK(31, 24))
#define AFI_TTI_TICK_LEN_4_7_LEN7_M              GENMASK(31, 24)
#define AFI_TTI_TICK_LEN_4_7_LEN7_X(x)           (((x) & GENMASK(31, 24)) >> 24)

#define AFI_TTI_TICK_LEN_4_7_LEN6(x)             (((x) << 16) & GENMASK(23, 16))
#define AFI_TTI_TICK_LEN_4_7_LEN6_M              GENMASK(23, 16)
#define AFI_TTI_TICK_LEN_4_7_LEN6_X(x)           (((x) & GENMASK(23, 16)) >> 16)

#define AFI_TTI_TICK_LEN_4_7_LEN5(x)             (((x) << 8) & GENMASK(15, 8))
#define AFI_TTI_TICK_LEN_4_7_LEN5_M              GENMASK(15, 8)
#define AFI_TTI_TICK_LEN_4_7_LEN5_X(x)           (((x) & GENMASK(15, 8)) >> 8)

#define AFI_TTI_TICK_LEN_4_7_LEN4(x)             ((x) & GENMASK(7, 0))
#define AFI_TTI_TICK_LEN_4_7_LEN4_M              GENMASK(7, 0)
#define AFI_TTI_TICK_LEN_4_7_LEN4_X(x)           ((x) & GENMASK(7, 0))

/*      AFI:TTI_TICKS:TTI_TICK_STATE */
#define AFI_TTI_TICK_STATE(r)     __REG(TARGET_AFI,\
					0, 1, 99120, 0, 1, 44, 12, r, 8, 4)

#define AFI_TTI_TICK_STATE_TICK_ERA(x)           (((x) << 16) & GENMASK(16, 16))
#define AFI_TTI_TICK_STATE_TICK_ERA_M            GENMASK(16, 16)
#define AFI_TTI_TICK_STATE_TICK_ERA_X(x)         (((x) & GENMASK(16, 16)) >> 16)

#define AFI_TTI_TICK_STATE_TICK_CNT(x)           ((x) & GENMASK(7, 0))
#define AFI_TTI_TICK_STATE_TICK_CNT_M            GENMASK(7, 0)
#define AFI_TTI_TICK_STATE_TICK_CNT_X(x)         ((x) & GENMASK(7, 0))

/*      AFI:TTI_MISC:TTI_CAL_SLOT_PTR */
#define AFI_TTI_CAL_SLOT_PTR(r)   __REG(TARGET_AFI,\
					0, 1, 99164, 0, 1, 64, 0, r, 4, 4)

#define AFI_TTI_CAL_SLOT_PTR_SLOT_END_PTR(x)     (((x) << 16) & GENMASK(26, 16))
#define AFI_TTI_CAL_SLOT_PTR_SLOT_END_PTR_M      GENMASK(26, 16)
#define AFI_TTI_CAL_SLOT_PTR_SLOT_END_PTR_X(x)   (((x) & GENMASK(26, 16)) >> 16)

#define AFI_TTI_CAL_SLOT_PTR_SLOT_START_PTR(x)   ((x) & GENMASK(10, 0))
#define AFI_TTI_CAL_SLOT_PTR_SLOT_START_PTR_M    GENMASK(10, 0)
#define AFI_TTI_CAL_SLOT_PTR_SLOT_START_PTR_X(x) ((x) & GENMASK(10, 0))

/*      AFI:TTI_MISC:TTI_CAL_SLOT_CNT */
#define AFI_TTI_CAL_SLOT_CNT(r)   __REG(TARGET_AFI,\
					0, 1, 99164, 0, 1, 64, 16, r, 4, 4)

#define AFI_TTI_CAL_SLOT_CNT_SLOT_CNT(x)         ((x) & GENMASK(7, 0))
#define AFI_TTI_CAL_SLOT_CNT_SLOT_CNT_M          GENMASK(7, 0)
#define AFI_TTI_CAL_SLOT_CNT_SLOT_CNT_X(x)       ((x) & GENMASK(7, 0))

/*      AFI:TTI_MISC:TTI_CAL_STATE */
#define AFI_TTI_CAL_STATE(r)      __REG(TARGET_AFI,\
					0, 1, 99164, 0, 1, 64, 32, r, 4, 4)

#define AFI_TTI_CAL_STATE_SLOT_TIME_MAX(x)       (((x) << 16) & GENMASK(30, 16))
#define AFI_TTI_CAL_STATE_SLOT_TIME_MAX_M        GENMASK(30, 16)
#define AFI_TTI_CAL_STATE_SLOT_TIME_MAX_X(x)     (((x) & GENMASK(30, 16)) >> 16)

#define AFI_TTI_CAL_STATE_SLOT_TTI_TBL_PTR(x)    ((x) & GENMASK(10, 0))
#define AFI_TTI_CAL_STATE_SLOT_TTI_TBL_PTR_M     GENMASK(10, 0)
#define AFI_TTI_CAL_STATE_SLOT_TTI_TBL_PTR_X(x)  ((x) & GENMASK(10, 0))

/*      AFI:TTI_MISC:TTI_CTRL */
#define AFI_TTI_CTRL              __REG(TARGET_AFI,\
					0, 1, 99164, 0, 1, 64, 48, 0, 1, 4)

#define AFI_TTI_CTRL_TTI_CAL_CNT(x)              (((x) << 20) & GENMASK(27, 20))
#define AFI_TTI_CTRL_TTI_CAL_CNT_M               GENMASK(27, 20)
#define AFI_TTI_CTRL_TTI_CAL_CNT_X(x)            (((x) & GENMASK(27, 20)) >> 20)

#define AFI_TTI_CTRL_TTI_CAL_PTR(x)              (((x) << 16) & GENMASK(17, 16))
#define AFI_TTI_CTRL_TTI_CAL_PTR_M               GENMASK(17, 16)
#define AFI_TTI_CTRL_TTI_CAL_PTR_X(x)            (((x) & GENMASK(17, 16)) >> 16)

#define AFI_TTI_CTRL_TTI_CSR_RSV(x)              (((x) << 8) & GENMASK(15, 8))
#define AFI_TTI_CTRL_TTI_CSR_RSV_M               GENMASK(15, 8)
#define AFI_TTI_CTRL_TTI_CSR_RSV_X(x)            (((x) & GENMASK(15, 8)) >> 8)

#define AFI_TTI_CTRL_TTI_CAL_LEN(x)              (((x) << 4) & GENMASK(5, 4))
#define AFI_TTI_CTRL_TTI_CAL_LEN_M               GENMASK(5, 4)
#define AFI_TTI_CTRL_TTI_CAL_LEN_X(x)            (((x) & GENMASK(5, 4)) >> 4)

#define AFI_TTI_CTRL_TTI_SERIAL_ENA(x)           (((x) << 2) & GENMASK(2, 2))
#define AFI_TTI_CTRL_TTI_SERIAL_ENA_M            GENMASK(2, 2)
#define AFI_TTI_CTRL_TTI_SERIAL_ENA_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define AFI_TTI_CTRL_TTI_INIT(x)                 (((x) << 1) & GENMASK(1, 1))
#define AFI_TTI_CTRL_TTI_INIT_M                  GENMASK(1, 1)
#define AFI_TTI_CTRL_TTI_INIT_X(x)               (((x) & GENMASK(1, 1)) >> 1)

#define AFI_TTI_CTRL_TTI_ENA(x)                  ((x) & GENMASK(0, 0))
#define AFI_TTI_CTRL_TTI_ENA_M                   GENMASK(0, 0)
#define AFI_TTI_CTRL_TTI_ENA_X(x)                ((x) & GENMASK(0, 0))

/*      AFI:TTI_MISC:TTI_INJ_CNT */
#define AFI_TTI_INJ_CNT           __REG(TARGET_AFI,\
					0, 1, 99164, 0, 1, 64, 52, 0, 1, 4)

#define AFI_TTI_INJ_CNT_TTI_INJ_CNT(x)           ((x) & GENMASK(29, 0))
#define AFI_TTI_INJ_CNT_TTI_INJ_CNT_M            GENMASK(29, 0)
#define AFI_TTI_INJ_CNT_TTI_INJ_CNT_X(x)         ((x) & GENMASK(29, 0))

/*      AFI:TTI_MISC:TTI_RAND_STATE */
#define AFI_TTI_RAND_STATE        __REG(TARGET_AFI,\
					0, 1, 99164, 0, 1, 64, 56, 0, 1, 4)

#define AFI_TTI_RAND_STATE_TTI_RAND_STATE(x)     ((x) & GENMASK(17, 0))
#define AFI_TTI_RAND_STATE_TTI_RAND_STATE_M      GENMASK(17, 0)
#define AFI_TTI_RAND_STATE_TTI_RAND_STATE_X(x)   ((x) & GENMASK(17, 0))

/*      AFI:TTI_MISC:TTI_PORT_FRM_OUT */
#define AFI_TTI_PORT_FRM_OUT      __REG(TARGET_AFI,\
					0, 1, 99164, 0, 1, 64, 60, 0, 1, 4)

#define AFI_TTI_PORT_FRM_OUT_MAX(x)              ((x) & GENMASK(9, 0))
#define AFI_TTI_PORT_FRM_OUT_MAX_M               GENMASK(9, 0)
#define AFI_TTI_PORT_FRM_OUT_MAX_X(x)            ((x) & GENMASK(9, 0))

/*      AFI:PORT_TBL:PORT_FRM_OUT */
#define AFI_PORT_FRM_OUT(g)       __REG(TARGET_AFI,\
					0, 1, 98816, g, 10, 8, 0, 0, 1, 4)

#define AFI_PORT_FRM_OUT_FRM_OUT_CNT(x)          (((x) << 16) & GENMASK(26, 16))
#define AFI_PORT_FRM_OUT_FRM_OUT_CNT_M           GENMASK(26, 16)
#define AFI_PORT_FRM_OUT_FRM_OUT_CNT_X(x)        (((x) & GENMASK(26, 16)) >> 16)

/*      AFI:PORT_TBL:PORT_CFG */
#define AFI_PORT_CFG(g)           __REG(TARGET_AFI,\
					0, 1, 98816, g, 10, 8, 4, 0, 1, 4)

#define AFI_PORT_CFG_FC_SKIP_TTI_INJ(x)          (((x) << 16) & GENMASK(16, 16))
#define AFI_PORT_CFG_FC_SKIP_TTI_INJ_M           GENMASK(16, 16)
#define AFI_PORT_CFG_FC_SKIP_TTI_INJ_X(x)        (((x) & GENMASK(16, 16)) >> 16)

#define AFI_PORT_CFG_FRM_OUT_MAX(x)              ((x) & GENMASK(9, 0))
#define AFI_PORT_CFG_FRM_OUT_MAX_M               GENMASK(9, 0)
#define AFI_PORT_CFG_FRM_OUT_MAX_X(x)            ((x) & GENMASK(9, 0))

/*      ANA:ANA:ADVLEARN */
#define ANA_ADVLEARN              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 0, 0, 1, 4)

#define ANA_ADVLEARN_VLAN_CHK(x)                 ((x) & GENMASK(0, 0))
#define ANA_ADVLEARN_VLAN_CHK_M                  GENMASK(0, 0)
#define ANA_ADVLEARN_VLAN_CHK_X(x)               ((x) & GENMASK(0, 0))

/*      ANA:ANA:LEARN_MIRROR */
#define ANA_LEARN_MIRROR          __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 4, 0, 1, 4)

#define ANA_LEARN_MIRROR_LEARN_MIRROR(x)         ((x) & GENMASK(7, 0))
#define ANA_LEARN_MIRROR_LEARN_MIRROR_M          GENMASK(7, 0)
#define ANA_LEARN_MIRROR_LEARN_MIRROR_X(x)       ((x) & GENMASK(7, 0))

/*      ANA:ANA:VLANMASK */
#define ANA_VLANMASK              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 8, 0, 1, 4)

#define ANA_VLANMASK_VLANMASK(x)                 ((x) & GENMASK(8, 0))
#define ANA_VLANMASK_VLANMASK_M                  GENMASK(8, 0)
#define ANA_VLANMASK_VLANMASK_X(x)               ((x) & GENMASK(8, 0))

/*      ANA:ANA:ANAGEFIL */
#define ANA_ANAGEFIL              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 12, 0, 1, 4)

#define ANA_ANAGEFIL_AGE_LOCKED(x)               (((x) << 20) & GENMASK(20, 20))
#define ANA_ANAGEFIL_AGE_LOCKED_M                GENMASK(20, 20)
#define ANA_ANAGEFIL_AGE_LOCKED_X(x)             (((x) & GENMASK(20, 20)) >> 20)

#define ANA_ANAGEFIL_PID_EN(x)                   (((x) << 19) & GENMASK(19, 19))
#define ANA_ANAGEFIL_PID_EN_M                    GENMASK(19, 19)
#define ANA_ANAGEFIL_PID_EN_X(x)                 (((x) & GENMASK(19, 19)) >> 19)

#define ANA_ANAGEFIL_PID_VAL(x)                  (((x) << 14) & GENMASK(18, 14))
#define ANA_ANAGEFIL_PID_VAL_M                   GENMASK(18, 14)
#define ANA_ANAGEFIL_PID_VAL_X(x)                (((x) & GENMASK(18, 14)) >> 14)

#define ANA_ANAGEFIL_VID_EN(x)                   (((x) << 13) & GENMASK(13, 13))
#define ANA_ANAGEFIL_VID_EN_M                    GENMASK(13, 13)
#define ANA_ANAGEFIL_VID_EN_X(x)                 (((x) & GENMASK(13, 13)) >> 13)

#define ANA_ANAGEFIL_VID_VAL(x)                  ((x) & GENMASK(12, 0))
#define ANA_ANAGEFIL_VID_VAL_M                   GENMASK(12, 0)
#define ANA_ANAGEFIL_VID_VAL_X(x)                ((x) & GENMASK(12, 0))

/*      ANA:ANA:ANAINTR */
#define ANA_ANAINTR               __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 16, 0, 1, 4)

#define ANA_ANAINTR_INTR(x)                      (((x) << 1) & GENMASK(1, 1))
#define ANA_ANAINTR_INTR_M                       GENMASK(1, 1)
#define ANA_ANAINTR_INTR_X(x)                    (((x) & GENMASK(1, 1)) >> 1)

#define ANA_ANAINTR_INTR_ENA(x)                  ((x) & GENMASK(0, 0))
#define ANA_ANAINTR_INTR_ENA_M                   GENMASK(0, 0)
#define ANA_ANAINTR_INTR_ENA_X(x)                ((x) & GENMASK(0, 0))

/*      ANA:ANA:ANEVENTS */
#define ANA_ANEVENTS              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 20, 0, 1, 4)

#define ANA_ANEVENTS_CHANGE2SW(x)                (((x) << 31) & GENMASK(31, 31))
#define ANA_ANEVENTS_CHANGE2SW_M                 GENMASK(31, 31)
#define ANA_ANEVENTS_CHANGE2SW_X(x)              (((x) & GENMASK(31, 31)) >> 31)

#define ANA_ANEVENTS_LLCT_PORT_ERR(x)            (((x) << 30) & GENMASK(30, 30))
#define ANA_ANEVENTS_LLCT_PORT_ERR_M             GENMASK(30, 30)
#define ANA_ANEVENTS_LLCT_PORT_ERR_X(x)          (((x) & GENMASK(30, 30)) >> 30)

#define ANA_ANEVENTS_RT_FWD(x)                   (((x) << 29) & GENMASK(29, 29))
#define ANA_ANEVENTS_RT_FWD_M                    GENMASK(29, 29)
#define ANA_ANEVENTS_RT_FWD_X(x)                 (((x) & GENMASK(29, 29)) >> 29)

#define ANA_ANEVENTS_FLOOD_DISCARD(x)            (((x) << 28) & GENMASK(28, 28))
#define ANA_ANEVENTS_FLOOD_DISCARD_M             GENMASK(28, 28)
#define ANA_ANEVENTS_FLOOD_DISCARD_X(x)          (((x) & GENMASK(28, 28)) >> 28)

#define ANA_ANEVENTS_MSTI_DROP(x)                (((x) << 27) & GENMASK(27, 27))
#define ANA_ANEVENTS_MSTI_DROP_M                 GENMASK(27, 27)
#define ANA_ANEVENTS_MSTI_DROP_X(x)              (((x) & GENMASK(27, 27)) >> 27)

#define ANA_ANEVENTS_ACLKILL(x)                  (((x) << 26) & GENMASK(26, 26))
#define ANA_ANEVENTS_ACLKILL_M                   GENMASK(26, 26)
#define ANA_ANEVENTS_ACLKILL_X(x)                (((x) & GENMASK(26, 26)) >> 26)

#define ANA_ANEVENTS_ACLUSED(x)                  (((x) << 25) & GENMASK(25, 25))
#define ANA_ANEVENTS_ACLUSED_M                   GENMASK(25, 25)
#define ANA_ANEVENTS_ACLUSED_X(x)                (((x) & GENMASK(25, 25)) >> 25)

#define ANA_ANEVENTS_AUTOAGE(x)                  (((x) << 24) & GENMASK(24, 24))
#define ANA_ANEVENTS_AUTOAGE_M                   GENMASK(24, 24)
#define ANA_ANEVENTS_AUTOAGE_X(x)                (((x) & GENMASK(24, 24)) >> 24)

#define ANA_ANEVENTS_LEARN_DROP(x)               (((x) << 23) & GENMASK(23, 23))
#define ANA_ANEVENTS_LEARN_DROP_M                GENMASK(23, 23)
#define ANA_ANEVENTS_LEARN_DROP_X(x)             (((x) & GENMASK(23, 23)) >> 23)

#define ANA_ANEVENTS_AGED_ENTRY(x)               (((x) << 22) & GENMASK(22, 22))
#define ANA_ANEVENTS_AGED_ENTRY_M                GENMASK(22, 22)
#define ANA_ANEVENTS_AGED_ENTRY_X(x)             (((x) & GENMASK(22, 22)) >> 22)

#define ANA_ANEVENTS_CPU_LEARN_FAILED(x)         (((x) << 21) & GENMASK(21, 21))
#define ANA_ANEVENTS_CPU_LEARN_FAILED_M          GENMASK(21, 21)
#define ANA_ANEVENTS_CPU_LEARN_FAILED_X(x)       (((x) & GENMASK(21, 21)) >> 21)

#define ANA_ANEVENTS_AUTO_LEARN_FAILED(x)        (((x) << 20) & GENMASK(20, 20))
#define ANA_ANEVENTS_AUTO_LEARN_FAILED_M         GENMASK(20, 20)
#define ANA_ANEVENTS_AUTO_LEARN_FAILED_X(x)      (((x) & GENMASK(20, 20)) >> 20)

#define ANA_ANEVENTS_LEARN_REMOVE(x)             (((x) << 19) & GENMASK(19, 19))
#define ANA_ANEVENTS_LEARN_REMOVE_M              GENMASK(19, 19)
#define ANA_ANEVENTS_LEARN_REMOVE_X(x)           (((x) & GENMASK(19, 19)) >> 19)

#define ANA_ANEVENTS_AUTO_LEARNED(x)             (((x) << 18) & GENMASK(18, 18))
#define ANA_ANEVENTS_AUTO_LEARNED_M              GENMASK(18, 18)
#define ANA_ANEVENTS_AUTO_LEARNED_X(x)           (((x) & GENMASK(18, 18)) >> 18)

#define ANA_ANEVENTS_AUTO_MOVED(x)               (((x) << 17) & GENMASK(17, 17))
#define ANA_ANEVENTS_AUTO_MOVED_M                GENMASK(17, 17)
#define ANA_ANEVENTS_AUTO_MOVED_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define ANA_ANEVENTS_DROPPED(x)                  (((x) << 16) & GENMASK(16, 16))
#define ANA_ANEVENTS_DROPPED_M                   GENMASK(16, 16)
#define ANA_ANEVENTS_DROPPED_X(x)                (((x) & GENMASK(16, 16)) >> 16)

#define ANA_ANEVENTS_CLASSIFIED_DROP(x)          (((x) << 15) & GENMASK(15, 15))
#define ANA_ANEVENTS_CLASSIFIED_DROP_M           GENMASK(15, 15)
#define ANA_ANEVENTS_CLASSIFIED_DROP_X(x)        (((x) & GENMASK(15, 15)) >> 15)

#define ANA_ANEVENTS_CLASSIFIED_COPY(x)          (((x) << 14) & GENMASK(14, 14))
#define ANA_ANEVENTS_CLASSIFIED_COPY_M           GENMASK(14, 14)
#define ANA_ANEVENTS_CLASSIFIED_COPY_X(x)        (((x) & GENMASK(14, 14)) >> 14)

#define ANA_ANEVENTS_VLAN_DISCARD(x)             (((x) << 13) & GENMASK(13, 13))
#define ANA_ANEVENTS_VLAN_DISCARD_M              GENMASK(13, 13)
#define ANA_ANEVENTS_VLAN_DISCARD_X(x)           (((x) & GENMASK(13, 13)) >> 13)

#define ANA_ANEVENTS_FWD_DISCARD(x)              (((x) << 12) & GENMASK(12, 12))
#define ANA_ANEVENTS_FWD_DISCARD_M               GENMASK(12, 12)
#define ANA_ANEVENTS_FWD_DISCARD_X(x)            (((x) & GENMASK(12, 12)) >> 12)

#define ANA_ANEVENTS_MULTICAST_FLOOD(x)          (((x) << 11) & GENMASK(11, 11))
#define ANA_ANEVENTS_MULTICAST_FLOOD_M           GENMASK(11, 11)
#define ANA_ANEVENTS_MULTICAST_FLOOD_X(x)        (((x) & GENMASK(11, 11)) >> 11)

#define ANA_ANEVENTS_UNICAST_FLOOD(x)            (((x) << 10) & GENMASK(10, 10))
#define ANA_ANEVENTS_UNICAST_FLOOD_M             GENMASK(10, 10)
#define ANA_ANEVENTS_UNICAST_FLOOD_X(x)          (((x) & GENMASK(10, 10)) >> 10)

#define ANA_ANEVENTS_DEST_KNOWN(x)               (((x) << 9) & GENMASK(9, 9))
#define ANA_ANEVENTS_DEST_KNOWN_M                GENMASK(9, 9)
#define ANA_ANEVENTS_DEST_KNOWN_X(x)             (((x) & GENMASK(9, 9)) >> 9)

#define ANA_ANEVENTS_BUCKET3_MATCH(x)            (((x) << 8) & GENMASK(8, 8))
#define ANA_ANEVENTS_BUCKET3_MATCH_M             GENMASK(8, 8)
#define ANA_ANEVENTS_BUCKET3_MATCH_X(x)          (((x) & GENMASK(8, 8)) >> 8)

#define ANA_ANEVENTS_BUCKET2_MATCH(x)            (((x) << 7) & GENMASK(7, 7))
#define ANA_ANEVENTS_BUCKET2_MATCH_M             GENMASK(7, 7)
#define ANA_ANEVENTS_BUCKET2_MATCH_X(x)          (((x) & GENMASK(7, 7)) >> 7)

#define ANA_ANEVENTS_BUCKET1_MATCH(x)            (((x) << 6) & GENMASK(6, 6))
#define ANA_ANEVENTS_BUCKET1_MATCH_M             GENMASK(6, 6)
#define ANA_ANEVENTS_BUCKET1_MATCH_X(x)          (((x) & GENMASK(6, 6)) >> 6)

#define ANA_ANEVENTS_BUCKET0_MATCH(x)            (((x) << 5) & GENMASK(5, 5))
#define ANA_ANEVENTS_BUCKET0_MATCH_M             GENMASK(5, 5)
#define ANA_ANEVENTS_BUCKET0_MATCH_X(x)          (((x) & GENMASK(5, 5)) >> 5)

#define ANA_ANEVENTS_CPU_OPERATION(x)            (((x) << 4) & GENMASK(4, 4))
#define ANA_ANEVENTS_CPU_OPERATION_M             GENMASK(4, 4)
#define ANA_ANEVENTS_CPU_OPERATION_X(x)          (((x) & GENMASK(4, 4)) >> 4)

#define ANA_ANEVENTS_DMAC_LOOKUP(x)              (((x) << 3) & GENMASK(3, 3))
#define ANA_ANEVENTS_DMAC_LOOKUP_M               GENMASK(3, 3)
#define ANA_ANEVENTS_DMAC_LOOKUP_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define ANA_ANEVENTS_SMAC_LOOKUP(x)              (((x) << 2) & GENMASK(2, 2))
#define ANA_ANEVENTS_SMAC_LOOKUP_M               GENMASK(2, 2)
#define ANA_ANEVENTS_SMAC_LOOKUP_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define ANA_ANEVENTS_SEQ_GEN_ERR_0(x)            (((x) << 1) & GENMASK(1, 1))
#define ANA_ANEVENTS_SEQ_GEN_ERR_0_M             GENMASK(1, 1)
#define ANA_ANEVENTS_SEQ_GEN_ERR_0_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define ANA_ANEVENTS_SEQ_GEN_ERR_1(x)            ((x) & GENMASK(0, 0))
#define ANA_ANEVENTS_SEQ_GEN_ERR_1_M             GENMASK(0, 0)
#define ANA_ANEVENTS_SEQ_GEN_ERR_1_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:ANA:ANEVENTS2 */
#define ANA_ANEVENTS2             __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 24, 0, 1, 4)

#define ANA_ANEVENTS2_PMAC_DEST_KNOWN(x)         ((x) & GENMASK(0, 0))
#define ANA_ANEVENTS2_PMAC_DEST_KNOWN_M          GENMASK(0, 0)
#define ANA_ANEVENTS2_PMAC_DEST_KNOWN_X(x)       ((x) & GENMASK(0, 0))

/*      ANA:ANA:RT_EVENTS */
#define ANA_RT_EVENTS(r)          __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 28, r, 2, 4)

#define ANA_RT_EVENTS_LLCT_ERR(x)                (((x) << 7) & GENMASK(7, 7))
#define ANA_RT_EVENTS_LLCT_ERR_M                 GENMASK(7, 7)
#define ANA_RT_EVENTS_LLCT_ERR_X(x)              (((x) & GENMASK(7, 7)) >> 7)

#define ANA_RT_EVENTS_PORTMOVE(x)                (((x) << 6) & GENMASK(6, 6))
#define ANA_RT_EVENTS_PORTMOVE_M                 GENMASK(6, 6)
#define ANA_RT_EVENTS_PORTMOVE_X(x)              (((x) & GENMASK(6, 6)) >> 6)

#define ANA_RT_EVENTS_DST_FILTER(x)              (((x) << 5) & GENMASK(5, 5))
#define ANA_RT_EVENTS_DST_FILTER_M               GENMASK(5, 5)
#define ANA_RT_EVENTS_DST_FILTER_X(x)            (((x) & GENMASK(5, 5)) >> 5)

#define ANA_RT_EVENTS_SRC_FILTER(x)              (((x) << 4) & GENMASK(4, 4))
#define ANA_RT_EVENTS_SRC_FILTER_M               GENMASK(4, 4)
#define ANA_RT_EVENTS_SRC_FILTER_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define ANA_RT_EVENTS_DA_UC_UNKNOWN(x)           (((x) << 3) & GENMASK(3, 3))
#define ANA_RT_EVENTS_DA_UC_UNKNOWN_M            GENMASK(3, 3)
#define ANA_RT_EVENTS_DA_UC_UNKNOWN_X(x)         (((x) & GENMASK(3, 3)) >> 3)

#define ANA_RT_EVENTS_DA_MC_UNKNOWN(x)           (((x) << 2) & GENMASK(2, 2))
#define ANA_RT_EVENTS_DA_MC_UNKNOWN_M            GENMASK(2, 2)
#define ANA_RT_EVENTS_DA_MC_UNKNOWN_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define ANA_RT_EVENTS_SA_UNKNOWN(x)              (((x) << 1) & GENMASK(1, 1))
#define ANA_RT_EVENTS_SA_UNKNOWN_M               GENMASK(1, 1)
#define ANA_RT_EVENTS_SA_UNKNOWN_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define ANA_RT_EVENTS_SA_FWD(x)                  ((x) & GENMASK(0, 0))
#define ANA_RT_EVENTS_SA_FWD_M                   GENMASK(0, 0)
#define ANA_RT_EVENTS_SA_FWD_X(x)                ((x) & GENMASK(0, 0))

/*      ANA:ANA:ISOLATED_PORTS */
#define ANA_ISOLATED_PORTS        __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 36, 0, 1, 4)

#define ANA_ISOLATED_PORTS_ISOL_PORTS(x)         ((x) & GENMASK(8, 0))
#define ANA_ISOLATED_PORTS_ISOL_PORTS_M          GENMASK(8, 0)
#define ANA_ISOLATED_PORTS_ISOL_PORTS_X(x)       ((x) & GENMASK(8, 0))

/*      ANA:ANA:COMMUNITY_PORTS */
#define ANA_COMMUNITY_PORTS       __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 40, 0, 1, 4)

#define ANA_COMMUNITY_PORTS_COMM_PORTS(x)        ((x) & GENMASK(8, 0))
#define ANA_COMMUNITY_PORTS_COMM_PORTS_M         GENMASK(8, 0)
#define ANA_COMMUNITY_PORTS_COMM_PORTS_X(x)      ((x) & GENMASK(8, 0))

/*      ANA:ANA:AUTOAGE */
#define ANA_AUTOAGE               __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 44, 0, 1, 4)

#define ANA_AUTOAGE_AGE_FAST(x)                  (((x) << 21) & GENMASK(21, 21))
#define ANA_AUTOAGE_AGE_FAST_M                   GENMASK(21, 21)
#define ANA_AUTOAGE_AGE_FAST_X(x)                (((x) & GENMASK(21, 21)) >> 21)

#define ANA_AUTOAGE_AGE_PERIOD(x)                (((x) << 1) & GENMASK(20, 1))
#define ANA_AUTOAGE_AGE_PERIOD_M                 GENMASK(20, 1)
#define ANA_AUTOAGE_AGE_PERIOD_X(x)              (((x) & GENMASK(20, 1)) >> 1)

#define ANA_AUTOAGE_AUTOAGE_LOCKED(x)            ((x) & GENMASK(0, 0))
#define ANA_AUTOAGE_AUTOAGE_LOCKED_M             GENMASK(0, 0)
#define ANA_AUTOAGE_AUTOAGE_LOCKED_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:ANA:MACTOPTIONS */
#define ANA_MACTOPTIONS           __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 48, 0, 1, 4)

#define ANA_MACTOPTIONS_REDUCED_TABLE(x)         (((x) << 1) & GENMASK(1, 1))
#define ANA_MACTOPTIONS_REDUCED_TABLE_M          GENMASK(1, 1)
#define ANA_MACTOPTIONS_REDUCED_TABLE_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define ANA_MACTOPTIONS_SHADOW(x)                ((x) & GENMASK(0, 0))
#define ANA_MACTOPTIONS_SHADOW_M                 GENMASK(0, 0)
#define ANA_MACTOPTIONS_SHADOW_X(x)              ((x) & GENMASK(0, 0))

/*      ANA:ANA:LEARNDISC */
#define ANA_LEARNDISC             __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 52, 0, 1, 4)

/*      ANA:ANA:AGENCTRL */
#define ANA_AGENCTRL              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 56, 0, 1, 4)

#define ANA_AGENCTRL_APPLY_SPLIT_MASK(x)         (((x) << 24) & GENMASK(24, 24))
#define ANA_AGENCTRL_APPLY_SPLIT_MASK_M          GENMASK(24, 24)
#define ANA_AGENCTRL_APPLY_SPLIT_MASK_X(x)       (((x) & GENMASK(24, 24)) >> 24)

#define ANA_AGENCTRL_FID_MASK(x)                 (((x) << 12) & GENMASK(23, 12))
#define ANA_AGENCTRL_FID_MASK_M                  GENMASK(23, 12)
#define ANA_AGENCTRL_FID_MASK_X(x)               (((x) & GENMASK(23, 12)) >> 12)

#define ANA_AGENCTRL_IGNORE_DMAC_FLAGS(x)        (((x) << 11) & GENMASK(11, 11))
#define ANA_AGENCTRL_IGNORE_DMAC_FLAGS_M         GENMASK(11, 11)
#define ANA_AGENCTRL_IGNORE_DMAC_FLAGS_X(x)      (((x) & GENMASK(11, 11)) >> 11)

#define ANA_AGENCTRL_IGNORE_SMAC_FLAGS(x)        (((x) << 10) & GENMASK(10, 10))
#define ANA_AGENCTRL_IGNORE_SMAC_FLAGS_M         GENMASK(10, 10)
#define ANA_AGENCTRL_IGNORE_SMAC_FLAGS_X(x)      (((x) & GENMASK(10, 10)) >> 10)

#define ANA_AGENCTRL_FLOOD_SPECIAL(x)            (((x) << 9) & GENMASK(9, 9))
#define ANA_AGENCTRL_FLOOD_SPECIAL_M             GENMASK(9, 9)
#define ANA_AGENCTRL_FLOOD_SPECIAL_X(x)          (((x) & GENMASK(9, 9)) >> 9)

#define ANA_AGENCTRL_FLOOD_IGNORE_VLAN(x)        (((x) << 8) & GENMASK(8, 8))
#define ANA_AGENCTRL_FLOOD_IGNORE_VLAN_M         GENMASK(8, 8)
#define ANA_AGENCTRL_FLOOD_IGNORE_VLAN_X(x)      (((x) & GENMASK(8, 8)) >> 8)

#define ANA_AGENCTRL_MIRROR_CPU(x)               (((x) << 7) & GENMASK(7, 7))
#define ANA_AGENCTRL_MIRROR_CPU_M                GENMASK(7, 7)
#define ANA_AGENCTRL_MIRROR_CPU_X(x)             (((x) & GENMASK(7, 7)) >> 7)

#define ANA_AGENCTRL_LEARN_CPU_COPY(x)           (((x) << 6) & GENMASK(6, 6))
#define ANA_AGENCTRL_LEARN_CPU_COPY_M            GENMASK(6, 6)
#define ANA_AGENCTRL_LEARN_CPU_COPY_X(x)         (((x) & GENMASK(6, 6)) >> 6)

#define ANA_AGENCTRL_LEARN_FWD_KILL(x)           (((x) << 5) & GENMASK(5, 5))
#define ANA_AGENCTRL_LEARN_FWD_KILL_M            GENMASK(5, 5)
#define ANA_AGENCTRL_LEARN_FWD_KILL_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define ANA_AGENCTRL_LEARN_IGNORE_VLAN(x)        (((x) << 4) & GENMASK(4, 4))
#define ANA_AGENCTRL_LEARN_IGNORE_VLAN_M         GENMASK(4, 4)
#define ANA_AGENCTRL_LEARN_IGNORE_VLAN_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define ANA_AGENCTRL_CPU_CPU_KILL_ENA(x)         (((x) << 3) & GENMASK(3, 3))
#define ANA_AGENCTRL_CPU_CPU_KILL_ENA_M          GENMASK(3, 3)
#define ANA_AGENCTRL_CPU_CPU_KILL_ENA_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define ANA_AGENCTRL_GREEN_COUNT_MODE(x)         (((x) << 2) & GENMASK(2, 2))
#define ANA_AGENCTRL_GREEN_COUNT_MODE_M          GENMASK(2, 2)
#define ANA_AGENCTRL_GREEN_COUNT_MODE_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define ANA_AGENCTRL_YELLOW_COUNT_MODE(x)        (((x) << 1) & GENMASK(1, 1))
#define ANA_AGENCTRL_YELLOW_COUNT_MODE_M         GENMASK(1, 1)
#define ANA_AGENCTRL_YELLOW_COUNT_MODE_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define ANA_AGENCTRL_RED_COUNT_MODE(x)           ((x) & GENMASK(0, 0))
#define ANA_AGENCTRL_RED_COUNT_MODE_M            GENMASK(0, 0)
#define ANA_AGENCTRL_RED_COUNT_MODE_X(x)         ((x) & GENMASK(0, 0))

/*      ANA:ANA:MIRRORPORTS */
#define ANA_MIRRORPORTS           __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 60, 0, 1, 4)

#define ANA_MIRRORPORTS_MIRRORPORTS(x)           ((x) & GENMASK(8, 0))
#define ANA_MIRRORPORTS_MIRRORPORTS_M            GENMASK(8, 0)
#define ANA_MIRRORPORTS_MIRRORPORTS_X(x)         ((x) & GENMASK(8, 0))

/*      ANA:ANA:EMIRRORPORTS */
#define ANA_EMIRRORPORTS          __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 64, 0, 1, 4)

#define ANA_EMIRRORPORTS_EMIRRORPORTS(x)         ((x) & GENMASK(8, 0))
#define ANA_EMIRRORPORTS_EMIRRORPORTS_M          GENMASK(8, 0)
#define ANA_EMIRRORPORTS_EMIRRORPORTS_X(x)       ((x) & GENMASK(8, 0))

/*      ANA:ANA:FLOODING */
#define ANA_FLOODING(r)           __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 68, r, 8, 4)

#define ANA_FLOODING_FLD_UNICAST(x)              (((x) << 12) & GENMASK(17, 12))
#define ANA_FLOODING_FLD_UNICAST_M               GENMASK(17, 12)
#define ANA_FLOODING_FLD_UNICAST_X(x)            (((x) & GENMASK(17, 12)) >> 12)

#define ANA_FLOODING_FLD_BROADCAST(x)            (((x) << 6) & GENMASK(11, 6))
#define ANA_FLOODING_FLD_BROADCAST_M             GENMASK(11, 6)
#define ANA_FLOODING_FLD_BROADCAST_X(x)          (((x) & GENMASK(11, 6)) >> 6)

#define ANA_FLOODING_FLD_MULTICAST(x)            ((x) & GENMASK(5, 0))
#define ANA_FLOODING_FLD_MULTICAST_M             GENMASK(5, 0)
#define ANA_FLOODING_FLD_MULTICAST_X(x)          ((x) & GENMASK(5, 0))

/*      ANA:ANA:FLOODING_IPMC */
#define ANA_FLOODING_IPMC         __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 100, 0, 1, 4)

#define ANA_FLOODING_IPMC_FLD_MC4_CTRL(x)        (((x) << 18) & GENMASK(23, 18))
#define ANA_FLOODING_IPMC_FLD_MC4_CTRL_M         GENMASK(23, 18)
#define ANA_FLOODING_IPMC_FLD_MC4_CTRL_X(x)      (((x) & GENMASK(23, 18)) >> 18)

#define ANA_FLOODING_IPMC_FLD_MC4_DATA(x)        (((x) << 12) & GENMASK(17, 12))
#define ANA_FLOODING_IPMC_FLD_MC4_DATA_M         GENMASK(17, 12)
#define ANA_FLOODING_IPMC_FLD_MC4_DATA_X(x)      (((x) & GENMASK(17, 12)) >> 12)

#define ANA_FLOODING_IPMC_FLD_MC6_CTRL(x)        (((x) << 6) & GENMASK(11, 6))
#define ANA_FLOODING_IPMC_FLD_MC6_CTRL_M         GENMASK(11, 6)
#define ANA_FLOODING_IPMC_FLD_MC6_CTRL_X(x)      (((x) & GENMASK(11, 6)) >> 6)

#define ANA_FLOODING_IPMC_FLD_MC6_DATA(x)        ((x) & GENMASK(5, 0))
#define ANA_FLOODING_IPMC_FLD_MC6_DATA_M         GENMASK(5, 0)
#define ANA_FLOODING_IPMC_FLD_MC6_DATA_X(x)      ((x) & GENMASK(5, 0))

/*      ANA:ANA:STORM_CFG */
#define ANA_STORM_CFG             __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 104, 0, 1, 4)

#define ANA_STORM_CFG_STORM_NO_POL_DIS(x)        (((x) << 8) & GENMASK(8, 8))
#define ANA_STORM_CFG_STORM_NO_POL_DIS_M         GENMASK(8, 8)
#define ANA_STORM_CFG_STORM_NO_POL_DIS_X(x)      (((x) & GENMASK(8, 8)) >> 8)

#define ANA_STORM_CFG_STORM_IPMC_MASK(x)         (((x) << 6) & GENMASK(7, 6))
#define ANA_STORM_CFG_STORM_IPMC_MASK_M          GENMASK(7, 6)
#define ANA_STORM_CFG_STORM_IPMC_MASK_X(x)       (((x) & GENMASK(7, 6)) >> 6)

#define ANA_STORM_CFG_STORM_MC_MASK(x)           (((x) << 4) & GENMASK(5, 4))
#define ANA_STORM_CFG_STORM_MC_MASK_M            GENMASK(5, 4)
#define ANA_STORM_CFG_STORM_MC_MASK_X(x)         (((x) & GENMASK(5, 4)) >> 4)

#define ANA_STORM_CFG_STORM_BC_MASK(x)           (((x) << 2) & GENMASK(3, 2))
#define ANA_STORM_CFG_STORM_BC_MASK_M            GENMASK(3, 2)
#define ANA_STORM_CFG_STORM_BC_MASK_X(x)         (((x) & GENMASK(3, 2)) >> 2)

#define ANA_STORM_CFG_STORM_UC_MASK(x)           ((x) & GENMASK(1, 0))
#define ANA_STORM_CFG_STORM_UC_MASK_M            GENMASK(1, 0)
#define ANA_STORM_CFG_STORM_UC_MASK_X(x)         ((x) & GENMASK(1, 0))

/*      ANA:ANA:SFLOW_CFG */
#define ANA_SFLOW_CFG(r)          __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 108, r, 9, 4)

#define ANA_SFLOW_CFG_SF_RATE(x)                 (((x) << 2) & GENMASK(13, 2))
#define ANA_SFLOW_CFG_SF_RATE_M                  GENMASK(13, 2)
#define ANA_SFLOW_CFG_SF_RATE_X(x)               (((x) & GENMASK(13, 2)) >> 2)

#define ANA_SFLOW_CFG_SF_SAMPLE_RX(x)            (((x) << 1) & GENMASK(1, 1))
#define ANA_SFLOW_CFG_SF_SAMPLE_RX_M             GENMASK(1, 1)
#define ANA_SFLOW_CFG_SF_SAMPLE_RX_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define ANA_SFLOW_CFG_SF_SAMPLE_TX(x)            ((x) & GENMASK(0, 0))
#define ANA_SFLOW_CFG_SF_SAMPLE_TX_M             GENMASK(0, 0)
#define ANA_SFLOW_CFG_SF_SAMPLE_TX_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:ANA:PORT_MODE */
#define ANA_PORT_MODE(r)          __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 144, r, 10, 4)

#define ANA_PORT_MODE_REDTAG_PARSE_CFG(x)        (((x) << 3) & GENMASK(3, 3))
#define ANA_PORT_MODE_REDTAG_PARSE_CFG_M         GENMASK(3, 3)
#define ANA_PORT_MODE_REDTAG_PARSE_CFG_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define ANA_PORT_MODE_VLAN_PARSE_CFG(x)          (((x) << 1) & GENMASK(2, 1))
#define ANA_PORT_MODE_VLAN_PARSE_CFG_M           GENMASK(2, 1)
#define ANA_PORT_MODE_VLAN_PARSE_CFG_X(x)        (((x) & GENMASK(2, 1)) >> 1)

#define ANA_PORT_MODE_L3_PARSE_CFG(x)            ((x) & GENMASK(0, 0))
#define ANA_PORT_MODE_L3_PARSE_CFG_M             GENMASK(0, 0)
#define ANA_PORT_MODE_L3_PARSE_CFG_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:ANA:CUT_THRU_CFG */
#define ANA_CUT_THRU_CFG(r)       __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 184, r, 9, 4)

#define ANA_CUT_THRU_CFG_CUT_THRU_ENA(x)         ((x) & GENMASK(7, 0))
#define ANA_CUT_THRU_CFG_CUT_THRU_ENA_M          GENMASK(7, 0)
#define ANA_CUT_THRU_CFG_CUT_THRU_ENA_X(x)       ((x) & GENMASK(7, 0))

/*      ANA:ANA:TEST_UTIL */
#define ANA_TEST_UTIL             __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 220, 0, 1, 4)

#define ANA_TEST_UTIL_CT_ETYPE_WM_DIS(x)         (((x) << 4) & GENMASK(4, 4))
#define ANA_TEST_UTIL_CT_ETYPE_WM_DIS_M          GENMASK(4, 4)
#define ANA_TEST_UTIL_CT_ETYPE_WM_DIS_X(x)       (((x) & GENMASK(4, 4)) >> 4)

#define ANA_TEST_UTIL_CT_PTP_ONESTEP_DIS(x)      (((x) << 3) & GENMASK(3, 3))
#define ANA_TEST_UTIL_CT_PTP_ONESTEP_DIS_M       GENMASK(3, 3)
#define ANA_TEST_UTIL_CT_PTP_ONESTEP_DIS_X(x)    (((x) & GENMASK(3, 3)) >> 3)

#define ANA_TEST_UTIL_DST_BY_DMAC(x)             (((x) << 2) & GENMASK(2, 2))
#define ANA_TEST_UTIL_DST_BY_DMAC_M              GENMASK(2, 2)
#define ANA_TEST_UTIL_DST_BY_DMAC_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define ANA_TEST_UTIL_QOS_BY_DMAC(x)             (((x) << 1) & GENMASK(1, 1))
#define ANA_TEST_UTIL_QOS_BY_DMAC_M              GENMASK(1, 1)
#define ANA_TEST_UTIL_QOS_BY_DMAC_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define ANA_TEST_UTIL_REWCMD_BY_DMAC(x)          ((x) & GENMASK(0, 0))
#define ANA_TEST_UTIL_REWCMD_BY_DMAC_M           GENMASK(0, 0)
#define ANA_TEST_UTIL_REWCMD_BY_DMAC_X(x)        ((x) & GENMASK(0, 0))

/*      ANA:ANA:PMAC_CFG */
#define ANA_PMAC_CFG              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 224, 0, 1, 4)

#define ANA_PMAC_CFG_PMAC_ENA(x)                 (((x) << 24) & GENMASK(24, 24))
#define ANA_PMAC_CFG_PMAC_ENA_M                  GENMASK(24, 24)
#define ANA_PMAC_CFG_PMAC_ENA_X(x)               (((x) & GENMASK(24, 24)) >> 24)

#define ANA_PMAC_CFG_PMAC_OUI(x)                 ((x) & GENMASK(23, 0))
#define ANA_PMAC_CFG_PMAC_OUI_M                  GENMASK(23, 0)
#define ANA_PMAC_CFG_PMAC_OUI_X(x)               ((x) & GENMASK(23, 0))

/*      ANA:ANA:PMAC_VLAN_CFG */
#define ANA_PMAC_VLAN_CFG(r)      __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 228, r, 4, 4)

#define ANA_PMAC_VLAN_CFG_PMAC_VLAN_ENA(x)       (((x) << 12) & GENMASK(12, 12))
#define ANA_PMAC_VLAN_CFG_PMAC_VLAN_ENA_M        GENMASK(12, 12)
#define ANA_PMAC_VLAN_CFG_PMAC_VLAN_ENA_X(x)     (((x) & GENMASK(12, 12)) >> 12)

#define ANA_PMAC_VLAN_CFG_PMAC_VLAN_ID(x)        ((x) & GENMASK(11, 0))
#define ANA_PMAC_VLAN_CFG_PMAC_VLAN_ID_M         GENMASK(11, 0)
#define ANA_PMAC_VLAN_CFG_PMAC_VLAN_ID_X(x)      ((x) & GENMASK(11, 0))

/*      ANA:PGID:PGID */
#define ANA_PGID(g)               __REG(TARGET_ANA,\
					0, 1, 27648, g, 89, 8, 0, 0, 1, 4)

#define ANA_PGID_PGID(x)                         ((x) & GENMASK(8, 0))
#define ANA_PGID_PGID_M                          GENMASK(8, 0)
#define ANA_PGID_PGID_X(x)                       ((x) & GENMASK(8, 0))

/*      ANA:PGID:PGID_CFG */
#define ANA_PGID_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 27648, g, 89, 8, 4, 0, 1, 4)

#define ANA_PGID_CFG_CPUQ_DST_PGID(x)            (((x) << 1) & GENMASK(3, 1))
#define ANA_PGID_CFG_CPUQ_DST_PGID_M             GENMASK(3, 1)
#define ANA_PGID_CFG_CPUQ_DST_PGID_X(x)          (((x) & GENMASK(3, 1)) >> 1)

#define ANA_PGID_CFG_OBEY_VLAN(x)                ((x) & GENMASK(0, 0))
#define ANA_PGID_CFG_OBEY_VLAN_M                 GENMASK(0, 0)
#define ANA_PGID_CFG_OBEY_VLAN_X(x)              ((x) & GENMASK(0, 0))

/*      ANA:ANA_TABLES:ANMOVED */
#define ANA_ANMOVED               __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 36, 0, 1, 4)

#define ANA_ANMOVED_ANMOVED(x)                   ((x) & GENMASK(8, 0))
#define ANA_ANMOVED_ANMOVED_M                    GENMASK(8, 0)
#define ANA_ANMOVED_ANMOVED_X(x)                 ((x) & GENMASK(8, 0))

/*      ANA:ANA_TABLES:MACHDATA */
#define ANA_MACHDATA              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 40, 0, 1, 4)

#define ANA_MACHDATA_VID(x)                      (((x) << 16) & GENMASK(28, 16))
#define ANA_MACHDATA_VID_M                       GENMASK(28, 16)
#define ANA_MACHDATA_VID_X(x)                    (((x) & GENMASK(28, 16)) >> 16)

#define ANA_MACHDATA_MACHDATA(x)                 ((x) & GENMASK(15, 0))
#define ANA_MACHDATA_MACHDATA_M                  GENMASK(15, 0)
#define ANA_MACHDATA_MACHDATA_X(x)               ((x) & GENMASK(15, 0))

/*      ANA:ANA_TABLES:MACLDATA */
#define ANA_MACLDATA              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 44, 0, 1, 4)

/*      ANA:ANA_TABLES:MACACCESS */
#define ANA_MACACCESS             __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 48, 0, 1, 4)

#define ANA_MACACCESS_CHANGE2SW(x)               (((x) << 17) & GENMASK(17, 17))
#define ANA_MACACCESS_CHANGE2SW_M                GENMASK(17, 17)
#define ANA_MACACCESS_CHANGE2SW_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define ANA_MACACCESS_MAC_CPU_COPY(x)            (((x) << 16) & GENMASK(16, 16))
#define ANA_MACACCESS_MAC_CPU_COPY_M             GENMASK(16, 16)
#define ANA_MACACCESS_MAC_CPU_COPY_X(x)          (((x) & GENMASK(16, 16)) >> 16)

#define ANA_MACACCESS_SRC_KILL(x)                (((x) << 15) & GENMASK(15, 15))
#define ANA_MACACCESS_SRC_KILL_M                 GENMASK(15, 15)
#define ANA_MACACCESS_SRC_KILL_X(x)              (((x) & GENMASK(15, 15)) >> 15)

#define ANA_MACACCESS_IGNORE_VLAN(x)             (((x) << 14) & GENMASK(14, 14))
#define ANA_MACACCESS_IGNORE_VLAN_M              GENMASK(14, 14)
#define ANA_MACACCESS_IGNORE_VLAN_X(x)           (((x) & GENMASK(14, 14)) >> 14)

#define ANA_MACACCESS_AGED_FLAG(x)               (((x) << 13) & GENMASK(13, 13))
#define ANA_MACACCESS_AGED_FLAG_M                GENMASK(13, 13)
#define ANA_MACACCESS_AGED_FLAG_X(x)             (((x) & GENMASK(13, 13)) >> 13)

#define ANA_MACACCESS_VALID(x)                   (((x) << 12) & GENMASK(12, 12))
#define ANA_MACACCESS_VALID_M                    GENMASK(12, 12)
#define ANA_MACACCESS_VALID_X(x)                 (((x) & GENMASK(12, 12)) >> 12)

#define ANA_MACACCESS_ENTRYTYPE(x)               (((x) << 10) & GENMASK(11, 10))
#define ANA_MACACCESS_ENTRYTYPE_M                GENMASK(11, 10)
#define ANA_MACACCESS_ENTRYTYPE_X(x)             (((x) & GENMASK(11, 10)) >> 10)

#define ANA_MACACCESS_DEST_IDX(x)                (((x) << 4) & GENMASK(9, 4))
#define ANA_MACACCESS_DEST_IDX_M                 GENMASK(9, 4)
#define ANA_MACACCESS_DEST_IDX_X(x)              (((x) & GENMASK(9, 4)) >> 4)

#define ANA_MACACCESS_MAC_TABLE_CMD(x)           ((x) & GENMASK(3, 0))
#define ANA_MACACCESS_MAC_TABLE_CMD_M            GENMASK(3, 0)
#define ANA_MACACCESS_MAC_TABLE_CMD_X(x)         ((x) & GENMASK(3, 0))

/*      ANA:ANA_TABLES:MACTINDX */
#define ANA_MACTINDX              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 52, 0, 1, 4)

#define ANA_MACTINDX_BUCKET(x)                   (((x) << 11) & GENMASK(12, 11))
#define ANA_MACTINDX_BUCKET_M                    GENMASK(12, 11)
#define ANA_MACTINDX_BUCKET_X(x)                 (((x) & GENMASK(12, 11)) >> 11)

#define ANA_MACTINDX_M_INDEX(x)                  ((x) & GENMASK(10, 0))
#define ANA_MACTINDX_M_INDEX_M                   GENMASK(10, 0)
#define ANA_MACTINDX_M_INDEX_X(x)                ((x) & GENMASK(10, 0))

/*      ANA:ANA_TABLES:VLAN_PORT_MASK */
#define ANA_VLAN_PORT_MASK        __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 56, 0, 1, 4)

#define ANA_VLAN_PORT_MASK_VLAN_PORT_MASK(x)     ((x) & GENMASK(8, 0))
#define ANA_VLAN_PORT_MASK_VLAN_PORT_MASK_M      GENMASK(8, 0)
#define ANA_VLAN_PORT_MASK_VLAN_PORT_MASK_X(x)   ((x) & GENMASK(8, 0))

/*      ANA:ANA_TABLES:VLANACCESS */
#define ANA_VLANACCESS            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 60, 0, 1, 4)

#define ANA_VLANACCESS_VLAN_TBL_CMD(x)           ((x) & GENMASK(1, 0))
#define ANA_VLANACCESS_VLAN_TBL_CMD_M            GENMASK(1, 0)
#define ANA_VLANACCESS_VLAN_TBL_CMD_X(x)         ((x) & GENMASK(1, 0))

/*      ANA:ANA_TABLES:VLANTIDX */
#define ANA_VLANTIDX              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 64, 0, 1, 4)

#define ANA_VLANTIDX_VLAN_PGID_CPU_DIS(x)        (((x) << 18) & GENMASK(18, 18))
#define ANA_VLANTIDX_VLAN_PGID_CPU_DIS_M         GENMASK(18, 18)
#define ANA_VLANTIDX_VLAN_PGID_CPU_DIS_X(x)      (((x) & GENMASK(18, 18)) >> 18)

#define ANA_VLANTIDX_VLAN_SEC_FWD_ENA(x)         (((x) << 17) & GENMASK(17, 17))
#define ANA_VLANTIDX_VLAN_SEC_FWD_ENA_M          GENMASK(17, 17)
#define ANA_VLANTIDX_VLAN_SEC_FWD_ENA_X(x)       (((x) & GENMASK(17, 17)) >> 17)

#define ANA_VLANTIDX_VLAN_FLOOD_DIS(x)           (((x) << 16) & GENMASK(16, 16))
#define ANA_VLANTIDX_VLAN_FLOOD_DIS_M            GENMASK(16, 16)
#define ANA_VLANTIDX_VLAN_FLOOD_DIS_X(x)         (((x) & GENMASK(16, 16)) >> 16)

#define ANA_VLANTIDX_VLAN_PRIV_VLAN(x)           (((x) << 15) & GENMASK(15, 15))
#define ANA_VLANTIDX_VLAN_PRIV_VLAN_M            GENMASK(15, 15)
#define ANA_VLANTIDX_VLAN_PRIV_VLAN_X(x)         (((x) & GENMASK(15, 15)) >> 15)

#define ANA_VLANTIDX_VLAN_LEARN_DISABLED(x)      (((x) << 14) & GENMASK(14, 14))
#define ANA_VLANTIDX_VLAN_LEARN_DISABLED_M       GENMASK(14, 14)
#define ANA_VLANTIDX_VLAN_LEARN_DISABLED_X(x)    (((x) & GENMASK(14, 14)) >> 14)

#define ANA_VLANTIDX_VLAN_MIRROR(x)              (((x) << 13) & GENMASK(13, 13))
#define ANA_VLANTIDX_VLAN_MIRROR_M               GENMASK(13, 13)
#define ANA_VLANTIDX_VLAN_MIRROR_X(x)            (((x) & GENMASK(13, 13)) >> 13)

#define ANA_VLANTIDX_VLAN_SRC_CHK(x)             (((x) << 12) & GENMASK(12, 12))
#define ANA_VLANTIDX_VLAN_SRC_CHK_M              GENMASK(12, 12)
#define ANA_VLANTIDX_VLAN_SRC_CHK_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define ANA_VLANTIDX_V_INDEX(x)                  ((x) & GENMASK(11, 0))
#define ANA_VLANTIDX_V_INDEX_M                   GENMASK(11, 0)
#define ANA_VLANTIDX_V_INDEX_X(x)                ((x) & GENMASK(11, 0))

/*      ANA:ANA_TABLES:ENTRYLIM */
#define ANA_ENTRYLIM(r)           __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 0, r, 9, 4)

#define ANA_ENTRYLIM_ENTRYLIM(x)                 (((x) << 14) & GENMASK(17, 14))
#define ANA_ENTRYLIM_ENTRYLIM_M                  GENMASK(17, 14)
#define ANA_ENTRYLIM_ENTRYLIM_X(x)               (((x) & GENMASK(17, 14)) >> 14)

#define ANA_ENTRYLIM_ENTRYSTAT(x)                ((x) & GENMASK(13, 0))
#define ANA_ENTRYLIM_ENTRYSTAT_M                 GENMASK(13, 0)
#define ANA_ENTRYLIM_ENTRYSTAT_X(x)              ((x) & GENMASK(13, 0))

/*      ANA:ANA_TABLES:STREAMACCESS */
#define ANA_STREAMACCESS          __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 68, 0, 1, 4)

#define ANA_STREAMACCESS_GEN_SEQ_NUM(x)          (((x) << 4) & GENMASK(19, 4))
#define ANA_STREAMACCESS_GEN_SEQ_NUM_M           GENMASK(19, 4)
#define ANA_STREAMACCESS_GEN_SEQ_NUM_X(x)        (((x) & GENMASK(19, 4)) >> 4)

#define ANA_STREAMACCESS_RTAG_POP_ENA(x)         (((x) << 3) & GENMASK(3, 3))
#define ANA_STREAMACCESS_RTAG_POP_ENA_M          GENMASK(3, 3)
#define ANA_STREAMACCESS_RTAG_POP_ENA_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define ANA_STREAMACCESS_SEQ_GEN_ENA(x)          (((x) << 2) & GENMASK(2, 2))
#define ANA_STREAMACCESS_SEQ_GEN_ENA_M           GENMASK(2, 2)
#define ANA_STREAMACCESS_SEQ_GEN_ENA_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define ANA_STREAMACCESS_STREAM_TBL_CMD(x)       ((x) & GENMASK(1, 0))
#define ANA_STREAMACCESS_STREAM_TBL_CMD_M        GENMASK(1, 0)
#define ANA_STREAMACCESS_STREAM_TBL_CMD_X(x)     ((x) & GENMASK(1, 0))

/*      ANA:ANA_TABLES:STREAMTIDX */
#define ANA_STREAMTIDX            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 72, 0, 1, 4)

#define ANA_STREAMTIDX_SEQ_GEN_ERR_STATUS(x)     (((x) << 30) & GENMASK(31, 30))
#define ANA_STREAMTIDX_SEQ_GEN_ERR_STATUS_M      GENMASK(31, 30)
#define ANA_STREAMTIDX_SEQ_GEN_ERR_STATUS_X(x)   (((x) & GENMASK(31, 30)) >> 30)

#define ANA_STREAMTIDX_S_INDEX(x)                (((x) << 16) & GENMASK(23, 16))
#define ANA_STREAMTIDX_S_INDEX_M                 GENMASK(23, 16)
#define ANA_STREAMTIDX_S_INDEX_X(x)              (((x) & GENMASK(23, 16)) >> 16)

#define ANA_STREAMTIDX_STREAM_SPLIT(x)           ((x) & GENMASK(0, 0))
#define ANA_STREAMTIDX_STREAM_SPLIT_M            GENMASK(0, 0)
#define ANA_STREAMTIDX_STREAM_SPLIT_X(x)         ((x) & GENMASK(0, 0))

/*      ANA:ANA_TABLES:SPLIT_MASK */
#define ANA_SPLIT_MASK            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 76, 0, 1, 4)

#define ANA_SPLIT_MASK_SPLIT_MASK(x)             ((x) & GENMASK(8, 0))
#define ANA_SPLIT_MASK_SPLIT_MASK_M              GENMASK(8, 0)
#define ANA_SPLIT_MASK_SPLIT_MASK_X(x)           ((x) & GENMASK(8, 0))

/*      ANA:ANA_TABLES:INPUT_PORT_MASK */
#define ANA_INPUT_PORT_MASK       __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 80, 0, 1, 4)

#define ANA_INPUT_PORT_MASK_INPUT_PORT_MASK(x)   ((x) & GENMASK(8, 0))
#define ANA_INPUT_PORT_MASK_INPUT_PORT_MASK_M    GENMASK(8, 0)
#define ANA_INPUT_PORT_MASK_INPUT_PORT_MASK_X(x) ((x) & GENMASK(8, 0))

/*      ANA:ANA_TABLES:SFIDACCESS */
#define ANA_SFIDACCESS            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 84, 0, 1, 4)

#define ANA_SFIDACCESS_B_O_FRM(x)                (((x) << 24) & GENMASK(24, 24))
#define ANA_SFIDACCESS_B_O_FRM_M                 GENMASK(24, 24)
#define ANA_SFIDACCESS_B_O_FRM_X(x)              (((x) & GENMASK(24, 24)) >> 24)

#define ANA_SFIDACCESS_B_O_FRM_ENA(x)            (((x) << 23) & GENMASK(23, 23))
#define ANA_SFIDACCESS_B_O_FRM_ENA_M             GENMASK(23, 23)
#define ANA_SFIDACCESS_B_O_FRM_ENA_X(x)          (((x) & GENMASK(23, 23)) >> 23)

#define ANA_SFIDACCESS_FORCE_BLOCK(x)            (((x) << 18) & GENMASK(18, 18))
#define ANA_SFIDACCESS_FORCE_BLOCK_M             GENMASK(18, 18)
#define ANA_SFIDACCESS_FORCE_BLOCK_X(x)          (((x) & GENMASK(18, 18)) >> 18)

#define ANA_SFIDACCESS_MAX_SDU_LEN(x)            (((x) << 2) & GENMASK(17, 2))
#define ANA_SFIDACCESS_MAX_SDU_LEN_M             GENMASK(17, 2)
#define ANA_SFIDACCESS_MAX_SDU_LEN_X(x)          (((x) & GENMASK(17, 2)) >> 2)

#define ANA_SFIDACCESS_SFID_TBL_CMD(x)           ((x) & GENMASK(1, 0))
#define ANA_SFIDACCESS_SFID_TBL_CMD_M            GENMASK(1, 0)
#define ANA_SFIDACCESS_SFID_TBL_CMD_X(x)         ((x) & GENMASK(1, 0))

/*      ANA:ANA_TABLES:SFIDTIDX */
#define ANA_SFIDTIDX              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 88, 0, 1, 4)

#define ANA_SFIDTIDX_SFID_INDEX(x)               ((x) & GENMASK(7, 0))
#define ANA_SFIDTIDX_SFID_INDEX_M                GENMASK(7, 0)
#define ANA_SFIDTIDX_SFID_INDEX_X(x)             ((x) & GENMASK(7, 0))

/*      ANA:ANA_TABLES:PMACACCESS */
#define ANA_PMACACCESS            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 92, 0, 1, 4)

#define ANA_PMACACCESS_PMAC_CPU_COPY(x)          (((x) << 16) & GENMASK(16, 16))
#define ANA_PMACACCESS_PMAC_CPU_COPY_M           GENMASK(16, 16)
#define ANA_PMACACCESS_PMAC_CPU_COPY_X(x)        (((x) & GENMASK(16, 16)) >> 16)

#define ANA_PMACACCESS_PMAC_IGNORE_VLAN(x)       (((x) << 14) & GENMASK(14, 14))
#define ANA_PMACACCESS_PMAC_IGNORE_VLAN_M        GENMASK(14, 14)
#define ANA_PMACACCESS_PMAC_IGNORE_VLAN_X(x)     (((x) & GENMASK(14, 14)) >> 14)

#define ANA_PMACACCESS_PMAC_VALID(x)             (((x) << 12) & GENMASK(12, 12))
#define ANA_PMACACCESS_PMAC_VALID_M              GENMASK(12, 12)
#define ANA_PMACACCESS_PMAC_VALID_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define ANA_PMACACCESS_PMAC_DEST_IDX(x)          (((x) << 4) & GENMASK(9, 4))
#define ANA_PMACACCESS_PMAC_DEST_IDX_M           GENMASK(9, 4)
#define ANA_PMACACCESS_PMAC_DEST_IDX_X(x)        (((x) & GENMASK(9, 4)) >> 4)

#define ANA_PMACACCESS_PMAC_TBL_CMD(x)           ((x) & GENMASK(1, 0))
#define ANA_PMACACCESS_PMAC_TBL_CMD_M            GENMASK(1, 0)
#define ANA_PMACACCESS_PMAC_TBL_CMD_X(x)         ((x) & GENMASK(1, 0))

/*      ANA:ANA_TABLES:PMACTIDX */
#define ANA_PMACTIDX              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 96, 0, 1, 4)

#define ANA_PMACTIDX_PMAC_INDEX(x)               ((x) & GENMASK(12, 0))
#define ANA_PMACTIDX_PMAC_INDEX_M                GENMASK(12, 0)
#define ANA_PMACTIDX_PMAC_INDEX_X(x)             ((x) & GENMASK(12, 0))

/*      ANA:MSTI_STATE:MSTI_STATE */
#define ANA_MSTI_STATE(r)         __REG(TARGET_ANA,\
					0, 1, 30208, 0, 1, 512, 0, r, 128, 4)

#define ANA_MSTI_STATE_MSTI_FWD_ENA(x)           ((x) & GENMASK(7, 0))
#define ANA_MSTI_STATE_MSTI_FWD_ENA_M            GENMASK(7, 0)
#define ANA_MSTI_STATE_MSTI_FWD_ENA_X(x)         ((x) & GENMASK(7, 0))

/*      ANA:SG_ACCESS:SG_ACCESS_CTRL */
#define ANA_SG_ACCESS_CTRL        __REG(TARGET_ANA,\
					0, 1, 27440, 0, 1, 8, 0, 0, 1, 4)

#define ANA_SG_ACCESS_CTRL_CONFIG_CHANGE(x)      (((x) << 28) & GENMASK(28, 28))
#define ANA_SG_ACCESS_CTRL_CONFIG_CHANGE_M       GENMASK(28, 28)
#define ANA_SG_ACCESS_CTRL_CONFIG_CHANGE_X(x)    (((x) & GENMASK(28, 28)) >> 28)

#define ANA_SG_ACCESS_CTRL_SGID(x)               ((x) & GENMASK(7, 0))
#define ANA_SG_ACCESS_CTRL_SGID_M                GENMASK(7, 0)
#define ANA_SG_ACCESS_CTRL_SGID_X(x)             ((x) & GENMASK(7, 0))

/*      ANA:SG_ACCESS:SG_PTP_DOMAIN_CFG */
#define ANA_SG_PTP_DOMAIN_CFG     __REG(TARGET_ANA,\
					0, 1, 27440, 0, 1, 8, 4, 0, 1, 4)

#define ANA_SG_PTP_DOMAIN_CFG_PTP_DOMAIN(x)      ((x) & GENMASK(1, 0))
#define ANA_SG_PTP_DOMAIN_CFG_PTP_DOMAIN_M       GENMASK(1, 0)
#define ANA_SG_PTP_DOMAIN_CFG_PTP_DOMAIN_X(x)    ((x) & GENMASK(1, 0))

/*      ANA:SG_CONFIG:SG_CFG_1 */
#define ANA_SG_CFG_1              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 48, 0, 1, 4)

/*      ANA:SG_CONFIG:SG_CFG_2 */
#define ANA_SG_CFG_2              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 52, 0, 1, 4)

/*      ANA:SG_CONFIG:SG_CFG_3 */
#define ANA_SG_CFG_3              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 56, 0, 1, 4)

#define ANA_SG_CFG_3_OCTETS_EXCEEDED(x)          (((x) << 29) & GENMASK(29, 29))
#define ANA_SG_CFG_3_OCTETS_EXCEEDED_M           GENMASK(29, 29)
#define ANA_SG_CFG_3_OCTETS_EXCEEDED_X(x)        (((x) & GENMASK(29, 29)) >> 29)

#define ANA_SG_CFG_3_OCTETS_EXCEEDED_ENA(x)      (((x) << 28) & GENMASK(28, 28))
#define ANA_SG_CFG_3_OCTETS_EXCEEDED_ENA_M       GENMASK(28, 28)
#define ANA_SG_CFG_3_OCTETS_EXCEEDED_ENA_X(x)    (((x) & GENMASK(28, 28)) >> 28)

#define ANA_SG_CFG_3_INVALID_RX(x)               (((x) << 27) & GENMASK(27, 27))
#define ANA_SG_CFG_3_INVALID_RX_M                GENMASK(27, 27)
#define ANA_SG_CFG_3_INVALID_RX_X(x)             (((x) & GENMASK(27, 27)) >> 27)

#define ANA_SG_CFG_3_INVALID_RX_ENA(x)           (((x) << 26) & GENMASK(26, 26))
#define ANA_SG_CFG_3_INVALID_RX_ENA_M            GENMASK(26, 26)
#define ANA_SG_CFG_3_INVALID_RX_ENA_X(x)         (((x) & GENMASK(26, 26)) >> 26)

#define ANA_SG_CFG_3_INIT_GATE_STATE(x)          (((x) << 25) & GENMASK(25, 25))
#define ANA_SG_CFG_3_INIT_GATE_STATE_M           GENMASK(25, 25)
#define ANA_SG_CFG_3_INIT_GATE_STATE_X(x)        (((x) & GENMASK(25, 25)) >> 25)

#define ANA_SG_CFG_3_INIT_IPS(x)                 (((x) << 21) & GENMASK(24, 21))
#define ANA_SG_CFG_3_INIT_IPS_M                  GENMASK(24, 21)
#define ANA_SG_CFG_3_INIT_IPS_X(x)               (((x) & GENMASK(24, 21)) >> 21)

#define ANA_SG_CFG_3_GATE_ENABLE(x)              (((x) << 20) & GENMASK(20, 20))
#define ANA_SG_CFG_3_GATE_ENABLE_M               GENMASK(20, 20)
#define ANA_SG_CFG_3_GATE_ENABLE_X(x)            (((x) & GENMASK(20, 20)) >> 20)

#define ANA_SG_CFG_3_LIST_LENGTH(x)              (((x) << 16) & GENMASK(18, 16))
#define ANA_SG_CFG_3_LIST_LENGTH_M               GENMASK(18, 16)
#define ANA_SG_CFG_3_LIST_LENGTH_X(x)            (((x) & GENMASK(18, 16)) >> 16)

#define ANA_SG_CFG_3_BASE_TIME_SEC_MSB(x)        ((x) & GENMASK(15, 0))
#define ANA_SG_CFG_3_BASE_TIME_SEC_MSB_M         GENMASK(15, 0)
#define ANA_SG_CFG_3_BASE_TIME_SEC_MSB_X(x)      ((x) & GENMASK(15, 0))

/*      ANA:SG_CONFIG:SG_CFG_4 */
#define ANA_SG_CFG_4              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 60, 0, 1, 4)

/*      ANA:SG_CONFIG:SG_CFG_5 */
#define ANA_SG_CFG_5              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 64, 0, 1, 4)

/*      ANA:SG_CONFIG:SG_GCL_GS_CFG */
#define ANA_SG_GCL_GS_CFG(r)      __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 0, r, 4, 4)

#define ANA_SG_GCL_GS_CFG_GATE_STATE(x)          (((x) << 4) & GENMASK(4, 4))
#define ANA_SG_GCL_GS_CFG_GATE_STATE_M           GENMASK(4, 4)
#define ANA_SG_GCL_GS_CFG_GATE_STATE_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define ANA_SG_GCL_GS_CFG_IPS(x)                 ((x) & GENMASK(3, 0))
#define ANA_SG_GCL_GS_CFG_IPS_M                  GENMASK(3, 0)
#define ANA_SG_GCL_GS_CFG_IPS_X(x)               ((x) & GENMASK(3, 0))

/*      ANA:SG_CONFIG:SG_GCL_TI_CFG */
#define ANA_SG_GCL_TI_CFG(r)      __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 16, r, 4, 4)

/*      ANA:SG_CONFIG:SG_GCL_OCT_CFG */
#define ANA_SG_GCL_OCT_CFG(r)     __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 32, r, 4, 4)

/*      ANA:SG_STATUS:SG_STS_1 */
#define ANA_SG_STS_1              __REG(TARGET_ANA,\
					0, 1, 27424, 0, 1, 16, 0, 0, 1, 4)

/*      ANA:SG_STATUS:SG_STS_2 */
#define ANA_SG_STS_2              __REG(TARGET_ANA,\
					0, 1, 27424, 0, 1, 16, 4, 0, 1, 4)

/*      ANA:SG_STATUS:SG_STS_3 */
#define ANA_SG_STS_3              __REG(TARGET_ANA,\
					0, 1, 27424, 0, 1, 16, 8, 0, 1, 4)

#define ANA_SG_STS_3_GCL_OCTET_INDEX(x)          (((x) << 25) & GENMASK(27, 25))
#define ANA_SG_STS_3_GCL_OCTET_INDEX_M           GENMASK(27, 25)
#define ANA_SG_STS_3_GCL_OCTET_INDEX_X(x)        (((x) & GENMASK(27, 25)) >> 25)

#define ANA_SG_STS_3_CONFIG_PENDING(x)           (((x) << 24) & GENMASK(24, 24))
#define ANA_SG_STS_3_CONFIG_PENDING_M            GENMASK(24, 24)
#define ANA_SG_STS_3_CONFIG_PENDING_X(x)         (((x) & GENMASK(24, 24)) >> 24)

#define ANA_SG_STS_3_IPS(x)                      (((x) << 20) & GENMASK(23, 20))
#define ANA_SG_STS_3_IPS_M                       GENMASK(23, 20)
#define ANA_SG_STS_3_IPS_X(x)                    (((x) & GENMASK(23, 20)) >> 20)

#define ANA_SG_STS_3_GATE_STATE(x)               (((x) << 16) & GENMASK(16, 16))
#define ANA_SG_STS_3_GATE_STATE_M                GENMASK(16, 16)
#define ANA_SG_STS_3_GATE_STATE_X(x)             (((x) & GENMASK(16, 16)) >> 16)

#define ANA_SG_STS_3_CFG_CHG_TIME_SEC_MSB(x)     ((x) & GENMASK(15, 0))
#define ANA_SG_STS_3_CFG_CHG_TIME_SEC_MSB_M      GENMASK(15, 0)
#define ANA_SG_STS_3_CFG_CHG_TIME_SEC_MSB_X(x)   ((x) & GENMASK(15, 0))

/*      ANA:SG_STATUS:SG_STS_4 */
#define ANA_SG_STS_4              __REG(TARGET_ANA,\
					0, 1, 27424, 0, 1, 16, 12, 0, 1, 4)

/*      ANA:PORT:VLAN_CFG */
#define ANA_VLAN_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 0, 0, 1, 4)

#define ANA_VLAN_CFG_VLAN_PFC_ENA(x)             (((x) << 21) & GENMASK(21, 21))
#define ANA_VLAN_CFG_VLAN_PFC_ENA_M              GENMASK(21, 21)
#define ANA_VLAN_CFG_VLAN_PFC_ENA_X(x)           (((x) & GENMASK(21, 21)) >> 21)

#define ANA_VLAN_CFG_VLAN_AWARE_ENA(x)           (((x) << 20) & GENMASK(20, 20))
#define ANA_VLAN_CFG_VLAN_AWARE_ENA_M            GENMASK(20, 20)
#define ANA_VLAN_CFG_VLAN_AWARE_ENA_X(x)         (((x) & GENMASK(20, 20)) >> 20)

#define ANA_VLAN_CFG_VLAN_POP_CNT(x)             (((x) << 18) & GENMASK(19, 18))
#define ANA_VLAN_CFG_VLAN_POP_CNT_M              GENMASK(19, 18)
#define ANA_VLAN_CFG_VLAN_POP_CNT_X(x)           (((x) & GENMASK(19, 18)) >> 18)

#define ANA_VLAN_CFG_VLAN_INNER_TAG_ENA(x)       (((x) << 17) & GENMASK(17, 17))
#define ANA_VLAN_CFG_VLAN_INNER_TAG_ENA_M        GENMASK(17, 17)
#define ANA_VLAN_CFG_VLAN_INNER_TAG_ENA_X(x)     (((x) & GENMASK(17, 17)) >> 17)

#define ANA_VLAN_CFG_VLAN_TAG_TYPE(x)            (((x) << 16) & GENMASK(16, 16))
#define ANA_VLAN_CFG_VLAN_TAG_TYPE_M             GENMASK(16, 16)
#define ANA_VLAN_CFG_VLAN_TAG_TYPE_X(x)          (((x) & GENMASK(16, 16)) >> 16)

#define ANA_VLAN_CFG_VLAN_PCP(x)                 (((x) << 13) & GENMASK(15, 13))
#define ANA_VLAN_CFG_VLAN_PCP_M                  GENMASK(15, 13)
#define ANA_VLAN_CFG_VLAN_PCP_X(x)               (((x) & GENMASK(15, 13)) >> 13)

#define ANA_VLAN_CFG_VLAN_DEI(x)                 (((x) << 12) & GENMASK(12, 12))
#define ANA_VLAN_CFG_VLAN_DEI_M                  GENMASK(12, 12)
#define ANA_VLAN_CFG_VLAN_DEI_X(x)               (((x) & GENMASK(12, 12)) >> 12)

#define ANA_VLAN_CFG_VLAN_VID(x)                 ((x) & GENMASK(11, 0))
#define ANA_VLAN_CFG_VLAN_VID_M                  GENMASK(11, 0)
#define ANA_VLAN_CFG_VLAN_VID_X(x)               ((x) & GENMASK(11, 0))

/*      ANA:PORT:DROP_CFG */
#define ANA_DROP_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 4, 0, 1, 4)

#define ANA_DROP_CFG_DROP_UNTAGGED_ENA(x)        (((x) << 6) & GENMASK(6, 6))
#define ANA_DROP_CFG_DROP_UNTAGGED_ENA_M         GENMASK(6, 6)
#define ANA_DROP_CFG_DROP_UNTAGGED_ENA_X(x)      (((x) & GENMASK(6, 6)) >> 6)

#define ANA_DROP_CFG_DROP_S_TAGGED_ENA(x)        (((x) << 5) & GENMASK(5, 5))
#define ANA_DROP_CFG_DROP_S_TAGGED_ENA_M         GENMASK(5, 5)
#define ANA_DROP_CFG_DROP_S_TAGGED_ENA_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define ANA_DROP_CFG_DROP_C_TAGGED_ENA(x)        (((x) << 4) & GENMASK(4, 4))
#define ANA_DROP_CFG_DROP_C_TAGGED_ENA_M         GENMASK(4, 4)
#define ANA_DROP_CFG_DROP_C_TAGGED_ENA_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define ANA_DROP_CFG_DROP_PRIO_S_TAGGED_ENA(x)   (((x) << 3) & GENMASK(3, 3))
#define ANA_DROP_CFG_DROP_PRIO_S_TAGGED_ENA_M    GENMASK(3, 3)
#define ANA_DROP_CFG_DROP_PRIO_S_TAGGED_ENA_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define ANA_DROP_CFG_DROP_PRIO_C_TAGGED_ENA(x)   (((x) << 2) & GENMASK(2, 2))
#define ANA_DROP_CFG_DROP_PRIO_C_TAGGED_ENA_M    GENMASK(2, 2)
#define ANA_DROP_CFG_DROP_PRIO_C_TAGGED_ENA_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define ANA_DROP_CFG_DROP_NULL_MAC_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define ANA_DROP_CFG_DROP_NULL_MAC_ENA_M         GENMASK(1, 1)
#define ANA_DROP_CFG_DROP_NULL_MAC_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define ANA_DROP_CFG_DROP_MC_SMAC_ENA(x)         ((x) & GENMASK(0, 0))
#define ANA_DROP_CFG_DROP_MC_SMAC_ENA_M          GENMASK(0, 0)
#define ANA_DROP_CFG_DROP_MC_SMAC_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      ANA:PORT:QOS_CFG */
#define ANA_QOS_CFG(g)            __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 8, 0, 1, 4)

#define ANA_QOS_CFG_DEI_STAG_ONLY_ENA(x)         (((x) << 9) & GENMASK(9, 9))
#define ANA_QOS_CFG_DEI_STAG_ONLY_ENA_M          GENMASK(9, 9)
#define ANA_QOS_CFG_DEI_STAG_ONLY_ENA_X(x)       (((x) & GENMASK(9, 9)) >> 9)

#define ANA_QOS_CFG_DP_DEFAULT_VAL(x)            (((x) << 8) & GENMASK(8, 8))
#define ANA_QOS_CFG_DP_DEFAULT_VAL_M             GENMASK(8, 8)
#define ANA_QOS_CFG_DP_DEFAULT_VAL_X(x)          (((x) & GENMASK(8, 8)) >> 8)

#define ANA_QOS_CFG_QOS_DEFAULT_VAL(x)           (((x) << 5) & GENMASK(7, 5))
#define ANA_QOS_CFG_QOS_DEFAULT_VAL_M            GENMASK(7, 5)
#define ANA_QOS_CFG_QOS_DEFAULT_VAL_X(x)         (((x) & GENMASK(7, 5)) >> 5)

#define ANA_QOS_CFG_QOS_DSCP_ENA(x)              (((x) << 4) & GENMASK(4, 4))
#define ANA_QOS_CFG_QOS_DSCP_ENA_M               GENMASK(4, 4)
#define ANA_QOS_CFG_QOS_DSCP_ENA_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define ANA_QOS_CFG_QOS_PCP_ENA(x)               (((x) << 3) & GENMASK(3, 3))
#define ANA_QOS_CFG_QOS_PCP_ENA_M                GENMASK(3, 3)
#define ANA_QOS_CFG_QOS_PCP_ENA_X(x)             (((x) & GENMASK(3, 3)) >> 3)

#define ANA_QOS_CFG_DSCP_TRANSLATE_ENA(x)        (((x) << 2) & GENMASK(2, 2))
#define ANA_QOS_CFG_DSCP_TRANSLATE_ENA_M         GENMASK(2, 2)
#define ANA_QOS_CFG_DSCP_TRANSLATE_ENA_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define ANA_QOS_CFG_DSCP_REWR_CFG(x)             ((x) & GENMASK(1, 0))
#define ANA_QOS_CFG_DSCP_REWR_CFG_M              GENMASK(1, 0)
#define ANA_QOS_CFG_DSCP_REWR_CFG_X(x)           ((x) & GENMASK(1, 0))

/*      ANA:PORT:VCAP_CFG */
#define ANA_VCAP_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 12, 0, 1, 4)

#define ANA_VCAP_CFG_S1_SMAC_ENA(x)              (((x) << 15) & GENMASK(17, 15))
#define ANA_VCAP_CFG_S1_SMAC_ENA_M               GENMASK(17, 15)
#define ANA_VCAP_CFG_S1_SMAC_ENA_X(x)            (((x) & GENMASK(17, 15)) >> 15)

#define ANA_VCAP_CFG_S1_ENA(x)                   (((x) << 14) & GENMASK(14, 14))
#define ANA_VCAP_CFG_S1_ENA_M                    GENMASK(14, 14)
#define ANA_VCAP_CFG_S1_ENA_X(x)                 (((x) & GENMASK(14, 14)) >> 14)

#define ANA_VCAP_CFG_S1_DMAC_DIP_ENA(x)          (((x) << 11) & GENMASK(13, 11))
#define ANA_VCAP_CFG_S1_DMAC_DIP_ENA_M           GENMASK(13, 11)
#define ANA_VCAP_CFG_S1_DMAC_DIP_ENA_X(x)        (((x) & GENMASK(13, 11)) >> 11)

#define ANA_VCAP_CFG_S1_VLAN_INNER_TAG_ENA(x)    (((x) << 8) & GENMASK(10, 8))
#define ANA_VCAP_CFG_S1_VLAN_INNER_TAG_ENA_M     GENMASK(10, 8)
#define ANA_VCAP_CFG_S1_VLAN_INNER_TAG_ENA_X(x)  (((x) & GENMASK(10, 8)) >> 8)

#define ANA_VCAP_CFG_PAG_VAL(x)                  ((x) & GENMASK(7, 0))
#define ANA_VCAP_CFG_PAG_VAL_M                   GENMASK(7, 0)
#define ANA_VCAP_CFG_PAG_VAL_X(x)                ((x) & GENMASK(7, 0))

/*      ANA:PORT:VCAP_S1_CFG */
#define ANA_VCAP_S1_CFG(g, r)     __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 16, r, 3, 4)

#define ANA_VCAP_S1_CFG_KEY_RT_CFG(x)            (((x) << 9) & GENMASK(11, 9))
#define ANA_VCAP_S1_CFG_KEY_RT_CFG_M             GENMASK(11, 9)
#define ANA_VCAP_S1_CFG_KEY_RT_CFG_X(x)          (((x) & GENMASK(11, 9)) >> 9)

#define ANA_VCAP_S1_CFG_KEY_IP6_CFG(x)           (((x) << 6) & GENMASK(8, 6))
#define ANA_VCAP_S1_CFG_KEY_IP6_CFG_M            GENMASK(8, 6)
#define ANA_VCAP_S1_CFG_KEY_IP6_CFG_X(x)         (((x) & GENMASK(8, 6)) >> 6)

#define ANA_VCAP_S1_CFG_KEY_IP4_CFG(x)           (((x) << 3) & GENMASK(5, 3))
#define ANA_VCAP_S1_CFG_KEY_IP4_CFG_M            GENMASK(5, 3)
#define ANA_VCAP_S1_CFG_KEY_IP4_CFG_X(x)         (((x) & GENMASK(5, 3)) >> 3)

#define ANA_VCAP_S1_CFG_KEY_OTHER_CFG(x)         ((x) & GENMASK(2, 0))
#define ANA_VCAP_S1_CFG_KEY_OTHER_CFG_M          GENMASK(2, 0)
#define ANA_VCAP_S1_CFG_KEY_OTHER_CFG_X(x)       ((x) & GENMASK(2, 0))

/*      ANA:PORT:VCAP_S2_CFG */
#define ANA_VCAP_S2_CFG(g)        __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 28, 0, 1, 4)

#define ANA_VCAP_S2_CFG_ISDX_ENA(x)              (((x) << 19) & GENMASK(20, 19))
#define ANA_VCAP_S2_CFG_ISDX_ENA_M               GENMASK(20, 19)
#define ANA_VCAP_S2_CFG_ISDX_ENA_X(x)            (((x) & GENMASK(20, 19)) >> 19)

#define ANA_VCAP_S2_CFG_UDP_PAYLOAD_ENA(x)       (((x) << 17) & GENMASK(18, 17))
#define ANA_VCAP_S2_CFG_UDP_PAYLOAD_ENA_M        GENMASK(18, 17)
#define ANA_VCAP_S2_CFG_UDP_PAYLOAD_ENA_X(x)     (((x) & GENMASK(18, 17)) >> 17)

#define ANA_VCAP_S2_CFG_ETYPE_PAYLOAD_ENA(x)     (((x) << 15) & GENMASK(16, 15))
#define ANA_VCAP_S2_CFG_ETYPE_PAYLOAD_ENA_M      GENMASK(16, 15)
#define ANA_VCAP_S2_CFG_ETYPE_PAYLOAD_ENA_X(x)   (((x) & GENMASK(16, 15)) >> 15)

#define ANA_VCAP_S2_CFG_ENA(x)                   (((x) << 14) & GENMASK(14, 14))
#define ANA_VCAP_S2_CFG_ENA_M                    GENMASK(14, 14)
#define ANA_VCAP_S2_CFG_ENA_X(x)                 (((x) & GENMASK(14, 14)) >> 14)

#define ANA_VCAP_S2_CFG_SNAP_DIS(x)              (((x) << 12) & GENMASK(13, 12))
#define ANA_VCAP_S2_CFG_SNAP_DIS_M               GENMASK(13, 12)
#define ANA_VCAP_S2_CFG_SNAP_DIS_X(x)            (((x) & GENMASK(13, 12)) >> 12)

#define ANA_VCAP_S2_CFG_ARP_DIS(x)               (((x) << 10) & GENMASK(11, 10))
#define ANA_VCAP_S2_CFG_ARP_DIS_M                GENMASK(11, 10)
#define ANA_VCAP_S2_CFG_ARP_DIS_X(x)             (((x) & GENMASK(11, 10)) >> 10)

#define ANA_VCAP_S2_CFG_IP_TCPUDP_DIS(x)         (((x) << 8) & GENMASK(9, 8))
#define ANA_VCAP_S2_CFG_IP_TCPUDP_DIS_M          GENMASK(9, 8)
#define ANA_VCAP_S2_CFG_IP_TCPUDP_DIS_X(x)       (((x) & GENMASK(9, 8)) >> 8)

#define ANA_VCAP_S2_CFG_IP_OTHER_DIS(x)          (((x) << 6) & GENMASK(7, 6))
#define ANA_VCAP_S2_CFG_IP_OTHER_DIS_M           GENMASK(7, 6)
#define ANA_VCAP_S2_CFG_IP_OTHER_DIS_X(x)        (((x) & GENMASK(7, 6)) >> 6)

#define ANA_VCAP_S2_CFG_IP6_CFG(x)               (((x) << 2) & GENMASK(5, 2))
#define ANA_VCAP_S2_CFG_IP6_CFG_M                GENMASK(5, 2)
#define ANA_VCAP_S2_CFG_IP6_CFG_X(x)             (((x) & GENMASK(5, 2)) >> 2)

#define ANA_VCAP_S2_CFG_OAM_DIS(x)               ((x) & GENMASK(1, 0))
#define ANA_VCAP_S2_CFG_OAM_DIS_M                GENMASK(1, 0)
#define ANA_VCAP_S2_CFG_OAM_DIS_X(x)             ((x) & GENMASK(1, 0))

/*      ANA:PORT:PCP_DEI_CFG */
#define ANA_PCP_DEI_CFG(g, r)     __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 32, r, 16, 4)

#define ANA_PCP_DEI_CFG_DP_PCP_DEI_VAL(x)        (((x) << 3) & GENMASK(3, 3))
#define ANA_PCP_DEI_CFG_DP_PCP_DEI_VAL_M         GENMASK(3, 3)
#define ANA_PCP_DEI_CFG_DP_PCP_DEI_VAL_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define ANA_PCP_DEI_CFG_QOS_PCP_DEI_VAL(x)       ((x) & GENMASK(2, 0))
#define ANA_PCP_DEI_CFG_QOS_PCP_DEI_VAL_M        GENMASK(2, 0)
#define ANA_PCP_DEI_CFG_QOS_PCP_DEI_VAL_X(x)     ((x) & GENMASK(2, 0))

/*      ANA:PORT:CPU_FWD_CFG */
#define ANA_CPU_FWD_CFG(g)        __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 96, 0, 1, 4)

#define ANA_CPU_FWD_CFG_VRAP_REDIR_ENA(x)        (((x) << 7) & GENMASK(7, 7))
#define ANA_CPU_FWD_CFG_VRAP_REDIR_ENA_M         GENMASK(7, 7)
#define ANA_CPU_FWD_CFG_VRAP_REDIR_ENA_X(x)      (((x) & GENMASK(7, 7)) >> 7)

#define ANA_CPU_FWD_CFG_MLD_REDIR_ENA(x)         (((x) << 6) & GENMASK(6, 6))
#define ANA_CPU_FWD_CFG_MLD_REDIR_ENA_M          GENMASK(6, 6)
#define ANA_CPU_FWD_CFG_MLD_REDIR_ENA_X(x)       (((x) & GENMASK(6, 6)) >> 6)

#define ANA_CPU_FWD_CFG_IGMP_REDIR_ENA(x)        (((x) << 5) & GENMASK(5, 5))
#define ANA_CPU_FWD_CFG_IGMP_REDIR_ENA_M         GENMASK(5, 5)
#define ANA_CPU_FWD_CFG_IGMP_REDIR_ENA_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define ANA_CPU_FWD_CFG_IPMC_CTRL_COPY_ENA(x)    (((x) << 4) & GENMASK(4, 4))
#define ANA_CPU_FWD_CFG_IPMC_CTRL_COPY_ENA_M     GENMASK(4, 4)
#define ANA_CPU_FWD_CFG_IPMC_CTRL_COPY_ENA_X(x)  (((x) & GENMASK(4, 4)) >> 4)

#define ANA_CPU_FWD_CFG_SRC_COPY_ENA(x)          (((x) << 3) & GENMASK(3, 3))
#define ANA_CPU_FWD_CFG_SRC_COPY_ENA_M           GENMASK(3, 3)
#define ANA_CPU_FWD_CFG_SRC_COPY_ENA_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define ANA_CPU_FWD_CFG_ALLBRIDGE_DROP_ENA(x)    (((x) << 2) & GENMASK(2, 2))
#define ANA_CPU_FWD_CFG_ALLBRIDGE_DROP_ENA_M     GENMASK(2, 2)
#define ANA_CPU_FWD_CFG_ALLBRIDGE_DROP_ENA_X(x)  (((x) & GENMASK(2, 2)) >> 2)

#define ANA_CPU_FWD_CFG_ALLBRIDGE_REDIR_ENA(x)   (((x) << 1) & GENMASK(1, 1))
#define ANA_CPU_FWD_CFG_ALLBRIDGE_REDIR_ENA_M    GENMASK(1, 1)
#define ANA_CPU_FWD_CFG_ALLBRIDGE_REDIR_ENA_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define ANA_CPU_FWD_CFG_OAM_ENA(x)               ((x) & GENMASK(0, 0))
#define ANA_CPU_FWD_CFG_OAM_ENA_M                GENMASK(0, 0)
#define ANA_CPU_FWD_CFG_OAM_ENA_X(x)             ((x) & GENMASK(0, 0))

/*      ANA:PORT:CPU_FWD_BPDU_CFG */
#define ANA_CPU_FWD_BPDU_CFG(g)   __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 100, 0, 1, 4)

#define ANA_CPU_FWD_BPDU_CFG_BPDU_DROP_ENA(x)    (((x) << 16) & GENMASK(31, 16))
#define ANA_CPU_FWD_BPDU_CFG_BPDU_DROP_ENA_M     GENMASK(31, 16)
#define ANA_CPU_FWD_BPDU_CFG_BPDU_DROP_ENA_X(x)  (((x) & GENMASK(31, 16)) >> 16)

#define ANA_CPU_FWD_BPDU_CFG_BPDU_REDIR_ENA(x)   ((x) & GENMASK(15, 0))
#define ANA_CPU_FWD_BPDU_CFG_BPDU_REDIR_ENA_M    GENMASK(15, 0)
#define ANA_CPU_FWD_BPDU_CFG_BPDU_REDIR_ENA_X(x) ((x) & GENMASK(15, 0))

/*      ANA:PORT:CPU_FWD_GARP_CFG */
#define ANA_CPU_FWD_GARP_CFG(g)   __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 104, 0, 1, 4)

#define ANA_CPU_FWD_GARP_CFG_GARP_DROP_ENA(x)    (((x) << 16) & GENMASK(31, 16))
#define ANA_CPU_FWD_GARP_CFG_GARP_DROP_ENA_M     GENMASK(31, 16)
#define ANA_CPU_FWD_GARP_CFG_GARP_DROP_ENA_X(x)  (((x) & GENMASK(31, 16)) >> 16)

#define ANA_CPU_FWD_GARP_CFG_GARP_REDIR_ENA(x)   ((x) & GENMASK(15, 0))
#define ANA_CPU_FWD_GARP_CFG_GARP_REDIR_ENA_M    GENMASK(15, 0)
#define ANA_CPU_FWD_GARP_CFG_GARP_REDIR_ENA_X(x) ((x) & GENMASK(15, 0))

/*      ANA:PORT:CPU_FWD_CCM_CFG */
#define ANA_CPU_FWD_CCM_CFG(g)    __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 108, 0, 1, 4)

#define ANA_CPU_FWD_CCM_CFG_CCM_DROP_ENA(x)      (((x) << 16) & GENMASK(31, 16))
#define ANA_CPU_FWD_CCM_CFG_CCM_DROP_ENA_M       GENMASK(31, 16)
#define ANA_CPU_FWD_CCM_CFG_CCM_DROP_ENA_X(x)    (((x) & GENMASK(31, 16)) >> 16)

#define ANA_CPU_FWD_CCM_CFG_CCM_REDIR_ENA(x)     ((x) & GENMASK(15, 0))
#define ANA_CPU_FWD_CCM_CFG_CCM_REDIR_ENA_M      GENMASK(15, 0)
#define ANA_CPU_FWD_CCM_CFG_CCM_REDIR_ENA_X(x)   ((x) & GENMASK(15, 0))

/*      ANA:PORT:PORT_CFG */
#define ANA_PORT_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 112, 0, 1, 4)

#define ANA_PORT_CFG_SRC_MIRROR_ENA(x)           (((x) << 13) & GENMASK(13, 13))
#define ANA_PORT_CFG_SRC_MIRROR_ENA_M            GENMASK(13, 13)
#define ANA_PORT_CFG_SRC_MIRROR_ENA_X(x)         (((x) & GENMASK(13, 13)) >> 13)

#define ANA_PORT_CFG_LIMIT_DROP(x)               (((x) << 12) & GENMASK(12, 12))
#define ANA_PORT_CFG_LIMIT_DROP_M                GENMASK(12, 12)
#define ANA_PORT_CFG_LIMIT_DROP_X(x)             (((x) & GENMASK(12, 12)) >> 12)

#define ANA_PORT_CFG_LIMIT_CPU(x)                (((x) << 11) & GENMASK(11, 11))
#define ANA_PORT_CFG_LIMIT_CPU_M                 GENMASK(11, 11)
#define ANA_PORT_CFG_LIMIT_CPU_X(x)              (((x) & GENMASK(11, 11)) >> 11)

#define ANA_PORT_CFG_LOCKED_PORTMOVE_DROP(x)     (((x) << 10) & GENMASK(10, 10))
#define ANA_PORT_CFG_LOCKED_PORTMOVE_DROP_M      GENMASK(10, 10)
#define ANA_PORT_CFG_LOCKED_PORTMOVE_DROP_X(x)   (((x) & GENMASK(10, 10)) >> 10)

#define ANA_PORT_CFG_LOCKED_PORTMOVE_CPU(x)      (((x) << 9) & GENMASK(9, 9))
#define ANA_PORT_CFG_LOCKED_PORTMOVE_CPU_M       GENMASK(9, 9)
#define ANA_PORT_CFG_LOCKED_PORTMOVE_CPU_X(x)    (((x) & GENMASK(9, 9)) >> 9)

#define ANA_PORT_CFG_LEARNDROP(x)                (((x) << 8) & GENMASK(8, 8))
#define ANA_PORT_CFG_LEARNDROP_M                 GENMASK(8, 8)
#define ANA_PORT_CFG_LEARNDROP_X(x)              (((x) & GENMASK(8, 8)) >> 8)

#define ANA_PORT_CFG_LEARNCPU(x)                 (((x) << 7) & GENMASK(7, 7))
#define ANA_PORT_CFG_LEARNCPU_M                  GENMASK(7, 7)
#define ANA_PORT_CFG_LEARNCPU_X(x)               (((x) & GENMASK(7, 7)) >> 7)

#define ANA_PORT_CFG_LEARNAUTO(x)                (((x) << 6) & GENMASK(6, 6))
#define ANA_PORT_CFG_LEARNAUTO_M                 GENMASK(6, 6)
#define ANA_PORT_CFG_LEARNAUTO_X(x)              (((x) & GENMASK(6, 6)) >> 6)

#define ANA_PORT_CFG_LEARN_ENA(x)                (((x) << 5) & GENMASK(5, 5))
#define ANA_PORT_CFG_LEARN_ENA_M                 GENMASK(5, 5)
#define ANA_PORT_CFG_LEARN_ENA_X(x)              (((x) & GENMASK(5, 5)) >> 5)

#define ANA_PORT_CFG_RECV_ENA(x)                 (((x) << 4) & GENMASK(4, 4))
#define ANA_PORT_CFG_RECV_ENA_M                  GENMASK(4, 4)
#define ANA_PORT_CFG_RECV_ENA_X(x)               (((x) & GENMASK(4, 4)) >> 4)

#define ANA_PORT_CFG_PORTID_VAL(x)               ((x) & GENMASK(3, 0))
#define ANA_PORT_CFG_PORTID_VAL_M                GENMASK(3, 0)
#define ANA_PORT_CFG_PORTID_VAL_X(x)             ((x) & GENMASK(3, 0))

/*      ANA:PORT:POL_CFG */
#define ANA_POL_CFG(g)            __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 116, 0, 1, 4)

#define ANA_POL_CFG_POL_CPU_REDIR_8021(x)        (((x) << 19) & GENMASK(19, 19))
#define ANA_POL_CFG_POL_CPU_REDIR_8021_M         GENMASK(19, 19)
#define ANA_POL_CFG_POL_CPU_REDIR_8021_X(x)      (((x) & GENMASK(19, 19)) >> 19)

#define ANA_POL_CFG_POL_CPU_REDIR_IP(x)          (((x) << 18) & GENMASK(18, 18))
#define ANA_POL_CFG_POL_CPU_REDIR_IP_M           GENMASK(18, 18)
#define ANA_POL_CFG_POL_CPU_REDIR_IP_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define ANA_POL_CFG_PORT_POL_ENA(x)              (((x) << 17) & GENMASK(17, 17))
#define ANA_POL_CFG_PORT_POL_ENA_M               GENMASK(17, 17)
#define ANA_POL_CFG_PORT_POL_ENA_X(x)            (((x) & GENMASK(17, 17)) >> 17)

#define ANA_POL_CFG_QUEUE_POL_ENA(x)             (((x) << 9) & GENMASK(16, 9))
#define ANA_POL_CFG_QUEUE_POL_ENA_M              GENMASK(16, 9)
#define ANA_POL_CFG_QUEUE_POL_ENA_X(x)           (((x) & GENMASK(16, 9)) >> 9)

#define ANA_POL_CFG_POL_ORDER(x)                 ((x) & GENMASK(8, 0))
#define ANA_POL_CFG_POL_ORDER_M                  GENMASK(8, 0)
#define ANA_POL_CFG_POL_ORDER_X(x)               ((x) & GENMASK(8, 0))

/*      ANA:PORT:LLCT_CFG */
#define ANA_LLCT_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 120, 0, 1, 4)

#define ANA_LLCT_CFG_LLCT_S1_ANALYZE(x)          (((x) << 1) & GENMASK(1, 1))
#define ANA_LLCT_CFG_LLCT_S1_ANALYZE_M           GENMASK(1, 1)
#define ANA_LLCT_CFG_LLCT_S1_ANALYZE_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define ANA_LLCT_CFG_LLCT_VID_FORWARD(x)         ((x) & GENMASK(0, 0))
#define ANA_LLCT_CFG_LLCT_VID_FORWARD_M          GENMASK(0, 0)
#define ANA_LLCT_CFG_LLCT_VID_FORWARD_X(x)       ((x) & GENMASK(0, 0))

/*      ANA:PORT:OAM_CFG */
#define ANA_OAM_CFG(g)            __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 124, 0, 1, 4)

#define ANA_OAM_CFG_DLR_ENA(x)                   (((x) << 3) & GENMASK(3, 3))
#define ANA_OAM_CFG_DLR_ENA_M                    GENMASK(3, 3)
#define ANA_OAM_CFG_DLR_ENA_X(x)                 (((x) & GENMASK(3, 3)) >> 3)

#define ANA_OAM_CFG_MRP_ENA(x)                   (((x) << 2) & GENMASK(2, 2))
#define ANA_OAM_CFG_MRP_ENA_M                    GENMASK(2, 2)
#define ANA_OAM_CFG_MRP_ENA_X(x)                 (((x) & GENMASK(2, 2)) >> 2)

#define ANA_OAM_CFG_OAM_CFG(x)                   ((x) & GENMASK(1, 0))
#define ANA_OAM_CFG_OAM_CFG_M                    GENMASK(1, 0)
#define ANA_OAM_CFG_OAM_CFG_X(x)                 ((x) & GENMASK(1, 0))

/*      ANA:PFC:PFC_CFG */
#define ANA_PFC_CFG(g)            __REG(TARGET_ANA,\
					0, 1, 30720, g, 8, 64, 0, 0, 1, 4)

#define ANA_PFC_CFG_RX_PFC_ENA(x)                (((x) << 2) & GENMASK(9, 2))
#define ANA_PFC_CFG_RX_PFC_ENA_M                 GENMASK(9, 2)
#define ANA_PFC_CFG_RX_PFC_ENA_X(x)              (((x) & GENMASK(9, 2)) >> 2)

#define ANA_PFC_CFG_FC_LINK_SPEED(x)             ((x) & GENMASK(1, 0))
#define ANA_PFC_CFG_FC_LINK_SPEED_M              GENMASK(1, 0)
#define ANA_PFC_CFG_FC_LINK_SPEED_X(x)           ((x) & GENMASK(1, 0))

/*      ANA:PFC:PFC_TIMER */
#define ANA_PFC_TIMER(g, r)       __REG(TARGET_ANA,\
					0, 1, 30720, g, 8, 64, 4, r, 8, 4)

#define ANA_PFC_TIMER_PFC_TIMER_VAL(x)           ((x) & GENMASK(15, 0))
#define ANA_PFC_TIMER_PFC_TIMER_VAL_M            GENMASK(15, 0)
#define ANA_PFC_TIMER_PFC_TIMER_VAL_X(x)         ((x) & GENMASK(15, 0))

/*      ANA:FID_MAP:FID_MAP */
#define ANA_FID_MAP(r)            __REG(TARGET_ANA,\
					0, 1, 0, 0, 1, 16384, 0, r, 4096, 4)

#define ANA_FID_MAP_FID_VAL(x)                   ((x) & GENMASK(5, 0))
#define ANA_FID_MAP_FID_VAL_M                    GENMASK(5, 0)
#define ANA_FID_MAP_FID_VAL_X(x)                 ((x) & GENMASK(5, 0))

/*      ANA:COMMON:AGGR_CFG */
#define ANA_AGGR_CFG              __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 0, 0, 1, 4)

#define ANA_AGGR_CFG_AC_RND_ENA(x)               (((x) << 6) & GENMASK(6, 6))
#define ANA_AGGR_CFG_AC_RND_ENA_M                GENMASK(6, 6)
#define ANA_AGGR_CFG_AC_RND_ENA_X(x)             (((x) & GENMASK(6, 6)) >> 6)

#define ANA_AGGR_CFG_AC_DMAC_ENA(x)              (((x) << 5) & GENMASK(5, 5))
#define ANA_AGGR_CFG_AC_DMAC_ENA_M               GENMASK(5, 5)
#define ANA_AGGR_CFG_AC_DMAC_ENA_X(x)            (((x) & GENMASK(5, 5)) >> 5)

#define ANA_AGGR_CFG_AC_SMAC_ENA(x)              (((x) << 4) & GENMASK(4, 4))
#define ANA_AGGR_CFG_AC_SMAC_ENA_M               GENMASK(4, 4)
#define ANA_AGGR_CFG_AC_SMAC_ENA_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define ANA_AGGR_CFG_AC_IP6_FLOW_LBL_ENA(x)      (((x) << 3) & GENMASK(3, 3))
#define ANA_AGGR_CFG_AC_IP6_FLOW_LBL_ENA_M       GENMASK(3, 3)
#define ANA_AGGR_CFG_AC_IP6_FLOW_LBL_ENA_X(x)    (((x) & GENMASK(3, 3)) >> 3)

#define ANA_AGGR_CFG_AC_IP6_TCPUDP_ENA(x)        (((x) << 2) & GENMASK(2, 2))
#define ANA_AGGR_CFG_AC_IP6_TCPUDP_ENA_M         GENMASK(2, 2)
#define ANA_AGGR_CFG_AC_IP6_TCPUDP_ENA_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define ANA_AGGR_CFG_AC_IP4_SIPDIP_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define ANA_AGGR_CFG_AC_IP4_SIPDIP_ENA_M         GENMASK(1, 1)
#define ANA_AGGR_CFG_AC_IP4_SIPDIP_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define ANA_AGGR_CFG_AC_IP4_TCPUDP_ENA(x)        ((x) & GENMASK(0, 0))
#define ANA_AGGR_CFG_AC_IP4_TCPUDP_ENA_M         GENMASK(0, 0)
#define ANA_AGGR_CFG_AC_IP4_TCPUDP_ENA_X(x)      ((x) & GENMASK(0, 0))

/*      ANA:COMMON:CPUQ_CFG */
#define ANA_CPUQ_CFG              __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 4, 0, 1, 4)

#define ANA_CPUQ_CFG_CPUQ_MLD(x)                 (((x) << 27) & GENMASK(29, 27))
#define ANA_CPUQ_CFG_CPUQ_MLD_M                  GENMASK(29, 27)
#define ANA_CPUQ_CFG_CPUQ_MLD_X(x)               (((x) & GENMASK(29, 27)) >> 27)

#define ANA_CPUQ_CFG_CPUQ_IGMP(x)                (((x) << 24) & GENMASK(26, 24))
#define ANA_CPUQ_CFG_CPUQ_IGMP_M                 GENMASK(26, 24)
#define ANA_CPUQ_CFG_CPUQ_IGMP_X(x)              (((x) & GENMASK(26, 24)) >> 24)

#define ANA_CPUQ_CFG_CPUQ_IPMC_CTRL(x)           (((x) << 21) & GENMASK(23, 21))
#define ANA_CPUQ_CFG_CPUQ_IPMC_CTRL_M            GENMASK(23, 21)
#define ANA_CPUQ_CFG_CPUQ_IPMC_CTRL_X(x)         (((x) & GENMASK(23, 21)) >> 21)

#define ANA_CPUQ_CFG_CPUQ_ALLBRIDGE(x)           (((x) << 18) & GENMASK(20, 18))
#define ANA_CPUQ_CFG_CPUQ_ALLBRIDGE_M            GENMASK(20, 18)
#define ANA_CPUQ_CFG_CPUQ_ALLBRIDGE_X(x)         (((x) & GENMASK(20, 18)) >> 18)

#define ANA_CPUQ_CFG_CPUQ_LOCKED_PORTMOVE(x)     (((x) << 15) & GENMASK(17, 15))
#define ANA_CPUQ_CFG_CPUQ_LOCKED_PORTMOVE_M      GENMASK(17, 15)
#define ANA_CPUQ_CFG_CPUQ_LOCKED_PORTMOVE_X(x)   (((x) & GENMASK(17, 15)) >> 15)

#define ANA_CPUQ_CFG_CPUQ_SRC_COPY(x)            (((x) << 12) & GENMASK(14, 12))
#define ANA_CPUQ_CFG_CPUQ_SRC_COPY_M             GENMASK(14, 12)
#define ANA_CPUQ_CFG_CPUQ_SRC_COPY_X(x)          (((x) & GENMASK(14, 12)) >> 12)

#define ANA_CPUQ_CFG_CPUQ_MAC_COPY(x)            (((x) << 9) & GENMASK(11, 9))
#define ANA_CPUQ_CFG_CPUQ_MAC_COPY_M             GENMASK(11, 9)
#define ANA_CPUQ_CFG_CPUQ_MAC_COPY_X(x)          (((x) & GENMASK(11, 9)) >> 9)

#define ANA_CPUQ_CFG_CPUQ_LRN(x)                 (((x) << 6) & GENMASK(8, 6))
#define ANA_CPUQ_CFG_CPUQ_LRN_M                  GENMASK(8, 6)
#define ANA_CPUQ_CFG_CPUQ_LRN_X(x)               (((x) & GENMASK(8, 6)) >> 6)

#define ANA_CPUQ_CFG_CPUQ_MIRROR(x)              (((x) << 3) & GENMASK(5, 3))
#define ANA_CPUQ_CFG_CPUQ_MIRROR_M               GENMASK(5, 3)
#define ANA_CPUQ_CFG_CPUQ_MIRROR_X(x)            (((x) & GENMASK(5, 3)) >> 3)

#define ANA_CPUQ_CFG_CPUQ_SFLOW(x)               ((x) & GENMASK(2, 0))
#define ANA_CPUQ_CFG_CPUQ_SFLOW_M                GENMASK(2, 0)
#define ANA_CPUQ_CFG_CPUQ_SFLOW_X(x)             ((x) & GENMASK(2, 0))

/*      ANA:COMMON:CPUQ_CFG2 */
#define ANA_CPUQ_CFG2             __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 8, 0, 1, 4)

#define ANA_CPUQ_CFG2_CPUQ_VRAP(x)               ((x) & GENMASK(2, 0))
#define ANA_CPUQ_CFG2_CPUQ_VRAP_M                GENMASK(2, 0)
#define ANA_CPUQ_CFG2_CPUQ_VRAP_X(x)             ((x) & GENMASK(2, 0))

/*      ANA:COMMON:CPUQ_8021_CFG */
#define ANA_CPUQ_8021_CFG(r)      __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 12, r, 16, 4)

#define ANA_CPUQ_8021_CFG_CPUQ_BPDU_VAL(x)       (((x) << 6) & GENMASK(8, 6))
#define ANA_CPUQ_8021_CFG_CPUQ_BPDU_VAL_M        GENMASK(8, 6)
#define ANA_CPUQ_8021_CFG_CPUQ_BPDU_VAL_X(x)     (((x) & GENMASK(8, 6)) >> 6)

#define ANA_CPUQ_8021_CFG_CPUQ_GARP_VAL(x)       (((x) << 3) & GENMASK(5, 3))
#define ANA_CPUQ_8021_CFG_CPUQ_GARP_VAL_M        GENMASK(5, 3)
#define ANA_CPUQ_8021_CFG_CPUQ_GARP_VAL_X(x)     (((x) & GENMASK(5, 3)) >> 3)

#define ANA_CPUQ_8021_CFG_CPUQ_CCM_VAL(x)        ((x) & GENMASK(2, 0))
#define ANA_CPUQ_8021_CFG_CPUQ_CCM_VAL_M         GENMASK(2, 0)
#define ANA_CPUQ_8021_CFG_CPUQ_CCM_VAL_X(x)      ((x) & GENMASK(2, 0))

/*      ANA:COMMON:DSCP_CFG */
#define ANA_DSCP_CFG(r)           __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 76, r, 64, 4)

#define ANA_DSCP_CFG_DP_DSCP_VAL(x)              (((x) << 11) & GENMASK(11, 11))
#define ANA_DSCP_CFG_DP_DSCP_VAL_M               GENMASK(11, 11)
#define ANA_DSCP_CFG_DP_DSCP_VAL_X(x)            (((x) & GENMASK(11, 11)) >> 11)

#define ANA_DSCP_CFG_QOS_DSCP_VAL(x)             (((x) << 8) & GENMASK(10, 8))
#define ANA_DSCP_CFG_QOS_DSCP_VAL_M              GENMASK(10, 8)
#define ANA_DSCP_CFG_QOS_DSCP_VAL_X(x)           (((x) & GENMASK(10, 8)) >> 8)

#define ANA_DSCP_CFG_DSCP_TRANSLATE_VAL(x)       (((x) << 2) & GENMASK(7, 2))
#define ANA_DSCP_CFG_DSCP_TRANSLATE_VAL_M        GENMASK(7, 2)
#define ANA_DSCP_CFG_DSCP_TRANSLATE_VAL_X(x)     (((x) & GENMASK(7, 2)) >> 2)

#define ANA_DSCP_CFG_DSCP_TRUST_ENA(x)           (((x) << 1) & GENMASK(1, 1))
#define ANA_DSCP_CFG_DSCP_TRUST_ENA_M            GENMASK(1, 1)
#define ANA_DSCP_CFG_DSCP_TRUST_ENA_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define ANA_DSCP_CFG_DSCP_REWR_ENA(x)            ((x) & GENMASK(0, 0))
#define ANA_DSCP_CFG_DSCP_REWR_ENA_M             GENMASK(0, 0)
#define ANA_DSCP_CFG_DSCP_REWR_ENA_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:COMMON:DSCP_REWR_CFG */
#define ANA_DSCP_REWR_CFG(r)      __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 332, r, 16, 4)

#define ANA_DSCP_REWR_CFG_DSCP_QOS_REWR_VAL(x)   ((x) & GENMASK(5, 0))
#define ANA_DSCP_REWR_CFG_DSCP_QOS_REWR_VAL_M    GENMASK(5, 0)
#define ANA_DSCP_REWR_CFG_DSCP_QOS_REWR_VAL_X(x) ((x) & GENMASK(5, 0))

/*      ANA:COMMON:VCAP_RNG_CFG */
#define ANA_VCAP_RNG_CFG(r)       __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 396, r, 8, 4)

#define ANA_VCAP_RNG_CFG_CFG(x)                  ((x) & GENMASK(2, 0))
#define ANA_VCAP_RNG_CFG_CFG_M                   GENMASK(2, 0)
#define ANA_VCAP_RNG_CFG_CFG_X(x)                ((x) & GENMASK(2, 0))

/*      ANA:COMMON:VCAP_RNG_VAL_CFG */
#define ANA_VCAP_RNG_VAL_CFG(r)   __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 428, r, 8, 4)

#define ANA_VCAP_RNG_VAL_CFG_MIN_VAL(x)          (((x) << 16) & GENMASK(31, 16))
#define ANA_VCAP_RNG_VAL_CFG_MIN_VAL_M           GENMASK(31, 16)
#define ANA_VCAP_RNG_VAL_CFG_MIN_VAL_X(x)        (((x) & GENMASK(31, 16)) >> 16)

#define ANA_VCAP_RNG_VAL_CFG_MAX_VAL(x)          ((x) & GENMASK(15, 0))
#define ANA_VCAP_RNG_VAL_CFG_MAX_VAL_M           GENMASK(15, 0)
#define ANA_VCAP_RNG_VAL_CFG_MAX_VAL_X(x)        ((x) & GENMASK(15, 0))

/*      ANA:COMMON:VRAP_CFG */
#define ANA_VRAP_CFG              __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 460, 0, 1, 4)

#define ANA_VRAP_CFG_VRAP_VLAN_AWARE_ENA(x)      (((x) << 12) & GENMASK(12, 12))
#define ANA_VRAP_CFG_VRAP_VLAN_AWARE_ENA_M       GENMASK(12, 12)
#define ANA_VRAP_CFG_VRAP_VLAN_AWARE_ENA_X(x)    (((x) & GENMASK(12, 12)) >> 12)

#define ANA_VRAP_CFG_VRAP_VID(x)                 ((x) & GENMASK(11, 0))
#define ANA_VRAP_CFG_VRAP_VID_M                  GENMASK(11, 0)
#define ANA_VRAP_CFG_VRAP_VID_X(x)               ((x) & GENMASK(11, 0))

/*      ANA:COMMON:VRAP_HDR_DATA */
#define ANA_VRAP_HDR_DATA         __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 464, 0, 1, 4)

/*      ANA:COMMON:VRAP_HDR_MASK */
#define ANA_VRAP_HDR_MASK         __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 468, 0, 1, 4)

/*      ANA:COMMON:DISCARD_CFG */
#define ANA_DISCARD_CFG           __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 472, 0, 1, 4)

#define ANA_DISCARD_CFG_TAGGING_S2_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define ANA_DISCARD_CFG_TAGGING_S2_ENA_M         GENMASK(1, 1)
#define ANA_DISCARD_CFG_TAGGING_S2_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define ANA_DISCARD_CFG_CTRLPROT_S2_ENA(x)       ((x) & GENMASK(0, 0))
#define ANA_DISCARD_CFG_CTRLPROT_S2_ENA_M        GENMASK(0, 0)
#define ANA_DISCARD_CFG_CTRLPROT_S2_ENA_X(x)     ((x) & GENMASK(0, 0))

/*      ANA:COMMON:FID_CFG */
#define ANA_FID_CFG               __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 476, 0, 1, 4)

#define ANA_FID_CFG_VID_MC_ENA(x)                ((x) & GENMASK(0, 0))
#define ANA_FID_CFG_VID_MC_ENA_M                 GENMASK(0, 0)
#define ANA_FID_CFG_VID_MC_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      ANA:COMMON:VLAN_ETYPE_CFG */
#define ANA_VLAN_ETYPE_CFG        __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 480, 0, 1, 4)

#define ANA_VLAN_ETYPE_CFG_S_TAG_VAL(x)          ((x) & GENMASK(15, 0))
#define ANA_VLAN_ETYPE_CFG_S_TAG_VAL_M           GENMASK(15, 0)
#define ANA_VLAN_ETYPE_CFG_S_TAG_VAL_X(x)        ((x) & GENMASK(15, 0))

/*      ANA:COMMON:RT_VLAN_PCP */
#define ANA_RT_VLAN_PCP(r)        __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 484, r, 8, 4)

#define ANA_RT_VLAN_PCP_PCP_MASK(x)              (((x) << 13) & GENMASK(20, 13))
#define ANA_RT_VLAN_PCP_PCP_MASK_M               GENMASK(20, 13)
#define ANA_RT_VLAN_PCP_PCP_MASK_X(x)            (((x) & GENMASK(20, 13)) >> 13)

#define ANA_RT_VLAN_PCP_VLAN_ID(x)               (((x) << 1) & GENMASK(12, 1))
#define ANA_RT_VLAN_PCP_VLAN_ID_M                GENMASK(12, 1)
#define ANA_RT_VLAN_PCP_VLAN_ID_X(x)             (((x) & GENMASK(12, 1)) >> 1)

#define ANA_RT_VLAN_PCP_VLAN_PCP_ENA(x)          ((x) & GENMASK(0, 0))
#define ANA_RT_VLAN_PCP_VLAN_PCP_ENA_M           GENMASK(0, 0)
#define ANA_RT_VLAN_PCP_VLAN_PCP_ENA_X(x)        ((x) & GENMASK(0, 0))

/*      ANA:COMMON:RT_CUSTOM */
#define ANA_RT_CUSTOM             __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 516, 0, 1, 4)

#define ANA_RT_CUSTOM_ETYPE(x)                   ((x) & GENMASK(15, 0))
#define ANA_RT_CUSTOM_ETYPE_M                    GENMASK(15, 0)
#define ANA_RT_CUSTOM_ETYPE_X(x)                 ((x) & GENMASK(15, 0))

/*      ANA:COMMON:RT_MISC_CFG */
#define ANA_RT_MISC_CFG(r)        __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 520, r, 8, 4)

#define ANA_RT_MISC_CFG_RT_SA_UNK_CFG(x)         (((x) << 12) & GENMASK(14, 12))
#define ANA_RT_MISC_CFG_RT_SA_UNK_CFG_M          GENMASK(14, 12)
#define ANA_RT_MISC_CFG_RT_SA_UNK_CFG_X(x)       (((x) & GENMASK(14, 12)) >> 12)

#define ANA_RT_MISC_CFG_RT_DA_UNK_CFG(x)         (((x) << 9) & GENMASK(11, 9))
#define ANA_RT_MISC_CFG_RT_DA_UNK_CFG_M          GENMASK(11, 9)
#define ANA_RT_MISC_CFG_RT_DA_UNK_CFG_X(x)       (((x) & GENMASK(11, 9)) >> 9)

#define ANA_RT_MISC_CFG_RT_SA_PORTMOVE_CFG(x)    (((x) << 6) & GENMASK(8, 6))
#define ANA_RT_MISC_CFG_RT_SA_PORTMOVE_CFG_M     GENMASK(8, 6)
#define ANA_RT_MISC_CFG_RT_SA_PORTMOVE_CFG_X(x)  (((x) & GENMASK(8, 6)) >> 6)

#define ANA_RT_MISC_CFG_RT_FILTER_CFG(x)         (((x) << 3) & GENMASK(5, 3))
#define ANA_RT_MISC_CFG_RT_FILTER_CFG_M          GENMASK(5, 3)
#define ANA_RT_MISC_CFG_RT_FILTER_CFG_X(x)       (((x) & GENMASK(5, 3)) >> 3)

#define ANA_RT_MISC_CFG_RT_CPUQ(x)               ((x) & GENMASK(2, 0))
#define ANA_RT_MISC_CFG_RT_CPUQ_M                GENMASK(2, 0)
#define ANA_RT_MISC_CFG_RT_CPUQ_X(x)             ((x) & GENMASK(2, 0))

/*      ANA:POL:POL_PIR_CFG */
#define ANA_POL_PIR_CFG(g)        __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 0, 0, 1, 4)

#define ANA_POL_PIR_CFG_PIR_RATE(x)              (((x) << 6) & GENMASK(20, 6))
#define ANA_POL_PIR_CFG_PIR_RATE_M               GENMASK(20, 6)
#define ANA_POL_PIR_CFG_PIR_RATE_X(x)            (((x) & GENMASK(20, 6)) >> 6)

#define ANA_POL_PIR_CFG_PIR_BURST(x)             ((x) & GENMASK(5, 0))
#define ANA_POL_PIR_CFG_PIR_BURST_M              GENMASK(5, 0)
#define ANA_POL_PIR_CFG_PIR_BURST_X(x)           ((x) & GENMASK(5, 0))

/*      ANA:POL:POL_CIR_CFG */
#define ANA_POL_CIR_CFG(g)        __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 4, 0, 1, 4)

#define ANA_POL_CIR_CFG_CIR_RATE(x)              (((x) << 6) & GENMASK(20, 6))
#define ANA_POL_CIR_CFG_CIR_RATE_M               GENMASK(20, 6)
#define ANA_POL_CIR_CFG_CIR_RATE_X(x)            (((x) & GENMASK(20, 6)) >> 6)

#define ANA_POL_CIR_CFG_CIR_BURST(x)             ((x) & GENMASK(5, 0))
#define ANA_POL_CIR_CFG_CIR_BURST_M              GENMASK(5, 0)
#define ANA_POL_CIR_CFG_CIR_BURST_X(x)           ((x) & GENMASK(5, 0))

/*      ANA:POL:POL_MODE */
#define ANA_POL_MODE(g)           __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 8, 0, 1, 4)

#define ANA_POL_MODE_DROP_ON_YELLOW_ENA(x)       (((x) << 11) & GENMASK(11, 11))
#define ANA_POL_MODE_DROP_ON_YELLOW_ENA_M        GENMASK(11, 11)
#define ANA_POL_MODE_DROP_ON_YELLOW_ENA_X(x)     (((x) & GENMASK(11, 11)) >> 11)

#define ANA_POL_MODE_MARK_ALL_FRMS_RED_ENA(x)    (((x) << 10) & GENMASK(10, 10))
#define ANA_POL_MODE_MARK_ALL_FRMS_RED_ENA_M     GENMASK(10, 10)
#define ANA_POL_MODE_MARK_ALL_FRMS_RED_ENA_X(x)  (((x) & GENMASK(10, 10)) >> 10)

#define ANA_POL_MODE_IPG_SIZE(x)                 (((x) << 5) & GENMASK(9, 5))
#define ANA_POL_MODE_IPG_SIZE_M                  GENMASK(9, 5)
#define ANA_POL_MODE_IPG_SIZE_X(x)               (((x) & GENMASK(9, 5)) >> 5)

#define ANA_POL_MODE_FRM_MODE(x)                 (((x) << 3) & GENMASK(4, 3))
#define ANA_POL_MODE_FRM_MODE_M                  GENMASK(4, 3)
#define ANA_POL_MODE_FRM_MODE_X(x)               (((x) & GENMASK(4, 3)) >> 3)

#define ANA_POL_MODE_DLB_COUPLED(x)              (((x) << 2) & GENMASK(2, 2))
#define ANA_POL_MODE_DLB_COUPLED_M               GENMASK(2, 2)
#define ANA_POL_MODE_DLB_COUPLED_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define ANA_POL_MODE_CIR_ENA(x)                  (((x) << 1) & GENMASK(1, 1))
#define ANA_POL_MODE_CIR_ENA_M                   GENMASK(1, 1)
#define ANA_POL_MODE_CIR_ENA_X(x)                (((x) & GENMASK(1, 1)) >> 1)

#define ANA_POL_MODE_OVERSHOOT_ENA(x)            ((x) & GENMASK(0, 0))
#define ANA_POL_MODE_OVERSHOOT_ENA_M             GENMASK(0, 0)
#define ANA_POL_MODE_OVERSHOOT_ENA_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:POL:POL_PIR_STATE */
#define ANA_POL_PIR_STATE(g)      __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 12, 0, 1, 4)

#define ANA_POL_PIR_STATE_PIR_LVL(x)             ((x) & GENMASK(21, 0))
#define ANA_POL_PIR_STATE_PIR_LVL_M              GENMASK(21, 0)
#define ANA_POL_PIR_STATE_PIR_LVL_X(x)           ((x) & GENMASK(21, 0))

/*      ANA:POL:POL_CIR_STATE */
#define ANA_POL_CIR_STATE(g)      __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 16, 0, 1, 4)

#define ANA_POL_CIR_STATE_CIR_LVL(x)             ((x) & GENMASK(21, 0))
#define ANA_POL_CIR_STATE_CIR_LVL_M              GENMASK(21, 0)
#define ANA_POL_CIR_STATE_CIR_LVL_X(x)           ((x) & GENMASK(21, 0))

/*      ANA:POL:POL_STATE */
#define ANA_POL_STATE(g)          __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 20, 0, 1, 4)

#define ANA_POL_STATE_MARK_ALL_FRMS_RED_SET(x)   (((x) << 4) & GENMASK(4, 4))
#define ANA_POL_STATE_MARK_ALL_FRMS_RED_SET_M    GENMASK(4, 4)
#define ANA_POL_STATE_MARK_ALL_FRMS_RED_SET_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define ANA_POL_STATE_LEAK_TIME(x)               ((x) & GENMASK(3, 0))
#define ANA_POL_STATE_LEAK_TIME_M                GENMASK(3, 0)
#define ANA_POL_STATE_LEAK_TIME_X(x)             ((x) & GENMASK(3, 0))

/*      ANA:POL_MISC:POL_FLOWC */
#define ANA_POL_FLOWC(r)          __REG(TARGET_ANA,\
					0, 1, 28544, 0, 1, 116, 0, r, 9, 4)

#define ANA_POL_FLOWC_POL_FLOWC(x)               ((x) & GENMASK(0, 0))
#define ANA_POL_FLOWC_POL_FLOWC_M                GENMASK(0, 0)
#define ANA_POL_FLOWC_POL_FLOWC_X(x)             ((x) & GENMASK(0, 0))

/*      ANA:POL_MISC:POL_HYST */
#define ANA_POL_HYST              __REG(TARGET_ANA,\
					0, 1, 28544, 0, 1, 116, 108, 0, 1, 4)

#define ANA_POL_HYST_POL_FC_HYST(x)              (((x) << 4) & GENMASK(9, 4))
#define ANA_POL_HYST_POL_FC_HYST_M               GENMASK(9, 4)
#define ANA_POL_HYST_POL_FC_HYST_X(x)            (((x) & GENMASK(9, 4)) >> 4)

#define ANA_POL_HYST_POL_STOP_HYST(x)            ((x) & GENMASK(3, 0))
#define ANA_POL_HYST_POL_STOP_HYST_M             GENMASK(3, 0)
#define ANA_POL_HYST_POL_STOP_HYST_X(x)          ((x) & GENMASK(3, 0))

/*      ANA:POL_MISC:POL_MISC_CFG */
#define ANA_POL_MISC_CFG          __REG(TARGET_ANA,\
					0, 1, 28544, 0, 1, 116, 112, 0, 1, 4)

#define ANA_POL_MISC_CFG_POL_CLOSE_ALL(x)        (((x) << 1) & GENMASK(1, 1))
#define ANA_POL_MISC_CFG_POL_CLOSE_ALL_M         GENMASK(1, 1)
#define ANA_POL_MISC_CFG_POL_CLOSE_ALL_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define ANA_POL_MISC_CFG_POL_LEAK_DIS(x)         ((x) & GENMASK(0, 0))
#define ANA_POL_MISC_CFG_POL_LEAK_DIS_M          GENMASK(0, 0)
#define ANA_POL_MISC_CFG_POL_LEAK_DIS_X(x)       ((x) & GENMASK(0, 0))

/*      CHIP_TOP:RESET_CFG:RESET_CFG */
#define CHIP_TOP_RESET_CFG        __REG(TARGET_CHIP_TOP,\
					0, 1, 0, 0, 1, 4, 0, 0, 1, 4)

#define CHIP_TOP_RESET_CFG_POWER_GOOD_STATUS(x)  (((x) << 2) & GENMASK(7, 2))
#define CHIP_TOP_RESET_CFG_POWER_GOOD_STATUS_M   GENMASK(7, 2)
#define CHIP_TOP_RESET_CFG_POWER_GOOD_STATUS_X(x) (((x) & GENMASK(7, 2)) >> 2)

#define CHIP_TOP_RESET_CFG_OV_RST_ENA(x)         (((x) << 1) & GENMASK(1, 1))
#define CHIP_TOP_RESET_CFG_OV_RST_ENA_M          GENMASK(1, 1)
#define CHIP_TOP_RESET_CFG_OV_RST_ENA_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define CHIP_TOP_RESET_CFG_UV_RST_ENA(x)         ((x) & GENMASK(0, 0))
#define CHIP_TOP_RESET_CFG_UV_RST_ENA_M          GENMASK(0, 0)
#define CHIP_TOP_RESET_CFG_UV_RST_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      CHIP_TOP:MBIST_STAT:MBIST_STAT */
#define CHIP_TOP_MBIST_STAT       __REG(TARGET_CHIP_TOP,\
					0, 1, 4, 0, 1, 12, 0, 0, 1, 4)

#define CHIP_TOP_MBIST_STAT_MBIST_PASS(x)        (((x) << 2) & GENMASK(2, 2))
#define CHIP_TOP_MBIST_STAT_MBIST_PASS_M         GENMASK(2, 2)
#define CHIP_TOP_MBIST_STAT_MBIST_PASS_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define CHIP_TOP_MBIST_STAT_MBIST_DONE(x)        (((x) << 1) & GENMASK(1, 1))
#define CHIP_TOP_MBIST_STAT_MBIST_DONE_M         GENMASK(1, 1)
#define CHIP_TOP_MBIST_STAT_MBIST_DONE_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define CHIP_TOP_MBIST_STAT_MBIST_TIMED_OUT(x)   ((x) & GENMASK(0, 0))
#define CHIP_TOP_MBIST_STAT_MBIST_TIMED_OUT_M    GENMASK(0, 0)
#define CHIP_TOP_MBIST_STAT_MBIST_TIMED_OUT_X(x) ((x) & GENMASK(0, 0))

/*      CHIP_TOP:MBIST_STAT:DEVCPU_MBIST_STAT */
#define CHIP_TOP_DEVCPU_MBIST_STAT __REG(TARGET_CHIP_TOP,\
					0, 1, 4, 0, 1, 12, 4, 0, 1, 4)

#define CHIP_TOP_DEVCPU_MBIST_STAT_DEVCPU_MBIST_PASS(x)\
	(((x) << 8) & GENMASK(15, 8))
#define CHIP_TOP_DEVCPU_MBIST_STAT_DEVCPU_MBIST_PASS_M GENMASK(15, 8)
#define CHIP_TOP_DEVCPU_MBIST_STAT_DEVCPU_MBIST_PASS_X(x)\
	(((x) & GENMASK(15, 8)) >> 8)

#define CHIP_TOP_DEVCPU_MBIST_STAT_DEVCPU_MBIST_DONE(x) ((x) & GENMASK(7, 0))
#define CHIP_TOP_DEVCPU_MBIST_STAT_DEVCPU_MBIST_DONE_M GENMASK(7, 0)
#define CHIP_TOP_DEVCPU_MBIST_STAT_DEVCPU_MBIST_DONE_X(x) ((x) & GENMASK(7, 0))

/*      CHIP_TOP:MBIST_STAT:HSIO_SWC_MBIST_STAT */
#define CHIP_TOP_HSIO_SWC_MBIST_STAT __REG(TARGET_CHIP_TOP,\
					0, 1, 4, 0, 1, 12, 8, 0, 1, 4)

#define CHIP_TOP_HSIO_SWC_MBIST_STAT_HSIO_SWC_MBIST_PASS(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CHIP_TOP_HSIO_SWC_MBIST_STAT_HSIO_SWC_MBIST_PASS_M GENMASK(1, 1)
#define CHIP_TOP_HSIO_SWC_MBIST_STAT_HSIO_SWC_MBIST_PASS_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CHIP_TOP_HSIO_SWC_MBIST_STAT_HSIO_SWC_MBIST_DONE(x)\
	((x) & GENMASK(0, 0))
#define CHIP_TOP_HSIO_SWC_MBIST_STAT_HSIO_SWC_MBIST_DONE_M GENMASK(0, 0)
#define CHIP_TOP_HSIO_SWC_MBIST_STAT_HSIO_SWC_MBIST_DONE_X(x)\
	((x) & GENMASK(0, 0))

/*      CHIP_TOP:CUPHY_CFG:CUPHY_PORT_STAT */
#define CHIP_TOP_CUPHY_PORT_STAT(r) __REG(TARGET_CHIP_TOP,\
					0, 1, 16, 0, 1, 20, 0, r, 2, 4)

#define CHIP_TOP_CUPHY_PORT_STAT_LED_COL(x)      (((x) << 21) & GENMASK(21, 21))
#define CHIP_TOP_CUPHY_PORT_STAT_LED_COL_M       GENMASK(21, 21)
#define CHIP_TOP_CUPHY_PORT_STAT_LED_COL_X(x)    (((x) & GENMASK(21, 21)) >> 21)

#define CHIP_TOP_CUPHY_PORT_STAT_LED_AN_FAULT(x) (((x) << 20) & GENMASK(20, 20))
#define CHIP_TOP_CUPHY_PORT_STAT_LED_AN_FAULT_M  GENMASK(20, 20)
#define CHIP_TOP_CUPHY_PORT_STAT_LED_AN_FAULT_X(x)\
	(((x) & GENMASK(20, 20)) >> 20)

#define CHIP_TOP_CUPHY_PORT_STAT_LED_RD(x)       (((x) << 19) & GENMASK(19, 19))
#define CHIP_TOP_CUPHY_PORT_STAT_LED_RD_M        GENMASK(19, 19)
#define CHIP_TOP_CUPHY_PORT_STAT_LED_RD_X(x)     (((x) & GENMASK(19, 19)) >> 19)

#define CHIP_TOP_CUPHY_PORT_STAT_LED_DOWK(x)     (((x) << 18) & GENMASK(18, 18))
#define CHIP_TOP_CUPHY_PORT_STAT_LED_DOWK_M      GENMASK(18, 18)
#define CHIP_TOP_CUPHY_PORT_STAT_LED_DOWK_X(x)   (((x) & GENMASK(18, 18)) >> 18)

#define CHIP_TOP_CUPHY_PORT_STAT_LED_RX_100M(x)  (((x) << 17) & GENMASK(17, 17))
#define CHIP_TOP_CUPHY_PORT_STAT_LED_RX_100M_M   GENMASK(17, 17)
#define CHIP_TOP_CUPHY_PORT_STAT_LED_RX_100M_X(x)\
	(((x) & GENMASK(17, 17)) >> 17)

#define CHIP_TOP_CUPHY_PORT_STAT_LED_TX_100M(x)  (((x) << 16) & GENMASK(16, 16))
#define CHIP_TOP_CUPHY_PORT_STAT_LED_TX_100M_M   GENMASK(16, 16)
#define CHIP_TOP_CUPHY_PORT_STAT_LED_TX_100M_X(x)\
	(((x) & GENMASK(16, 16)) >> 16)

#define CHIP_TOP_CUPHY_PORT_STAT_LED_RX_1G(x)    (((x) << 15) & GENMASK(15, 15))
#define CHIP_TOP_CUPHY_PORT_STAT_LED_RX_1G_M     GENMASK(15, 15)
#define CHIP_TOP_CUPHY_PORT_STAT_LED_RX_1G_X(x)  (((x) & GENMASK(15, 15)) >> 15)

#define CHIP_TOP_CUPHY_PORT_STAT_LED_TX_1G(x)    (((x) << 14) & GENMASK(14, 14))
#define CHIP_TOP_CUPHY_PORT_STAT_LED_TX_1G_M     GENMASK(14, 14)
#define CHIP_TOP_CUPHY_PORT_STAT_LED_TX_1G_X(x)  (((x) & GENMASK(14, 14)) >> 14)

#define CHIP_TOP_CUPHY_PORT_STAT_ISOLATE(x)      (((x) << 13) & GENMASK(13, 13))
#define CHIP_TOP_CUPHY_PORT_STAT_ISOLATE_M       GENMASK(13, 13)
#define CHIP_TOP_CUPHY_PORT_STAT_ISOLATE_X(x)    (((x) & GENMASK(13, 13)) >> 13)

#define CHIP_TOP_CUPHY_PORT_STAT_PWR_DN(x)       (((x) << 12) & GENMASK(12, 12))
#define CHIP_TOP_CUPHY_PORT_STAT_PWR_DN_M        GENMASK(12, 12)
#define CHIP_TOP_CUPHY_PORT_STAT_PWR_DN_X(x)     (((x) & GENMASK(12, 12)) >> 12)

#define CHIP_TOP_CUPHY_PORT_STAT_FULLDX(x)       (((x) << 11) & GENMASK(11, 11))
#define CHIP_TOP_CUPHY_PORT_STAT_FULLDX_M        GENMASK(11, 11)
#define CHIP_TOP_CUPHY_PORT_STAT_FULLDX_X(x)     (((x) & GENMASK(11, 11)) >> 11)

#define CHIP_TOP_CUPHY_PORT_STAT_EN10T(x)        (((x) << 10) & GENMASK(10, 10))
#define CHIP_TOP_CUPHY_PORT_STAT_EN10T_M         GENMASK(10, 10)
#define CHIP_TOP_CUPHY_PORT_STAT_EN10T_X(x)      (((x) & GENMASK(10, 10)) >> 10)

#define CHIP_TOP_CUPHY_PORT_STAT_EN100T(x)       (((x) << 9) & GENMASK(9, 9))
#define CHIP_TOP_CUPHY_PORT_STAT_EN100T_M        GENMASK(9, 9)
#define CHIP_TOP_CUPHY_PORT_STAT_EN100T_X(x)     (((x) & GENMASK(9, 9)) >> 9)

#define CHIP_TOP_CUPHY_PORT_STAT_EN1000TX(x)     (((x) << 8) & GENMASK(8, 8))
#define CHIP_TOP_CUPHY_PORT_STAT_EN1000TX_M      GENMASK(8, 8)
#define CHIP_TOP_CUPHY_PORT_STAT_EN1000TX_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define CHIP_TOP_CUPHY_PORT_STAT_RQUIET100(x)    (((x) << 7) & GENMASK(7, 7))
#define CHIP_TOP_CUPHY_PORT_STAT_RQUIET100_M     GENMASK(7, 7)
#define CHIP_TOP_CUPHY_PORT_STAT_RQUIET100_X(x)  (((x) & GENMASK(7, 7)) >> 7)

#define CHIP_TOP_CUPHY_PORT_STAT_M1000_QUIET(x)  (((x) << 6) & GENMASK(6, 6))
#define CHIP_TOP_CUPHY_PORT_STAT_M1000_QUIET_M   GENMASK(6, 6)
#define CHIP_TOP_CUPHY_PORT_STAT_M1000_QUIET_X(x) (((x) & GENMASK(6, 6)) >> 6)

#define CHIP_TOP_CUPHY_PORT_STAT_M100_TX_QUIET(x) (((x) << 5) & GENMASK(5, 5))
#define CHIP_TOP_CUPHY_PORT_STAT_M100_TX_QUIET_M GENMASK(5, 5)
#define CHIP_TOP_CUPHY_PORT_STAT_M100_TX_QUIET_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define CHIP_TOP_CUPHY_PORT_STAT_FASTMODE(x)     (((x) << 4) & GENMASK(4, 4))
#define CHIP_TOP_CUPHY_PORT_STAT_FASTMODE_M      GENMASK(4, 4)
#define CHIP_TOP_CUPHY_PORT_STAT_FASTMODE_X(x)   (((x) & GENMASK(4, 4)) >> 4)

#define CHIP_TOP_CUPHY_PORT_STAT_GRCLK_RDY(x)    (((x) << 3) & GENMASK(3, 3))
#define CHIP_TOP_CUPHY_PORT_STAT_GRCLK_RDY_M     GENMASK(3, 3)
#define CHIP_TOP_CUPHY_PORT_STAT_GRCLK_RDY_X(x)  (((x) & GENMASK(3, 3)) >> 3)

#define CHIP_TOP_CUPHY_PORT_STAT_MR1000(x)       (((x) << 2) & GENMASK(2, 2))
#define CHIP_TOP_CUPHY_PORT_STAT_MR1000_M        GENMASK(2, 2)
#define CHIP_TOP_CUPHY_PORT_STAT_MR1000_X(x)     (((x) & GENMASK(2, 2)) >> 2)

#define CHIP_TOP_CUPHY_PORT_STAT_EN1000(x)       (((x) << 1) & GENMASK(1, 1))
#define CHIP_TOP_CUPHY_PORT_STAT_EN1000_M        GENMASK(1, 1)
#define CHIP_TOP_CUPHY_PORT_STAT_EN1000_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define CHIP_TOP_CUPHY_PORT_STAT_LINK_STAT(x)    ((x) & GENMASK(0, 0))
#define CHIP_TOP_CUPHY_PORT_STAT_LINK_STAT_M     GENMASK(0, 0)
#define CHIP_TOP_CUPHY_PORT_STAT_LINK_STAT_X(x)  ((x) & GENMASK(0, 0))

/*      CHIP_TOP:CUPHY_CFG:CUPHY_PORT_CFG */
#define CHIP_TOP_CUPHY_PORT_CFG(r) __REG(TARGET_CHIP_TOP,\
					0, 1, 16, 0, 1, 20, 8, r, 2, 4)

#define CHIP_TOP_CUPHY_PORT_CFG_AUTO_SQUELCH_ENA(x) (((x) << 7) & GENMASK(7, 7))
#define CHIP_TOP_CUPHY_PORT_CFG_AUTO_SQUELCH_ENA_M GENMASK(7, 7)
#define CHIP_TOP_CUPHY_PORT_CFG_AUTO_SQUELCH_ENA_X(x)\
	(((x) & GENMASK(7, 7)) >> 7)

#define CHIP_TOP_CUPHY_PORT_CFG_COMA_MODE(x)     (((x) << 6) & GENMASK(6, 6))
#define CHIP_TOP_CUPHY_PORT_CFG_COMA_MODE_M      GENMASK(6, 6)
#define CHIP_TOP_CUPHY_PORT_CFG_COMA_MODE_X(x)   (((x) & GENMASK(6, 6)) >> 6)

#define CHIP_TOP_CUPHY_PORT_CFG_MODE(x)          (((x) << 1) & GENMASK(5, 1))
#define CHIP_TOP_CUPHY_PORT_CFG_MODE_M           GENMASK(5, 1)
#define CHIP_TOP_CUPHY_PORT_CFG_MODE_X(x)        (((x) & GENMASK(5, 1)) >> 1)

#define CHIP_TOP_CUPHY_PORT_CFG_GTX_CLK_ENA(x)   ((x) & GENMASK(0, 0))
#define CHIP_TOP_CUPHY_PORT_CFG_GTX_CLK_ENA_M    GENMASK(0, 0)
#define CHIP_TOP_CUPHY_PORT_CFG_GTX_CLK_ENA_X(x) ((x) & GENMASK(0, 0))

/*      CHIP_TOP:CUPHY_CFG:CUPHY_COMMON_CFG */
#define CHIP_TOP_CUPHY_COMMON_CFG __REG(TARGET_CHIP_TOP,\
					0, 1, 16, 0, 1, 20, 16, 0, 1, 4)

#define CHIP_TOP_CUPHY_COMMON_CFG_DEBUG_BUS_ENA(x) (((x) << 3) & GENMASK(3, 3))
#define CHIP_TOP_CUPHY_COMMON_CFG_DEBUG_BUS_ENA_M GENMASK(3, 3)
#define CHIP_TOP_CUPHY_COMMON_CFG_DEBUG_BUS_ENA_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

#define CHIP_TOP_CUPHY_COMMON_CFG_XPHYAD0(x)     (((x) << 2) & GENMASK(2, 2))
#define CHIP_TOP_CUPHY_COMMON_CFG_XPHYAD0_M      GENMASK(2, 2)
#define CHIP_TOP_CUPHY_COMMON_CFG_XPHYAD0_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define CHIP_TOP_CUPHY_COMMON_CFG_MDC_SEL(x)     (((x) << 1) & GENMASK(1, 1))
#define CHIP_TOP_CUPHY_COMMON_CFG_MDC_SEL_M      GENMASK(1, 1)
#define CHIP_TOP_CUPHY_COMMON_CFG_MDC_SEL_X(x)   (((x) & GENMASK(1, 1)) >> 1)

#define CHIP_TOP_CUPHY_COMMON_CFG_RESET_N(x)     ((x) & GENMASK(0, 0))
#define CHIP_TOP_CUPHY_COMMON_CFG_RESET_N_M      GENMASK(0, 0)
#define CHIP_TOP_CUPHY_COMMON_CFG_RESET_N_X(x)   ((x) & GENMASK(0, 0))

/*      CHIP_TOP:GPIO_CFG:GPIO_CFG */
#define CHIP_TOP_GPIO_CFG(r)      __REG(TARGET_CHIP_TOP,\
					0, 1, 36, 0, 1, 312, 0, r, 78, 4)

#define CHIP_TOP_GPIO_CFG_RGMII(x)               (((x) << 4) & GENMASK(4, 4))
#define CHIP_TOP_GPIO_CFG_RGMII_M                GENMASK(4, 4)
#define CHIP_TOP_GPIO_CFG_RGMII_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define CHIP_TOP_GPIO_CFG_PD(x)                  (((x) << 3) & GENMASK(3, 3))
#define CHIP_TOP_GPIO_CFG_PD_M                   GENMASK(3, 3)
#define CHIP_TOP_GPIO_CFG_PD_X(x)                (((x) & GENMASK(3, 3)) >> 3)

#define CHIP_TOP_GPIO_CFG_PU(x)                  (((x) << 2) & GENMASK(2, 2))
#define CHIP_TOP_GPIO_CFG_PU_M                   GENMASK(2, 2)
#define CHIP_TOP_GPIO_CFG_PU_X(x)                (((x) & GENMASK(2, 2)) >> 2)

#define CHIP_TOP_GPIO_CFG_DS(x)                  ((x) & GENMASK(1, 0))
#define CHIP_TOP_GPIO_CFG_DS_M                   GENMASK(1, 0)
#define CHIP_TOP_GPIO_CFG_DS_X(x)                ((x) & GENMASK(1, 0))

/*      CHIP_TOP:PAD_CFG:PAD_CFG */
#define CHIP_TOP_PAD_CFG(r)       __REG(TARGET_CHIP_TOP,\
					0, 1, 348, 0, 1, 24, 0, r, 6, 4)

#define CHIP_TOP_PAD_CFG_PD(x)                   (((x) << 3) & GENMASK(3, 3))
#define CHIP_TOP_PAD_CFG_PD_M                    GENMASK(3, 3)
#define CHIP_TOP_PAD_CFG_PD_X(x)                 (((x) & GENMASK(3, 3)) >> 3)

#define CHIP_TOP_PAD_CFG_PU(x)                   (((x) << 2) & GENMASK(2, 2))
#define CHIP_TOP_PAD_CFG_PU_M                    GENMASK(2, 2)
#define CHIP_TOP_PAD_CFG_PU_X(x)                 (((x) & GENMASK(2, 2)) >> 2)

/*      CHIP_TOP:CPU_PLL_CFG:CPU_PLL_CFG */
#define CHIP_TOP_CPU_PLL_CFG      __REG(TARGET_CHIP_TOP,\
					0, 1, 372, 0, 1, 4, 0, 0, 1, 4)

#define CHIP_TOP_CPU_PLL_CFG_BYPASS_ENA(x)       (((x) << 20) & GENMASK(20, 20))
#define CHIP_TOP_CPU_PLL_CFG_BYPASS_ENA_M        GENMASK(20, 20)
#define CHIP_TOP_CPU_PLL_CFG_BYPASS_ENA_X(x)     (((x) & GENMASK(20, 20)) >> 20)

#define CHIP_TOP_CPU_PLL_CFG_LOCK_STAT(x)        (((x) << 19) & GENMASK(19, 19))
#define CHIP_TOP_CPU_PLL_CFG_LOCK_STAT_M         GENMASK(19, 19)
#define CHIP_TOP_CPU_PLL_CFG_LOCK_STAT_X(x)      (((x) & GENMASK(19, 19)) >> 19)

#define CHIP_TOP_CPU_PLL_CFG_ENA_CFG(x)          (((x) << 18) & GENMASK(18, 18))
#define CHIP_TOP_CPU_PLL_CFG_ENA_CFG_M           GENMASK(18, 18)
#define CHIP_TOP_CPU_PLL_CFG_ENA_CFG_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define CHIP_TOP_CPU_PLL_CFG_REF_RANGE(x)        (((x) << 15) & GENMASK(17, 15))
#define CHIP_TOP_CPU_PLL_CFG_REF_RANGE_M         GENMASK(17, 15)
#define CHIP_TOP_CPU_PLL_CFG_REF_RANGE_X(x)      (((x) & GENMASK(17, 15)) >> 15)

#define CHIP_TOP_CPU_PLL_CFG_DIVF(x)             (((x) << 8) & GENMASK(14, 8))
#define CHIP_TOP_CPU_PLL_CFG_DIVF_M              GENMASK(14, 8)
#define CHIP_TOP_CPU_PLL_CFG_DIVF_X(x)           (((x) & GENMASK(14, 8)) >> 8)

#define CHIP_TOP_CPU_PLL_CFG_DIVQ(x)             (((x) << 5) & GENMASK(7, 5))
#define CHIP_TOP_CPU_PLL_CFG_DIVQ_M              GENMASK(7, 5)
#define CHIP_TOP_CPU_PLL_CFG_DIVQ_X(x)           (((x) & GENMASK(7, 5)) >> 5)

#define CHIP_TOP_CPU_PLL_CFG_DIVR(x)             ((x) & GENMASK(4, 0))
#define CHIP_TOP_CPU_PLL_CFG_DIVR_M              GENMASK(4, 0)
#define CHIP_TOP_CPU_PLL_CFG_DIVR_X(x)           ((x) & GENMASK(4, 0))

/*      CHIP_TOP:DDR_PLL_CFG:DDR_PLL_CFG */
#define CHIP_TOP_DDR_PLL_CFG      __REG(TARGET_CHIP_TOP,\
					0, 1, 376, 0, 1, 4, 0, 0, 1, 4)

#define CHIP_TOP_DDR_PLL_CFG_BYPASS_ENA(x)       (((x) << 20) & GENMASK(20, 20))
#define CHIP_TOP_DDR_PLL_CFG_BYPASS_ENA_M        GENMASK(20, 20)
#define CHIP_TOP_DDR_PLL_CFG_BYPASS_ENA_X(x)     (((x) & GENMASK(20, 20)) >> 20)

#define CHIP_TOP_DDR_PLL_CFG_LOCK_STAT(x)        (((x) << 19) & GENMASK(19, 19))
#define CHIP_TOP_DDR_PLL_CFG_LOCK_STAT_M         GENMASK(19, 19)
#define CHIP_TOP_DDR_PLL_CFG_LOCK_STAT_X(x)      (((x) & GENMASK(19, 19)) >> 19)

#define CHIP_TOP_DDR_PLL_CFG_ENA_CFG(x)          (((x) << 18) & GENMASK(18, 18))
#define CHIP_TOP_DDR_PLL_CFG_ENA_CFG_M           GENMASK(18, 18)
#define CHIP_TOP_DDR_PLL_CFG_ENA_CFG_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define CHIP_TOP_DDR_PLL_CFG_REF_RANGE(x)        (((x) << 15) & GENMASK(17, 15))
#define CHIP_TOP_DDR_PLL_CFG_REF_RANGE_M         GENMASK(17, 15)
#define CHIP_TOP_DDR_PLL_CFG_REF_RANGE_X(x)      (((x) & GENMASK(17, 15)) >> 15)

#define CHIP_TOP_DDR_PLL_CFG_DIVF(x)             (((x) << 8) & GENMASK(14, 8))
#define CHIP_TOP_DDR_PLL_CFG_DIVF_M              GENMASK(14, 8)
#define CHIP_TOP_DDR_PLL_CFG_DIVF_X(x)           (((x) & GENMASK(14, 8)) >> 8)

#define CHIP_TOP_DDR_PLL_CFG_DIVQ(x)             (((x) << 5) & GENMASK(7, 5))
#define CHIP_TOP_DDR_PLL_CFG_DIVQ_M              GENMASK(7, 5)
#define CHIP_TOP_DDR_PLL_CFG_DIVQ_X(x)           (((x) & GENMASK(7, 5)) >> 5)

#define CHIP_TOP_DDR_PLL_CFG_DIVR(x)             ((x) & GENMASK(4, 0))
#define CHIP_TOP_DDR_PLL_CFG_DIVR_M              GENMASK(4, 0)
#define CHIP_TOP_DDR_PLL_CFG_DIVR_X(x)           ((x) & GENMASK(4, 0))

/*      CHIP_TOP:CORE_PLL_CFG:CORE_PLL_CFG */
#define CHIP_TOP_CORE_PLL_CFG     __REG(TARGET_CHIP_TOP,\
					0, 1, 380, 0, 1, 4, 0, 0, 1, 4)

#define CHIP_TOP_CORE_PLL_CFG_BYPASS_ENA(x)      (((x) << 20) & GENMASK(20, 20))
#define CHIP_TOP_CORE_PLL_CFG_BYPASS_ENA_M       GENMASK(20, 20)
#define CHIP_TOP_CORE_PLL_CFG_BYPASS_ENA_X(x)    (((x) & GENMASK(20, 20)) >> 20)

#define CHIP_TOP_CORE_PLL_CFG_LOCK_STAT(x)       (((x) << 19) & GENMASK(19, 19))
#define CHIP_TOP_CORE_PLL_CFG_LOCK_STAT_M        GENMASK(19, 19)
#define CHIP_TOP_CORE_PLL_CFG_LOCK_STAT_X(x)     (((x) & GENMASK(19, 19)) >> 19)

#define CHIP_TOP_CORE_PLL_CFG_ENA_CFG(x)         (((x) << 18) & GENMASK(18, 18))
#define CHIP_TOP_CORE_PLL_CFG_ENA_CFG_M          GENMASK(18, 18)
#define CHIP_TOP_CORE_PLL_CFG_ENA_CFG_X(x)       (((x) & GENMASK(18, 18)) >> 18)

#define CHIP_TOP_CORE_PLL_CFG_REF_RANGE(x)       (((x) << 15) & GENMASK(17, 15))
#define CHIP_TOP_CORE_PLL_CFG_REF_RANGE_M        GENMASK(17, 15)
#define CHIP_TOP_CORE_PLL_CFG_REF_RANGE_X(x)     (((x) & GENMASK(17, 15)) >> 15)

#define CHIP_TOP_CORE_PLL_CFG_DIVF(x)            (((x) << 8) & GENMASK(14, 8))
#define CHIP_TOP_CORE_PLL_CFG_DIVF_M             GENMASK(14, 8)
#define CHIP_TOP_CORE_PLL_CFG_DIVF_X(x)          (((x) & GENMASK(14, 8)) >> 8)

#define CHIP_TOP_CORE_PLL_CFG_DIVQ(x)            (((x) << 5) & GENMASK(7, 5))
#define CHIP_TOP_CORE_PLL_CFG_DIVQ_M             GENMASK(7, 5)
#define CHIP_TOP_CORE_PLL_CFG_DIVQ_X(x)          (((x) & GENMASK(7, 5)) >> 5)

#define CHIP_TOP_CORE_PLL_CFG_DIVR(x)            ((x) & GENMASK(4, 0))
#define CHIP_TOP_CORE_PLL_CFG_DIVR_M             GENMASK(4, 0)
#define CHIP_TOP_CORE_PLL_CFG_DIVR_X(x)          ((x) & GENMASK(4, 0))

/*      CHIP_TOP:PVT_SENSOR:PVT_SENSOR_CTRL */
#define CHIP_TOP_PVT_SENSOR_CTRL  __REG(TARGET_CHIP_TOP,\
					0, 1, 384, 0, 1, 12, 0, 0, 1, 4)

#define CHIP_TOP_PVT_SENSOR_CTRL_FORCE_DATA_RD(x) (((x) << 2) & GENMASK(2, 2))
#define CHIP_TOP_PVT_SENSOR_CTRL_FORCE_DATA_RD_M GENMASK(2, 2)
#define CHIP_TOP_PVT_SENSOR_CTRL_FORCE_DATA_RD_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define CHIP_TOP_PVT_SENSOR_CTRL_FORCE_ENA(x)    (((x) << 1) & GENMASK(1, 1))
#define CHIP_TOP_PVT_SENSOR_CTRL_FORCE_ENA_M     GENMASK(1, 1)
#define CHIP_TOP_PVT_SENSOR_CTRL_FORCE_ENA_X(x)  (((x) & GENMASK(1, 1)) >> 1)

#define CHIP_TOP_PVT_SENSOR_CTRL_FORCE_CLK(x)    ((x) & GENMASK(0, 0))
#define CHIP_TOP_PVT_SENSOR_CTRL_FORCE_CLK_M     GENMASK(0, 0)
#define CHIP_TOP_PVT_SENSOR_CTRL_FORCE_CLK_X(x)  ((x) & GENMASK(0, 0))

/*      CHIP_TOP:PVT_SENSOR:PVT_SENSOR_CFG */
#define CHIP_TOP_PVT_SENSOR_CFG   __REG(TARGET_CHIP_TOP,\
					0, 1, 384, 0, 1, 12, 4, 0, 1, 4)

#define CHIP_TOP_PVT_SENSOR_CFG_PVT_CLK_CFG(x)   (((x) << 20) & GENMASK(27, 20))
#define CHIP_TOP_PVT_SENSOR_CFG_PVT_CLK_CFG_M    GENMASK(27, 20)
#define CHIP_TOP_PVT_SENSOR_CFG_PVT_CLK_CFG_X(x) (((x) & GENMASK(27, 20)) >> 20)

#define CHIP_TOP_PVT_SENSOR_CFG_VTRIM_VAL(x)     (((x) << 14) & GENMASK(19, 14))
#define CHIP_TOP_PVT_SENSOR_CFG_VTRIM_VAL_M      GENMASK(19, 14)
#define CHIP_TOP_PVT_SENSOR_CFG_VTRIM_VAL_X(x)   (((x) & GENMASK(19, 14)) >> 14)

#define CHIP_TOP_PVT_SENSOR_CFG_TRIM_VAL(x)      (((x) << 9) & GENMASK(13, 9))
#define CHIP_TOP_PVT_SENSOR_CFG_TRIM_VAL_M       GENMASK(13, 9)
#define CHIP_TOP_PVT_SENSOR_CFG_TRIM_VAL_X(x)    (((x) & GENMASK(13, 9)) >> 9)

#define CHIP_TOP_PVT_SENSOR_CFG_SAMPLE_ENA(x)    (((x) << 8) & GENMASK(8, 8))
#define CHIP_TOP_PVT_SENSOR_CFG_SAMPLE_ENA_M     GENMASK(8, 8)
#define CHIP_TOP_PVT_SENSOR_CFG_SAMPLE_ENA_X(x)  (((x) & GENMASK(8, 8)) >> 8)

#define CHIP_TOP_PVT_SENSOR_CFG_START_CAPTURE(x) (((x) << 7) & GENMASK(7, 7))
#define CHIP_TOP_PVT_SENSOR_CFG_START_CAPTURE_M  GENMASK(7, 7)
#define CHIP_TOP_PVT_SENSOR_CFG_START_CAPTURE_X(x) (((x) & GENMASK(7, 7)) >> 7)

#define CHIP_TOP_PVT_SENSOR_CFG_CONTINUOUS_MODE(x) (((x) << 6) & GENMASK(6, 6))
#define CHIP_TOP_PVT_SENSOR_CFG_CONTINUOUS_MODE_M GENMASK(6, 6)
#define CHIP_TOP_PVT_SENSOR_CFG_CONTINUOUS_MODE_X(x)\
	(((x) & GENMASK(6, 6)) >> 6)

#define CHIP_TOP_PVT_SENSOR_CFG_PROBE_VREG_ENA(x) (((x) << 5) & GENMASK(5, 5))
#define CHIP_TOP_PVT_SENSOR_CFG_PROBE_VREG_ENA_M GENMASK(5, 5)
#define CHIP_TOP_PVT_SENSOR_CFG_PROBE_VREG_ENA_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define CHIP_TOP_PVT_SENSOR_CFG_VSEL_CFG(x)      (((x) << 3) & GENMASK(4, 3))
#define CHIP_TOP_PVT_SENSOR_CFG_VSEL_CFG_M       GENMASK(4, 3)
#define CHIP_TOP_PVT_SENSOR_CFG_VSEL_CFG_X(x)    (((x) & GENMASK(4, 3)) >> 3)

#define CHIP_TOP_PVT_SENSOR_CFG_VSAMPLE_ENA(x)   (((x) << 2) & GENMASK(2, 2))
#define CHIP_TOP_PVT_SENSOR_CFG_VSAMPLE_ENA_M    GENMASK(2, 2)
#define CHIP_TOP_PVT_SENSOR_CFG_VSAMPLE_ENA_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define CHIP_TOP_PVT_SENSOR_CFG_PSAMPLE_ENA(x)   ((x) & GENMASK(1, 0))
#define CHIP_TOP_PVT_SENSOR_CFG_PSAMPLE_ENA_M    GENMASK(1, 0)
#define CHIP_TOP_PVT_SENSOR_CFG_PSAMPLE_ENA_X(x) ((x) & GENMASK(1, 0))

/*      CHIP_TOP:PVT_SENSOR:PVT_SENSOR_STAT */
#define CHIP_TOP_PVT_SENSOR_STAT  __REG(TARGET_CHIP_TOP,\
					0, 1, 384, 0, 1, 12, 8, 0, 1, 4)

#define CHIP_TOP_PVT_SENSOR_STAT_DATA_VALID(x)   (((x) << 10) & GENMASK(10, 10))
#define CHIP_TOP_PVT_SENSOR_STAT_DATA_VALID_M    GENMASK(10, 10)
#define CHIP_TOP_PVT_SENSOR_STAT_DATA_VALID_X(x) (((x) & GENMASK(10, 10)) >> 10)

#define CHIP_TOP_PVT_SENSOR_STAT_DATA(x)         ((x) & GENMASK(9, 0))
#define CHIP_TOP_PVT_SENSOR_STAT_DATA_M          GENMASK(9, 0)
#define CHIP_TOP_PVT_SENSOR_STAT_DATA_X(x)       ((x) & GENMASK(9, 0))

/*      CHIP_TOP:SJTAG_MUX_CFG:SJTAG_MUX_CTRL */
#define CHIP_TOP_SJTAG_MUX_CTRL   __REG(TARGET_CHIP_TOP,\
					0, 1, 396, 0, 1, 4, 0, 0, 1, 4)

#define CHIP_TOP_SJTAG_MUX_CTRL_HOLD_SET(x)      (((x) << 2) & GENMASK(2, 2))
#define CHIP_TOP_SJTAG_MUX_CTRL_HOLD_SET_M       GENMASK(2, 2)
#define CHIP_TOP_SJTAG_MUX_CTRL_HOLD_SET_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define CHIP_TOP_SJTAG_MUX_CTRL_HOLD_CLR(x)      (((x) << 1) & GENMASK(1, 1))
#define CHIP_TOP_SJTAG_MUX_CTRL_HOLD_CLR_M       GENMASK(1, 1)
#define CHIP_TOP_SJTAG_MUX_CTRL_HOLD_CLR_X(x)    (((x) & GENMASK(1, 1)) >> 1)

#define CHIP_TOP_SJTAG_MUX_CTRL_HOLD_STAT(x)     ((x) & GENMASK(0, 0))
#define CHIP_TOP_SJTAG_MUX_CTRL_HOLD_STAT_M      GENMASK(0, 0)
#define CHIP_TOP_SJTAG_MUX_CTRL_HOLD_STAT_X(x)   ((x) & GENMASK(0, 0))

/*      CHIP_TOP:TUNE_REGS:TUNE */
#define CHIP_TOP_TUNE(g)          __REG(TARGET_CHIP_TOP,\
					0, 1, 400, g, 4, 4, 0, 0, 1, 4)

#define CHIP_TOP_TUNE_TUNE(x)                    (((x) << 15) & GENMASK(15, 15))
#define CHIP_TOP_TUNE_TUNE_M                     GENMASK(15, 15)
#define CHIP_TOP_TUNE_TUNE_X(x)                  (((x) & GENMASK(15, 15)) >> 15)

#define CHIP_TOP_TUNE_TUNE_SEL(x)                (((x) << 14) & GENMASK(14, 14))
#define CHIP_TOP_TUNE_TUNE_SEL_M                 GENMASK(14, 14)
#define CHIP_TOP_TUNE_TUNE_SEL_X(x)              (((x) & GENMASK(14, 14)) >> 14)

#define CHIP_TOP_TUNE_TAP(x)                     (((x) << 9) & GENMASK(11, 9))
#define CHIP_TOP_TUNE_TAP_M                      GENMASK(11, 9)
#define CHIP_TOP_TUNE_TAP_X(x)                   (((x) & GENMASK(11, 9)) >> 9)

#define CHIP_TOP_TUNE_TAN(x)                     (((x) << 6) & GENMASK(8, 6))
#define CHIP_TOP_TUNE_TAN_M                      GENMASK(8, 6)
#define CHIP_TOP_TUNE_TAN_X(x)                   (((x) & GENMASK(8, 6)) >> 6)

#define CHIP_TOP_TUNE_CAP(x)                     (((x) << 3) & GENMASK(5, 3))
#define CHIP_TOP_TUNE_CAP_M                      GENMASK(5, 3)
#define CHIP_TOP_TUNE_CAP_X(x)                   (((x) & GENMASK(5, 3)) >> 3)

#define CHIP_TOP_TUNE_CAN(x)                     ((x) & GENMASK(2, 0))
#define CHIP_TOP_TUNE_CAN_M                      GENMASK(2, 0)
#define CHIP_TOP_TUNE_CAN_X(x)                   ((x) & GENMASK(2, 0))

/*      CPU:CPU_REGS:GPR */
#define CPU_GPR(r)                __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 0, r, 32, 4)

/*      CPU:CPU_REGS:BUILDID */
#define CPU_BUILDID               __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 128, 0, 1, 4)

/*      CPU:CPU_REGS:RESET */
#define CPU_RESET                 __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 132, 0, 1, 4)

#define CPU_RESET_VCORE_RST(x)                   (((x) << 7) & GENMASK(7, 7))
#define CPU_RESET_VCORE_RST_M                    GENMASK(7, 7)
#define CPU_RESET_VCORE_RST_X(x)                 (((x) & GENMASK(7, 7)) >> 7)

#define CPU_RESET_CPU_CORE_0_WARM_RST(x)         (((x) << 6) & GENMASK(6, 6))
#define CPU_RESET_CPU_CORE_0_WARM_RST_M          GENMASK(6, 6)
#define CPU_RESET_CPU_CORE_0_WARM_RST_X(x)       (((x) & GENMASK(6, 6)) >> 6)

#define CPU_RESET_PROC_DBG_RST(x)                (((x) << 5) & GENMASK(5, 5))
#define CPU_RESET_PROC_DBG_RST_M                 GENMASK(5, 5)
#define CPU_RESET_PROC_DBG_RST_X(x)              (((x) & GENMASK(5, 5)) >> 5)

#define CPU_RESET_JTAG_RST(x)                    (((x) << 4) & GENMASK(4, 4))
#define CPU_RESET_JTAG_RST_M                     GENMASK(4, 4)
#define CPU_RESET_JTAG_RST_X(x)                  (((x) & GENMASK(4, 4)) >> 4)

#define CPU_RESET_CPU_L2_RST(x)                  (((x) << 3) & GENMASK(3, 3))
#define CPU_RESET_CPU_L2_RST_M                   GENMASK(3, 3)
#define CPU_RESET_CPU_L2_RST_X(x)                (((x) & GENMASK(3, 3)) >> 3)

#define CPU_RESET_MEM_RST(x)                     (((x) << 2) & GENMASK(2, 2))
#define CPU_RESET_MEM_RST_M                      GENMASK(2, 2)
#define CPU_RESET_MEM_RST_X(x)                   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_RESET_WDT_FORCE_RST(x)               (((x) << 1) & GENMASK(1, 1))
#define CPU_RESET_WDT_FORCE_RST_M                GENMASK(1, 1)
#define CPU_RESET_WDT_FORCE_RST_X(x)             (((x) & GENMASK(1, 1)) >> 1)

#define CPU_RESET_CPU_CORE_0_COLD_RST(x)         ((x) & GENMASK(0, 0))
#define CPU_RESET_CPU_CORE_0_COLD_RST_M          GENMASK(0, 0)
#define CPU_RESET_CPU_CORE_0_COLD_RST_X(x)       ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:RESET_PROT_STAT */
#define CPU_RESET_PROT_STAT       __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 136, 0, 1, 4)

#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE(x) (((x) << 5) & GENMASK(5, 5))
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_M GENMASK(5, 5)
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA(x) (((x) << 4) & GENMASK(4, 4))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA_M GENMASK(4, 4)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA_X(x)\
	(((x) & GENMASK(4, 4)) >> 4)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT(x) (((x) << 3) & GENMASK(3, 3))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT_M GENMASK(3, 3)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT_M GENMASK(2, 2)
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT(x) (((x) << 1) & GENMASK(1, 1))
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT_M GENMASK(1, 1)
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PCIE(x) ((x) & GENMASK(0, 0))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PCIE_M GENMASK(0, 0)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PCIE_X(x) ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:GENERAL_CTRL */
#define CPU_GENERAL_CTRL          __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 140, 0, 1, 4)

#define CPU_GENERAL_CTRL_IF_MIIM_SLV_ENA(x)      (((x) << 2) & GENMASK(2, 2))
#define CPU_GENERAL_CTRL_IF_MIIM_SLV_ENA_M       GENMASK(2, 2)
#define CPU_GENERAL_CTRL_IF_MIIM_SLV_ENA_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define CPU_GENERAL_CTRL_VCORE_CPU_DIS(x)        (((x) << 1) & GENMASK(1, 1))
#define CPU_GENERAL_CTRL_VCORE_CPU_DIS_M         GENMASK(1, 1)
#define CPU_GENERAL_CTRL_VCORE_CPU_DIS_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define CPU_GENERAL_CTRL_IF_SI_OWNER(x)          ((x) & GENMASK(0, 0))
#define CPU_GENERAL_CTRL_IF_SI_OWNER_M           GENMASK(0, 0)
#define CPU_GENERAL_CTRL_IF_SI_OWNER_X(x)        ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:GENERAL_STAT */
#define CPU_GENERAL_STAT          __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 144, 0, 1, 4)

#define CPU_GENERAL_STAT_REG_IF_ERR(x)           (((x) << 7) & GENMASK(9, 7))
#define CPU_GENERAL_STAT_REG_IF_ERR_M            GENMASK(9, 7)
#define CPU_GENERAL_STAT_REG_IF_ERR_X(x)         (((x) & GENMASK(9, 7)) >> 7)

#define CPU_GENERAL_STAT_CSR_REG_IF_ERR(x)       (((x) << 4) & GENMASK(6, 4))
#define CPU_GENERAL_STAT_CSR_REG_IF_ERR_M        GENMASK(6, 4)
#define CPU_GENERAL_STAT_CSR_REG_IF_ERR_X(x)     (((x) & GENMASK(6, 4)) >> 4)

#define CPU_GENERAL_STAT_VCORE_CFG(x)            ((x) & GENMASK(3, 0))
#define CPU_GENERAL_STAT_VCORE_CFG_M             GENMASK(3, 0)
#define CPU_GENERAL_STAT_VCORE_CFG_X(x)          ((x) & GENMASK(3, 0))

/*      CPU:CPU_REGS:OTP_STAT */
#define CPU_OTP_STAT              __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 148, 0, 1, 4)

#define CPU_OTP_STAT_OTP_PROGRAMMED(x)           (((x) << 4) & GENMASK(4, 4))
#define CPU_OTP_STAT_OTP_PROGRAMMED_M            GENMASK(4, 4)
#define CPU_OTP_STAT_OTP_PROGRAMMED_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define CPU_OTP_STAT_OTP_CPU_DISABLED(x)         (((x) << 3) & GENMASK(3, 3))
#define CPU_OTP_STAT_OTP_CPU_DISABLED_M          GENMASK(3, 3)
#define CPU_OTP_STAT_OTP_CPU_DISABLED_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define CPU_OTP_STAT_OTP_CPU_DBG_DISABLED(x)     (((x) << 2) & GENMASK(2, 2))
#define CPU_OTP_STAT_OTP_CPU_DBG_DISABLED_M      GENMASK(2, 2)
#define CPU_OTP_STAT_OTP_CPU_DBG_DISABLED_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_OTP_STAT_OTP_CPU_SEC_DBG_DISABLED(x) (((x) << 1) & GENMASK(1, 1))
#define CPU_OTP_STAT_OTP_CPU_SEC_DBG_DISABLED_M  GENMASK(1, 1)
#define CPU_OTP_STAT_OTP_CPU_SEC_DBG_DISABLED_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define CPU_OTP_STAT_OTP_CAN_DISABLED(x)         ((x) & GENMASK(0, 0))
#define CPU_OTP_STAT_OTP_CAN_DISABLED_M          GENMASK(0, 0)
#define CPU_OTP_STAT_OTP_CAN_DISABLED_X(x)       ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:CPU_DBG */
#define CPU_CPU_DBG               __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 152, 0, 1, 4)

#define CPU_CPU_DBG_ENABLE_PROT_DEBUG_BIT(x)     (((x) << 5) & GENMASK(5, 5))
#define CPU_CPU_DBG_ENABLE_PROT_DEBUG_BIT_M      GENMASK(5, 5)
#define CPU_CPU_DBG_ENABLE_PROT_DEBUG_BIT_X(x)   (((x) & GENMASK(5, 5)) >> 5)

#define CPU_CPU_DBG_DBGEN(x)                     (((x) << 4) & GENMASK(4, 4))
#define CPU_CPU_DBG_DBGEN_M                      GENMASK(4, 4)
#define CPU_CPU_DBG_DBGEN_X(x)                   (((x) & GENMASK(4, 4)) >> 4)

#define CPU_CPU_DBG_SPIDEN(x)                    (((x) << 3) & GENMASK(3, 3))
#define CPU_CPU_DBG_SPIDEN_M                     GENMASK(3, 3)
#define CPU_CPU_DBG_SPIDEN_X(x)                  (((x) & GENMASK(3, 3)) >> 3)

#define CPU_CPU_DBG_NIDEN(x)                     (((x) << 2) & GENMASK(2, 2))
#define CPU_CPU_DBG_NIDEN_M                      GENMASK(2, 2)
#define CPU_CPU_DBG_NIDEN_X(x)                   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_CPU_DBG_SPNIDEN(x)                   (((x) << 1) & GENMASK(1, 1))
#define CPU_CPU_DBG_SPNIDEN_M                    GENMASK(1, 1)
#define CPU_CPU_DBG_SPNIDEN_X(x)                 (((x) & GENMASK(1, 1)) >> 1)

#define CPU_CPU_DBG_CORE_IN_DBG(x)               ((x) & GENMASK(0, 0))
#define CPU_CPU_DBG_CORE_IN_DBG_M                GENMASK(0, 0)
#define CPU_CPU_DBG_CORE_IN_DBG_X(x)             ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:ENDIANNESS */
#define CPU_ENDIANNESS            __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 156, 0, 1, 4)

#define CPU_ENDIANNESS_REG_IF_BIGENDIAN(x)       ((x) & GENMASK(0, 0))
#define CPU_ENDIANNESS_REG_IF_BIGENDIAN_M        GENMASK(0, 0)
#define CPU_ENDIANNESS_REG_IF_BIGENDIAN_X(x)     ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:PROC_CTRL */
#define CPU_PROC_CTRL             __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 160, 0, 1, 4)

#define CPU_PROC_CTRL_BE_EXCEP_MODE(x)           (((x) << 4) & GENMASK(4, 4))
#define CPU_PROC_CTRL_BE_EXCEP_MODE_M            GENMASK(4, 4)
#define CPU_PROC_CTRL_BE_EXCEP_MODE_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define CPU_PROC_CTRL_VINITHI(x)                 (((x) << 3) & GENMASK(3, 3))
#define CPU_PROC_CTRL_VINITHI_M                  GENMASK(3, 3)
#define CPU_PROC_CTRL_VINITHI_X(x)               (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PROC_CTRL_CFGTE(x)                   (((x) << 2) & GENMASK(2, 2))
#define CPU_PROC_CTRL_CFGTE_M                    GENMASK(2, 2)
#define CPU_PROC_CTRL_CFGTE_X(x)                 (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PROC_CTRL_CP15S_DISABLE(x)           (((x) << 1) & GENMASK(1, 1))
#define CPU_PROC_CTRL_CP15S_DISABLE_M            GENMASK(1, 1)
#define CPU_PROC_CTRL_CP15S_DISABLE_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PROC_CTRL_PROC_CRYPTO_DISABLE(x)     ((x) & GENMASK(0, 0))
#define CPU_PROC_CTRL_PROC_CRYPTO_DISABLE_M      GENMASK(0, 0)
#define CPU_PROC_CTRL_PROC_CRYPTO_DISABLE_X(x)   ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:PROC_STAT */
#define CPU_PROC_STAT             __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 164, 0, 1, 4)

#define CPU_PROC_STAT_DAP_JTAG_SW_MODE(x)        (((x) << 3) & GENMASK(3, 3))
#define CPU_PROC_STAT_DAP_JTAG_SW_MODE_M         GENMASK(3, 3)
#define CPU_PROC_STAT_DAP_JTAG_SW_MODE_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PROC_STAT_WFI(x)                     (((x) << 2) & GENMASK(2, 2))
#define CPU_PROC_STAT_WFI_M                      GENMASK(2, 2)
#define CPU_PROC_STAT_WFI_X(x)                   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PROC_STAT_WFIL2(x)                   (((x) << 1) & GENMASK(1, 1))
#define CPU_PROC_STAT_WFIL2_M                    GENMASK(1, 1)
#define CPU_PROC_STAT_WFIL2_X(x)                 (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PROC_STAT_WFE(x)                     ((x) & GENMASK(0, 0))
#define CPU_PROC_STAT_WFE_M                      GENMASK(0, 0)
#define CPU_PROC_STAT_WFE_X(x)                   ((x) & GENMASK(0, 0))

/*      CPU:GCK_REGS:GCK_CFG */
#define CPU_GCK_CFG(r)            __REG(TARGET_CPU,\
					0, 1, 168, 0, 1, 56, 0, r, 14, 4)

#define CPU_GCK_CFG_GCK_PRESCALER(x)             (((x) << 16) & GENMASK(23, 16))
#define CPU_GCK_CFG_GCK_PRESCALER_M              GENMASK(23, 16)
#define CPU_GCK_CFG_GCK_PRESCALER_X(x)           (((x) & GENMASK(23, 16)) >> 16)

#define CPU_GCK_CFG_GCK_SRC_SEL(x)               (((x) << 8) & GENMASK(9, 8))
#define CPU_GCK_CFG_GCK_SRC_SEL_M                GENMASK(9, 8)
#define CPU_GCK_CFG_GCK_SRC_SEL_X(x)             (((x) & GENMASK(9, 8)) >> 8)

#define CPU_GCK_CFG_GCK_ENA(x)                   ((x) & GENMASK(0, 0))
#define CPU_GCK_CFG_GCK_ENA_M                    GENMASK(0, 0)
#define CPU_GCK_CFG_GCK_ENA_X(x)                 ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_CFG */
#define CPU_USB_CFG               __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 0, 0, 1, 4)

#define CPU_USB_CFG_DEB_CYCLES_CNT(x)            (((x) << 2) & GENMASK(25, 2))
#define CPU_USB_CFG_DEB_CYCLES_CNT_M             GENMASK(25, 2)
#define CPU_USB_CFG_DEB_CYCLES_CNT_X(x)          (((x) & GENMASK(25, 2)) >> 2)

#define CPU_USB_CFG_VBUS_DET_POL(x)              (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_CFG_VBUS_DET_POL_M               GENMASK(1, 1)
#define CPU_USB_CFG_VBUS_DET_POL_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_CFG_OCS_N_POL(x)                 ((x) & GENMASK(0, 0))
#define CPU_USB_CFG_OCS_N_POL_M                  GENMASK(0, 0)
#define CPU_USB_CFG_OCS_N_POL_X(x)               ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_CTRL */
#define CPU_USB_CTRL              __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 4, 0, 1, 4)

#define CPU_USB_CTRL_FLADJ_30MHZ_REG(x)          (((x) << 5) & GENMASK(10, 5))
#define CPU_USB_CTRL_FLADJ_30MHZ_REG_M           GENMASK(10, 5)
#define CPU_USB_CTRL_FLADJ_30MHZ_REG_X(x)        (((x) & GENMASK(10, 5)) >> 5)

#define CPU_USB_CTRL_PORT_POWER_CONTROL_PRESENT(x) (((x) << 4) & GENMASK(4, 4))
#define CPU_USB_CTRL_PORT_POWER_CONTROL_PRESENT_M GENMASK(4, 4)
#define CPU_USB_CTRL_PORT_POWER_CONTROL_PRESENT_X(x)\
	(((x) & GENMASK(4, 4)) >> 4)

#define CPU_USB_CTRL_POWER_EN_CONTROL(x)         (((x) << 3) & GENMASK(3, 3))
#define CPU_USB_CTRL_POWER_EN_CONTROL_M          GENMASK(3, 3)
#define CPU_USB_CTRL_POWER_EN_CONTROL_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define CPU_USB_CTRL_OCS_TO_DWC_USB3(x)          (((x) << 2) & GENMASK(2, 2))
#define CPU_USB_CTRL_OCS_TO_DWC_USB3_M           GENMASK(2, 2)
#define CPU_USB_CTRL_OCS_TO_DWC_USB3_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define CPU_USB_CTRL_POWER_EN(x)                 ((x) & GENMASK(0, 0))
#define CPU_USB_CTRL_POWER_EN_M                  GENMASK(0, 0)
#define CPU_USB_CTRL_POWER_EN_X(x)               ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_STAT */
#define CPU_USB_STAT              __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 8, 0, 1, 4)

#define CPU_USB_STAT_CLK_GATE_CTRL(x)            (((x) << 3) & GENMASK(5, 3))
#define CPU_USB_STAT_CLK_GATE_CTRL_M             GENMASK(5, 3)
#define CPU_USB_STAT_CLK_GATE_CTRL_X(x)          (((x) & GENMASK(5, 3)) >> 3)

#define CPU_USB_STAT_HOST_SYS_ERR(x)             (((x) << 2) & GENMASK(2, 2))
#define CPU_USB_STAT_HOST_SYS_ERR_M              GENMASK(2, 2)
#define CPU_USB_STAT_HOST_SYS_ERR_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define CPU_USB_STAT_OCS_N(x)                    (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_STAT_OCS_N_M                     GENMASK(1, 1)
#define CPU_USB_STAT_OCS_N_X(x)                  (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_STAT_VBUS_DET(x)                 ((x) & GENMASK(0, 0))
#define CPU_USB_STAT_VBUS_DET_M                  GENMASK(0, 0)
#define CPU_USB_STAT_VBUS_DET_X(x)               ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_INTR */
#define CPU_USB_INTR              __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 12, 0, 1, 4)

#define CPU_USB_INTR_INTR_OCS_N_STICKY(x)        (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_INTR_INTR_OCS_N_STICKY_M         GENMASK(1, 1)
#define CPU_USB_INTR_INTR_OCS_N_STICKY_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_INTR_INTR_VBUS_DET_STICKY(x)     ((x) & GENMASK(0, 0))
#define CPU_USB_INTR_INTR_VBUS_DET_STICKY_M      GENMASK(0, 0)
#define CPU_USB_INTR_INTR_VBUS_DET_STICKY_X(x)   ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_INTR_ENA */
#define CPU_USB_INTR_ENA          __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 16, 0, 1, 4)

#define CPU_USB_INTR_ENA_INTR_ENA_OCS_N(x)       (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_INTR_ENA_INTR_ENA_OCS_N_M        GENMASK(1, 1)
#define CPU_USB_INTR_ENA_INTR_ENA_OCS_N_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_INTR_ENA_INTR_ENA_VBUS_DET(x)    ((x) & GENMASK(0, 0))
#define CPU_USB_INTR_ENA_INTR_ENA_VBUS_DET_M     GENMASK(0, 0)
#define CPU_USB_INTR_ENA_INTR_ENA_VBUS_DET_X(x)  ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_INTR_IDENT */
#define CPU_USB_INTR_IDENT        __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 20, 0, 1, 4)

#define CPU_USB_INTR_IDENT_INTR_IDENT_OCS_N(x)   (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_INTR_IDENT_INTR_IDENT_OCS_N_M    GENMASK(1, 1)
#define CPU_USB_INTR_IDENT_INTR_IDENT_OCS_N_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_INTR_IDENT_INTR_IDENT_VBUS_DET(x) ((x) & GENMASK(0, 0))
#define CPU_USB_INTR_IDENT_INTR_IDENT_VBUS_DET_M GENMASK(0, 0)
#define CPU_USB_INTR_IDENT_INTR_IDENT_VBUS_DET_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_DEBUG1 */
#define CPU_USB_DEBUG1            __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 24, 0, 1, 4)

/*      CPU:USB_REGS:USB_DEBUG2 */
#define CPU_USB_DEBUG2            __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 28, 0, 1, 4)

/*      CPU:USB_REGS:USB_DEBUG3 */
#define CPU_USB_DEBUG3            __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 32, 0, 1, 4)

#define CPU_USB_DEBUG3_DEBUG3(x)                 ((x) & GENMASK(2, 0))
#define CPU_USB_DEBUG3_DEBUG3_M                  GENMASK(2, 0)
#define CPU_USB_DEBUG3_DEBUG3_X(x)               ((x) & GENMASK(2, 0))

/*      CPU:USB_REGS:USB_LA_TRACE1 */
#define CPU_USB_LA_TRACE1         __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 36, 0, 1, 4)

/*      CPU:USB_REGS:USB_LA_TRACE2 */
#define CPU_USB_LA_TRACE2         __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 40, 0, 1, 4)

/*      CPU:USB_REGS:USB_GGPIO */
#define CPU_USB_GGPIO             __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 44, 0, 1, 4)

#define CPU_USB_GGPIO_GPO(x)                     (((x) << 16) & GENMASK(31, 16))
#define CPU_USB_GGPIO_GPO_M                      GENMASK(31, 16)
#define CPU_USB_GGPIO_GPO_X(x)                   (((x) & GENMASK(31, 16)) >> 16)

#define CPU_USB_GGPIO_GPI(x)                     ((x) & GENMASK(15, 0))
#define CPU_USB_GGPIO_GPI_M                      GENMASK(15, 0)
#define CPU_USB_GGPIO_GPI_X(x)                   ((x) & GENMASK(15, 0))

/*      CPU:MIIM_TARGET:MIIM_TARGET_CFG */
#define CPU_MIIM_TARGET_CFG       __REG(TARGET_CPU,\
					0, 1, 272, 0, 1, 4, 0, 0, 1, 4)

#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_CFG(x)  (((x) << 1) & GENMASK(5, 1))
#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_CFG_M   GENMASK(5, 1)
#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_CFG_X(x) (((x) & GENMASK(5, 1)) >> 1)

#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_ENA(x)  ((x) & GENMASK(0, 0))
#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_ENA_M   GENMASK(0, 0)
#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_ENA_X(x) ((x) & GENMASK(0, 0))

/*      CPU:VCORE_ACC:VCORE_ACC_CFG */
#define CPU_VCORE_ACC_CFG         __REG(TARGET_CPU,\
					0, 1, 276, 0, 1, 4, 0, 0, 1, 4)

#define CPU_VCORE_ACC_CFG_DIS_VA_RD_ERR(x)       ((x) & GENMASK(0, 0))
#define CPU_VCORE_ACC_CFG_DIS_VA_RD_ERR_M        GENMASK(0, 0)
#define CPU_VCORE_ACC_CFG_DIS_VA_RD_ERR_X(x)     ((x) & GENMASK(0, 0))

/*      CPU:MSIX_ACC:MSIX_ACC_CFG */
#define CPU_MSIX_ACC_CFG          __REG(TARGET_CPU,\
					0, 1, 280, 0, 1, 4, 0, 0, 1, 4)

#define CPU_MSIX_ACC_CFG_DIS_MSIX_RD_ERR(x)      ((x) & GENMASK(0, 0))
#define CPU_MSIX_ACC_CFG_DIS_MSIX_RD_ERR_M       GENMASK(0, 0)
#define CPU_MSIX_ACC_CFG_DIS_MSIX_RD_ERR_X(x)    ((x) & GENMASK(0, 0))

/*      CPU:EXT_IF_ACC_STAT:EXT_IF_ACC_STAT */
#define CPU_EXT_IF_ACC_STAT       __REG(TARGET_CPU,\
					0, 1, 284, 0, 1, 4, 0, 0, 1, 4)

#define CPU_EXT_IF_ACC_STAT_MSIX_ACC_STAT(x)     (((x) << 20) & GENMASK(22, 20))
#define CPU_EXT_IF_ACC_STAT_MSIX_ACC_STAT_M      GENMASK(22, 20)
#define CPU_EXT_IF_ACC_STAT_MSIX_ACC_STAT_X(x)   (((x) & GENMASK(22, 20)) >> 20)

#define CPU_EXT_IF_ACC_STAT_VA_ACC_STAT(x)       (((x) << 16) & GENMASK(18, 16))
#define CPU_EXT_IF_ACC_STAT_VA_ACC_STAT_M        GENMASK(18, 16)
#define CPU_EXT_IF_ACC_STAT_VA_ACC_STAT_X(x)     (((x) & GENMASK(18, 16)) >> 16)

#define CPU_EXT_IF_ACC_STAT_MIIM_ACC_STAT(x)     (((x) << 12) & GENMASK(14, 12))
#define CPU_EXT_IF_ACC_STAT_MIIM_ACC_STAT_M      GENMASK(14, 12)
#define CPU_EXT_IF_ACC_STAT_MIIM_ACC_STAT_X(x)   (((x) & GENMASK(14, 12)) >> 12)

#define CPU_EXT_IF_ACC_STAT_SI_ACC_STAT(x)       (((x) << 4) & GENMASK(6, 4))
#define CPU_EXT_IF_ACC_STAT_SI_ACC_STAT_M        GENMASK(6, 4)
#define CPU_EXT_IF_ACC_STAT_SI_ACC_STAT_X(x)     (((x) & GENMASK(6, 4)) >> 4)

#define CPU_EXT_IF_ACC_STAT_VRAP_ACC_STAT(x)     ((x) & GENMASK(2, 0))
#define CPU_EXT_IF_ACC_STAT_VRAP_ACC_STAT_M      GENMASK(2, 0)
#define CPU_EXT_IF_ACC_STAT_VRAP_ACC_STAT_X(x)   ((x) & GENMASK(2, 0))

/*      CPU:INTR:INTR_RAW */
#define CPU_INTR_RAW              __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 0, 0, 1, 4)

/*      CPU:INTR:INTR_RAW1 */
#define CPU_INTR_RAW1             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 4, 0, 1, 4)

/*      CPU:INTR:INTR_RAW2 */
#define CPU_INTR_RAW2             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 8, 0, 1, 4)

/*      CPU:INTR:INTR_TRIGGER */
#define CPU_INTR_TRIGGER(r)       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 12, r, 2, 4)

/*      CPU:INTR:INTR_TRIGGER1 */
#define CPU_INTR_TRIGGER1(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 20, r, 2, 4)

/*      CPU:INTR:INTR_TRIGGER2 */
#define CPU_INTR_TRIGGER2(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 28, r, 2, 4)

/*      CPU:INTR:INTR_FORCE */
#define CPU_INTR_FORCE            __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 36, 0, 1, 4)

/*      CPU:INTR:INTR_FORCE1 */
#define CPU_INTR_FORCE1           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 40, 0, 1, 4)

/*      CPU:INTR:INTR_FORCE2 */
#define CPU_INTR_FORCE2           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 44, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY */
#define CPU_INTR_STICKY           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 48, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY1 */
#define CPU_INTR_STICKY1          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 52, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY2 */
#define CPU_INTR_STICKY2          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 56, 0, 1, 4)

/*      CPU:INTR:INTR_BYPASS */
#define CPU_INTR_BYPASS           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 60, 0, 1, 4)

/*      CPU:INTR:INTR_BYPASS1 */
#define CPU_INTR_BYPASS1          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 64, 0, 1, 4)

/*      CPU:INTR:INTR_BYPASS2 */
#define CPU_INTR_BYPASS2          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 68, 0, 1, 4)

/*      CPU:INTR:INTR_ENA */
#define CPU_INTR_ENA              __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 72, 0, 1, 4)

/*      CPU:INTR:INTR_ENA1 */
#define CPU_INTR_ENA1             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 76, 0, 1, 4)

/*      CPU:INTR:INTR_ENA2 */
#define CPU_INTR_ENA2             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 80, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR */
#define CPU_INTR_ENA_CLR          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 84, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR1 */
#define CPU_INTR_ENA_CLR1         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 88, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR2 */
#define CPU_INTR_ENA_CLR2         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 92, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET */
#define CPU_INTR_ENA_SET          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 96, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET1 */
#define CPU_INTR_ENA_SET1         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 100, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET2 */
#define CPU_INTR_ENA_SET2         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 104, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT */
#define CPU_INTR_IDENT            __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 108, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT1 */
#define CPU_INTR_IDENT1           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 112, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT2 */
#define CPU_INTR_IDENT2           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 116, 0, 1, 4)

/*      CPU:INTR:DST_INTR_MAP */
#define CPU_DST_INTR_MAP(r)       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 120, r, 9, 4)

/*      CPU:INTR:DST_INTR_MAP1 */
#define CPU_DST_INTR_MAP1(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 156, r, 9, 4)

/*      CPU:INTR:DST_INTR_MAP2 */
#define CPU_DST_INTR_MAP2(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 192, r, 9, 4)

/*      CPU:INTR:DST_INTR_IDENT */
#define CPU_DST_INTR_IDENT(r)     __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 228, r, 9, 4)

/*      CPU:INTR:DST_INTR_IDENT1 */
#define CPU_DST_INTR_IDENT1(r)    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 264, r, 9, 4)

/*      CPU:INTR:DST_INTR_IDENT2 */
#define CPU_DST_INTR_IDENT2(r)    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 300, r, 9, 4)

/*      CPU:INTR:EXT_SRC_INTR_POL */
#define CPU_EXT_SRC_INTR_POL      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 336, 0, 1, 4)

#define CPU_EXT_SRC_INTR_POL_EXT_SRC_INTR_POL(x) ((x) & GENMASK(7, 0))
#define CPU_EXT_SRC_INTR_POL_EXT_SRC_INTR_POL_M  GENMASK(7, 0)
#define CPU_EXT_SRC_INTR_POL_EXT_SRC_INTR_POL_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:EXT_DST_INTR_POL */
#define CPU_EXT_DST_INTR_POL      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 340, 0, 1, 4)

#define CPU_EXT_DST_INTR_POL_EXT_DST_INTR_POL(x) ((x) & GENMASK(7, 0))
#define CPU_EXT_DST_INTR_POL_EXT_DST_INTR_POL_M  GENMASK(7, 0)
#define CPU_EXT_DST_INTR_POL_EXT_DST_INTR_POL_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:EXT_DST_INTR_DRV */
#define CPU_EXT_DST_INTR_DRV      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 344, 0, 1, 4)

#define CPU_EXT_DST_INTR_DRV_EXT_DST_INTR_DRV(x) ((x) & GENMASK(7, 0))
#define CPU_EXT_DST_INTR_DRV_EXT_DST_INTR_DRV_M  GENMASK(7, 0)
#define CPU_EXT_DST_INTR_DRV_EXT_DST_INTR_DRV_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_POL */
#define CPU_DEV_INTR_POL          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 348, 0, 1, 4)

#define CPU_DEV_INTR_POL_DEV_INTR_POL(x)         ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_POL_DEV_INTR_POL_M          GENMASK(7, 0)
#define CPU_DEV_INTR_POL_DEV_INTR_POL_X(x)       ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_RAW */
#define CPU_DEV_INTR_RAW          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 352, 0, 1, 4)

#define CPU_DEV_INTR_RAW_DEV_INTR_RAW(x)         ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_RAW_DEV_INTR_RAW_M          GENMASK(7, 0)
#define CPU_DEV_INTR_RAW_DEV_INTR_RAW_X(x)       ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_TRIGGER */
#define CPU_DEV_INTR_TRIGGER(r)   __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 356, r, 2, 4)

#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER(x) ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER_M  GENMASK(7, 0)
#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_STICKY */
#define CPU_DEV_INTR_STICKY       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 364, 0, 1, 4)

#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY(x)   ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY_M    GENMASK(7, 0)
#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_BYPASS */
#define CPU_DEV_INTR_BYPASS       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 368, 0, 1, 4)

#define CPU_DEV_INTR_BYPASS_DEV_INTR_BYPASS(x)   ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_BYPASS_DEV_INTR_BYPASS_M    GENMASK(7, 0)
#define CPU_DEV_INTR_BYPASS_DEV_INTR_BYPASS_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_ENA */
#define CPU_DEV_INTR_ENA          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 372, 0, 1, 4)

#define CPU_DEV_INTR_ENA_DEV_INTR_ENA(x)         ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_ENA_DEV_INTR_ENA_M          GENMASK(7, 0)
#define CPU_DEV_INTR_ENA_DEV_INTR_ENA_X(x)       ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_IDENT */
#define CPU_DEV_INTR_IDENT        __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 376, 0, 1, 4)

#define CPU_DEV_INTR_IDENT_DEV_INTR_IDENT(x)     ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_IDENT_DEV_INTR_IDENT_M      GENMASK(7, 0)
#define CPU_DEV_INTR_IDENT_DEV_INTR_IDENT_X(x)   ((x) & GENMASK(7, 0))

/*      CPU:INTR:MSIX_CFG */
#define CPU_MSIX_CFG              __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 380, 0, 1, 4)

#define CPU_MSIX_CFG_MSIX_ENA(x)                 (((x) << 17) & GENMASK(17, 17))
#define CPU_MSIX_CFG_MSIX_ENA_M                  GENMASK(17, 17)
#define CPU_MSIX_CFG_MSIX_ENA_X(x)               (((x) & GENMASK(17, 17)) >> 17)

#define CPU_MSIX_CFG_MSIX_DOORBELL_TC(x)         (((x) << 14) & GENMASK(16, 14))
#define CPU_MSIX_CFG_MSIX_DOORBELL_TC_M          GENMASK(16, 14)
#define CPU_MSIX_CFG_MSIX_DOORBELL_TC_X(x)       (((x) & GENMASK(16, 14)) >> 14)

#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_ACTIVE(x)  (((x) << 13) & GENMASK(13, 13))
#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_ACTIVE_M   GENMASK(13, 13)
#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_ACTIVE_X(x)\
	(((x) & GENMASK(13, 13)) >> 13)

#define CPU_MSIX_CFG_MSIX_DOORBELL_VF(x)         (((x) << 5) & GENMASK(12, 5))
#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_M          GENMASK(12, 5)
#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_X(x)       (((x) & GENMASK(12, 5)) >> 5)

#define CPU_MSIX_CFG_MSIX_DOORBELL_PF(x)         ((x) & GENMASK(4, 0))
#define CPU_MSIX_CFG_MSIX_DOORBELL_PF_M          GENMASK(4, 0)
#define CPU_MSIX_CFG_MSIX_DOORBELL_PF_X(x)       ((x) & GENMASK(4, 0))

/*      CPU:INTR:MSIX_DOORBELL_ADDR */
#define CPU_MSIX_DOORBELL_ADDR    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 384, 0, 1, 4)

/*      CPU:INTR:MSIX_INTR_PENDING */
#define CPU_MSIX_INTR_PENDING     __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 388, 0, 1, 4)

/*      CPU:INTR:MSIX_INTR_PENDING1 */
#define CPU_MSIX_INTR_PENDING1    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 392, 0, 1, 4)

/*      CPU:INTR:MSIX_INTR_PENDING2 */
#define CPU_MSIX_INTR_PENDING2    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 396, 0, 1, 4)

/*      CPU:DDRCTRL:DDRCTRL_CLK */
#define CPU_DDRCTRL_CLK           __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 0, 0, 1, 4)

#define CPU_DDRCTRL_CLK_RAM_RING_ENA(x)          (((x) << 7) & GENMASK(7, 7))
#define CPU_DDRCTRL_CLK_RAM_RING_ENA_M           GENMASK(7, 7)
#define CPU_DDRCTRL_CLK_RAM_RING_ENA_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define CPU_DDRCTRL_CLK_DDRPHY_APB_CLK_ENA(x)    (((x) << 6) & GENMASK(6, 6))
#define CPU_DDRCTRL_CLK_DDRPHY_APB_CLK_ENA_M     GENMASK(6, 6)
#define CPU_DDRCTRL_CLK_DDRPHY_APB_CLK_ENA_X(x)  (((x) & GENMASK(6, 6)) >> 6)

#define CPU_DDRCTRL_CLK_DDRPHY_CTL_CLK_ENA(x)    (((x) << 5) & GENMASK(5, 5))
#define CPU_DDRCTRL_CLK_DDRPHY_CTL_CLK_ENA_M     GENMASK(5, 5)
#define CPU_DDRCTRL_CLK_DDRPHY_CTL_CLK_ENA_X(x)  (((x) & GENMASK(5, 5)) >> 5)

#define CPU_DDRCTRL_CLK_DDR_APB_CLK_ENA(x)       (((x) << 4) & GENMASK(4, 4))
#define CPU_DDRCTRL_CLK_DDR_APB_CLK_ENA_M        GENMASK(4, 4)
#define CPU_DDRCTRL_CLK_DDR_APB_CLK_ENA_X(x)     (((x) & GENMASK(4, 4)) >> 4)

#define CPU_DDRCTRL_CLK_DDR_AXI2_CLK_ENA(x)      (((x) << 3) & GENMASK(3, 3))
#define CPU_DDRCTRL_CLK_DDR_AXI2_CLK_ENA_M       GENMASK(3, 3)
#define CPU_DDRCTRL_CLK_DDR_AXI2_CLK_ENA_X(x)    (((x) & GENMASK(3, 3)) >> 3)

#define CPU_DDRCTRL_CLK_DDR_AXI1_CLK_ENA(x)      (((x) << 2) & GENMASK(2, 2))
#define CPU_DDRCTRL_CLK_DDR_AXI1_CLK_ENA_M       GENMASK(2, 2)
#define CPU_DDRCTRL_CLK_DDR_AXI1_CLK_ENA_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRCTRL_CLK_DDR_AXI0_CLK_ENA(x)      (((x) << 1) & GENMASK(1, 1))
#define CPU_DDRCTRL_CLK_DDR_AXI0_CLK_ENA_M       GENMASK(1, 1)
#define CPU_DDRCTRL_CLK_DDR_AXI0_CLK_ENA_X(x)    (((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRCTRL_CLK_DDR_CLK_ENA(x)           ((x) & GENMASK(0, 0))
#define CPU_DDRCTRL_CLK_DDR_CLK_ENA_M            GENMASK(0, 0)
#define CPU_DDRCTRL_CLK_DDR_CLK_ENA_X(x)         ((x) & GENMASK(0, 0))

/*      CPU:DDRCTRL:DDRCTRL_RST */
#define CPU_DDRCTRL_RST           __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 4, 0, 1, 4)

#define CPU_DDRCTRL_RST_DDRPHY_APB_RST(x)        (((x) << 7) & GENMASK(7, 7))
#define CPU_DDRCTRL_RST_DDRPHY_APB_RST_M         GENMASK(7, 7)
#define CPU_DDRCTRL_RST_DDRPHY_APB_RST_X(x)      (((x) & GENMASK(7, 7)) >> 7)

#define CPU_DDRCTRL_RST_FPGA_DDRPHY_SOFT_RST(x)  (((x) << 6) & GENMASK(6, 6))
#define CPU_DDRCTRL_RST_FPGA_DDRPHY_SOFT_RST_M   GENMASK(6, 6)
#define CPU_DDRCTRL_RST_FPGA_DDRPHY_SOFT_RST_X(x) (((x) & GENMASK(6, 6)) >> 6)

#define CPU_DDRCTRL_RST_DDRPHY_CTL_RST(x)        (((x) << 5) & GENMASK(5, 5))
#define CPU_DDRCTRL_RST_DDRPHY_CTL_RST_M         GENMASK(5, 5)
#define CPU_DDRCTRL_RST_DDRPHY_CTL_RST_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define CPU_DDRCTRL_RST_DDR_APB_RST(x)           (((x) << 4) & GENMASK(4, 4))
#define CPU_DDRCTRL_RST_DDR_APB_RST_M            GENMASK(4, 4)
#define CPU_DDRCTRL_RST_DDR_APB_RST_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define CPU_DDRCTRL_RST_DDR_AXI2_RST(x)          (((x) << 3) & GENMASK(3, 3))
#define CPU_DDRCTRL_RST_DDR_AXI2_RST_M           GENMASK(3, 3)
#define CPU_DDRCTRL_RST_DDR_AXI2_RST_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define CPU_DDRCTRL_RST_DDR_AXI1_RST(x)          (((x) << 2) & GENMASK(2, 2))
#define CPU_DDRCTRL_RST_DDR_AXI1_RST_M           GENMASK(2, 2)
#define CPU_DDRCTRL_RST_DDR_AXI1_RST_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRCTRL_RST_DDR_AXI0_RST(x)          (((x) << 1) & GENMASK(1, 1))
#define CPU_DDRCTRL_RST_DDR_AXI0_RST_M           GENMASK(1, 1)
#define CPU_DDRCTRL_RST_DDR_AXI0_RST_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRCTRL_RST_DDRC_RST(x)              ((x) & GENMASK(0, 0))
#define CPU_DDRCTRL_RST_DDRC_RST_M               GENMASK(0, 0)
#define CPU_DDRCTRL_RST_DDRC_RST_X(x)            ((x) & GENMASK(0, 0))

/*      CPU:DDRCTRL:DDRC_INTR_RAW_STAT */
#define CPU_DDRC_INTR_RAW_STAT    __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 8, 0, 1, 4)

#define CPU_DDRC_INTR_RAW_STAT_ECC_AP_ERR_INTR_RAW_STAT(x)\
	(((x) << 3) & GENMASK(3, 3))
#define CPU_DDRC_INTR_RAW_STAT_ECC_AP_ERR_INTR_RAW_STAT_M GENMASK(3, 3)
#define CPU_DDRC_INTR_RAW_STAT_ECC_AP_ERR_INTR_RAW_STAT_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

#define CPU_DDRC_INTR_RAW_STAT_ECC_UNCORRECTED_ERR_INTR_RAW_STAT(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_DDRC_INTR_RAW_STAT_ECC_UNCORRECTED_ERR_INTR_RAW_STAT_M GENMASK(2, 2)
#define CPU_DDRC_INTR_RAW_STAT_ECC_UNCORRECTED_ERR_INTR_RAW_STAT_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRC_INTR_RAW_STAT_ECC_CORRECTED_ERR_INTR_RAW_STAT(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CPU_DDRC_INTR_RAW_STAT_ECC_CORRECTED_ERR_INTR_RAW_STAT_M GENMASK(1, 1)
#define CPU_DDRC_INTR_RAW_STAT_ECC_CORRECTED_ERR_INTR_RAW_STAT_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRC_INTR_RAW_STAT_SBR_DONE_INTR_RAW_STAT(x) ((x) & GENMASK(0, 0))
#define CPU_DDRC_INTR_RAW_STAT_SBR_DONE_INTR_RAW_STAT_M GENMASK(0, 0)
#define CPU_DDRC_INTR_RAW_STAT_SBR_DONE_INTR_RAW_STAT_X(x) ((x) & GENMASK(0, 0))

/*      CPU:DDRCTRL:DDRC_INTR_MASK */
#define CPU_DDRC_INTR_MASK        __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 12, 0, 1, 4)

#define CPU_DDRC_INTR_MASK_ECC_AP_ERR_INTR_MASK(x) (((x) << 3) & GENMASK(3, 3))
#define CPU_DDRC_INTR_MASK_ECC_AP_ERR_INTR_MASK_M GENMASK(3, 3)
#define CPU_DDRC_INTR_MASK_ECC_AP_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

#define CPU_DDRC_INTR_MASK_ECC_UNCORRECTED_ERR_INTR_MASK(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_DDRC_INTR_MASK_ECC_UNCORRECTED_ERR_INTR_MASK_M GENMASK(2, 2)
#define CPU_DDRC_INTR_MASK_ECC_UNCORRECTED_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRC_INTR_MASK_ECC_CORRECTED_ERR_INTR_MASK(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CPU_DDRC_INTR_MASK_ECC_CORRECTED_ERR_INTR_MASK_M GENMASK(1, 1)
#define CPU_DDRC_INTR_MASK_ECC_CORRECTED_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRC_INTR_MASK_SBR_DONE_INTR_MASK(x) ((x) & GENMASK(0, 0))
#define CPU_DDRC_INTR_MASK_SBR_DONE_INTR_MASK_M  GENMASK(0, 0)
#define CPU_DDRC_INTR_MASK_SBR_DONE_INTR_MASK_X(x) ((x) & GENMASK(0, 0))

/*      CPU:DDRCTRL:DDRC_INTR_MASKED_STAT */
#define CPU_DDRC_INTR_MASKED_STAT __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 16, 0, 1, 4)

#define CPU_DDRC_INTR_MASKED_STAT_ECC_AP_ERR_INTR_STAT(x)\
	(((x) << 3) & GENMASK(3, 3))
#define CPU_DDRC_INTR_MASKED_STAT_ECC_AP_ERR_INTR_STAT_M GENMASK(3, 3)
#define CPU_DDRC_INTR_MASKED_STAT_ECC_AP_ERR_INTR_STAT_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

#define CPU_DDRC_INTR_MASKED_STAT_ECC_UNCORRECTED_ERR_INTR_STAT(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_DDRC_INTR_MASKED_STAT_ECC_UNCORRECTED_ERR_INTR_STAT_M GENMASK(2, 2)
#define CPU_DDRC_INTR_MASKED_STAT_ECC_UNCORRECTED_ERR_INTR_STAT_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRC_INTR_MASKED_STAT_ECC_CORRECTED_ERR_INTR_STAT(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CPU_DDRC_INTR_MASKED_STAT_ECC_CORRECTED_ERR_INTR_STAT_M GENMASK(1, 1)
#define CPU_DDRC_INTR_MASKED_STAT_ECC_CORRECTED_ERR_INTR_STAT_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRC_INTR_MASKED_STAT_SBR_DONE_INTR_STAT(x) ((x) & GENMASK(0, 0))
#define CPU_DDRC_INTR_MASKED_STAT_SBR_DONE_INTR_STAT_M GENMASK(0, 0)
#define CPU_DDRC_INTR_MASKED_STAT_SBR_DONE_INTR_STAT_X(x) ((x) & GENMASK(0, 0))

/*      CPU:PI_REG:PI_CON */
#define CPU_PI_CON                __REG(TARGET_CPU,\
					0, 1, 708, 0, 1, 8, 0, 0, 1, 4)

#define CPU_PI_CON_PMP_ON(x)                     (((x) << 15) & GENMASK(15, 15))
#define CPU_PI_CON_PMP_ON_M                      GENMASK(15, 15)
#define CPU_PI_CON_PMP_ON_X(x)                   (((x) & GENMASK(15, 15)) >> 15)

#define CPU_PI_CON_ADRMUX(x)                     (((x) << 11) & GENMASK(12, 11))
#define CPU_PI_CON_ADRMUX_M                      GENMASK(12, 11)
#define CPU_PI_CON_ADRMUX_X(x)                   (((x) & GENMASK(12, 11)) >> 11)

#define CPU_PI_CON_CSF(x)                        (((x) << 6) & GENMASK(7, 6))
#define CPU_PI_CON_CSF_M                         GENMASK(7, 6)
#define CPU_PI_CON_CSF_X(x)                      (((x) & GENMASK(7, 6)) >> 6)

#define CPU_PI_CON_ALP(x)                        (((x) << 5) & GENMASK(5, 5))
#define CPU_PI_CON_ALP_M                         GENMASK(5, 5)
#define CPU_PI_CON_ALP_X(x)                      (((x) & GENMASK(5, 5)) >> 5)

#define CPU_PI_CON_CS2P(x)                       (((x) << 4) & GENMASK(4, 4))
#define CPU_PI_CON_CS2P_M                        GENMASK(4, 4)
#define CPU_PI_CON_CS2P_X(x)                     (((x) & GENMASK(4, 4)) >> 4)

#define CPU_PI_CON_CS1P(x)                       (((x) << 3) & GENMASK(3, 3))
#define CPU_PI_CON_CS1P_M                        GENMASK(3, 3)
#define CPU_PI_CON_CS1P_X(x)                     (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PI_CON_WRSP(x)                       (((x) << 1) & GENMASK(1, 1))
#define CPU_PI_CON_WRSP_M                        GENMASK(1, 1)
#define CPU_PI_CON_WRSP_X(x)                     (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PI_CON_RDSP(x)                       ((x) & GENMASK(0, 0))
#define CPU_PI_CON_RDSP_M                        GENMASK(0, 0)
#define CPU_PI_CON_RDSP_X(x)                     ((x) & GENMASK(0, 0))

/*      CPU:PI_REG:PI_MODE */
#define CPU_PI_MODE               __REG(TARGET_CPU,\
					0, 1, 708, 0, 1, 8, 4, 0, 1, 4)

#define CPU_PI_MODE_MODE16(x)                    (((x) << 10) & GENMASK(10, 10))
#define CPU_PI_MODE_MODE16_M                     GENMASK(10, 10)
#define CPU_PI_MODE_MODE16_X(x)                  (((x) & GENMASK(10, 10)) >> 10)

#define CPU_PI_MODE_MODE(x)                      (((x) << 8) & GENMASK(9, 8))
#define CPU_PI_MODE_MODE_M                       GENMASK(9, 8)
#define CPU_PI_MODE_MODE_X(x)                    (((x) & GENMASK(9, 8)) >> 8)

#define CPU_PI_MODE_WAITB(x)                     (((x) << 6) & GENMASK(7, 6))
#define CPU_PI_MODE_WAITB_M                      GENMASK(7, 6)
#define CPU_PI_MODE_WAITB_X(x)                   (((x) & GENMASK(7, 6)) >> 6)

#define CPU_PI_MODE_WAITM(x)                     (((x) << 2) & GENMASK(5, 2))
#define CPU_PI_MODE_WAITM_M                      GENMASK(5, 2)
#define CPU_PI_MODE_WAITM_X(x)                   (((x) & GENMASK(5, 2)) >> 2)

#define CPU_PI_MODE_WAITE(x)                     ((x) & GENMASK(1, 0))
#define CPU_PI_MODE_WAITE_M                      GENMASK(1, 0)
#define CPU_PI_MODE_WAITE_X(x)                   ((x) & GENMASK(1, 0))

/*      CPU:SFR_REGS:CLK_GATING */
#define CPU_CLK_GATING            __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 0, 0, 1, 4)

#define CPU_CLK_GATING_UHPHS_CLK_GATING(x)       (((x) << 11) & GENMASK(11, 11))
#define CPU_CLK_GATING_UHPHS_CLK_GATING_M        GENMASK(11, 11)
#define CPU_CLK_GATING_UHPHS_CLK_GATING_X(x)     (((x) & GENMASK(11, 11)) >> 11)

#define CPU_CLK_GATING_UDPHS_CLK_GATING(x)       (((x) << 10) & GENMASK(10, 10))
#define CPU_CLK_GATING_UDPHS_CLK_GATING_M        GENMASK(10, 10)
#define CPU_CLK_GATING_UDPHS_CLK_GATING_X(x)     (((x) & GENMASK(10, 10)) >> 10)

#define CPU_CLK_GATING_MCRAMC_CLK_GATING(x)      (((x) << 9) & GENMASK(9, 9))
#define CPU_CLK_GATING_MCRAMC_CLK_GATING_M       GENMASK(9, 9)
#define CPU_CLK_GATING_MCRAMC_CLK_GATING_X(x)    (((x) & GENMASK(9, 9)) >> 9)

#define CPU_CLK_GATING_HMATRIX_CLK_GATING(x)     (((x) << 8) & GENMASK(8, 8))
#define CPU_CLK_GATING_HMATRIX_CLK_GATING_M      GENMASK(8, 8)
#define CPU_CLK_GATING_HMATRIX_CLK_GATING_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define CPU_CLK_GATING_HBRIDGE_CLK_GATING(x)     ((x) & GENMASK(3, 0))
#define CPU_CLK_GATING_HBRIDGE_CLK_GATING_M      GENMASK(3, 0)
#define CPU_CLK_GATING_HBRIDGE_CLK_GATING_X(x)   ((x) & GENMASK(3, 0))

/*      CPU:SFR_REGS:AHBLITE2AXI */
#define CPU_AHBLITE2AXI           __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 4, 0, 1, 4)

#define CPU_AHBLITE2AXI_AHBLITE2AXI_PFETCH8(x)   ((x) & GENMASK(0, 0))
#define CPU_AHBLITE2AXI_AHBLITE2AXI_PFETCH8_M    GENMASK(0, 0)
#define CPU_AHBLITE2AXI_AHBLITE2AXI_PFETCH8_X(x) ((x) & GENMASK(0, 0))

/*      CPU:SFR_REGS:TZAESB */
#define CPU_TZAESB                __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 8, 0, 1, 4)

#define CPU_TZAESB_TZAESB_LITE_EN(x)             ((x) & GENMASK(0, 0))
#define CPU_TZAESB_TZAESB_LITE_EN_M              GENMASK(0, 0)
#define CPU_TZAESB_TZAESB_LITE_EN_X(x)           ((x) & GENMASK(0, 0))

/*      CPU:SFR_REGS:MCAN */
#define CPU_MCAN                  __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 12, 0, 1, 4)

#define CPU_MCAN_MCAN_AHB_CACHABLE(x)            (((x) << 8) & GENMASK(11, 8))
#define CPU_MCAN_MCAN_AHB_CACHABLE_M             GENMASK(11, 8)
#define CPU_MCAN_MCAN_AHB_CACHABLE_X(x)          (((x) & GENMASK(11, 8)) >> 8)

#define CPU_MCAN_MCAN_AHB_BUFFERABLE(x)          ((x) & GENMASK(3, 0))
#define CPU_MCAN_MCAN_AHB_BUFFERABLE_M           GENMASK(3, 0)
#define CPU_MCAN_MCAN_AHB_BUFFERABLE_X(x)        ((x) & GENMASK(3, 0))

/*      CPU:SFR_REGS:HICM */
#define CPU_HICM                  __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 16, 0, 1, 4)

#define CPU_HICM_HICM_AHB_CACHABLE(x)            (((x) << 8) & GENMASK(8, 8))
#define CPU_HICM_HICM_AHB_CACHABLE_M             GENMASK(8, 8)
#define CPU_HICM_HICM_AHB_CACHABLE_X(x)          (((x) & GENMASK(8, 8)) >> 8)

#define CPU_HICM_HICM_AHB_BUFFERABLE(x)          ((x) & GENMASK(0, 0))
#define CPU_HICM_HICM_AHB_BUFFERABLE_M           GENMASK(0, 0)
#define CPU_HICM_HICM_AHB_BUFFERABLE_X(x)        ((x) & GENMASK(0, 0))

/*      CPU:SFR_REGS:UDPHS */
#define CPU_UDPHS                 __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 20, 0, 1, 4)

#define CPU_UDPHS_UDPHS_AHB_CACHABLE(x)          (((x) << 8) & GENMASK(8, 8))
#define CPU_UDPHS_UDPHS_AHB_CACHABLE_M           GENMASK(8, 8)
#define CPU_UDPHS_UDPHS_AHB_CACHABLE_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define CPU_UDPHS_UDPHS_AHB_BUFFERABLE(x)        ((x) & GENMASK(0, 0))
#define CPU_UDPHS_UDPHS_AHB_BUFFERABLE_M         GENMASK(0, 0)
#define CPU_UDPHS_UDPHS_AHB_BUFFERABLE_X(x)      ((x) & GENMASK(0, 0))

/*      CPU:SFR_REGS:UDDR */
#define CPU_UDDR                  __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 24, 0, 1, 4)

#define CPU_UDDR_AXI_READ_QOS(x)                 (((x) << 8) & GENMASK(11, 8))
#define CPU_UDDR_AXI_READ_QOS_M                  GENMASK(11, 8)
#define CPU_UDDR_AXI_READ_QOS_X(x)               (((x) & GENMASK(11, 8)) >> 8)

#define CPU_UDDR_AXI_WRITE_QOS(x)                ((x) & GENMASK(3, 0))
#define CPU_UDDR_AXI_WRITE_QOS_M                 GENMASK(3, 0)
#define CPU_UDDR_AXI_WRITE_QOS_X(x)              ((x) & GENMASK(3, 0))

/*      CPU:USB2COMMON_REGS:COM_BIAS_BG_TC_TRIM */
#define CPU_COM_BIAS_BG_TC_TRIM   __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 0, 0, 1, 4)

#define CPU_COM_BIAS_BG_TC_TRIM_COM_BIAS_BG_TC_TRIM(x) ((x) & GENMASK(4, 0))
#define CPU_COM_BIAS_BG_TC_TRIM_COM_BIAS_BG_TC_TRIM_M GENMASK(4, 0)
#define CPU_COM_BIAS_BG_TC_TRIM_COM_BIAS_BG_TC_TRIM_X(x) ((x) & GENMASK(4, 0))

/*      CPU:USB2COMMON_REGS:COM_BIAS_BG_MAG_TRIM */
#define CPU_COM_BIAS_BG_MAG_TRIM  __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 4, 0, 1, 4)

#define CPU_COM_BIAS_BG_MAG_TRIM_COM_BIAS_BG_MAG_TRIM(x) ((x) & GENMASK(5, 0))
#define CPU_COM_BIAS_BG_MAG_TRIM_COM_BIAS_BG_MAG_TRIM_M GENMASK(5, 0)
#define CPU_COM_BIAS_BG_MAG_TRIM_COM_BIAS_BG_MAG_TRIM_X(x) ((x) & GENMASK(5, 0))

/*      CPU:USB2COMMON_REGS:COM_RBIAS_MAG_TRIM */
#define CPU_COM_RBIAS_MAG_TRIM    __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 8, 0, 1, 4)

#define CPU_COM_RBIAS_MAG_TRIM_COM_RBIAS_MAG_TRIM(x) ((x) & GENMASK(5, 0))
#define CPU_COM_RBIAS_MAG_TRIM_COM_RBIAS_MAG_TRIM_M GENMASK(5, 0)
#define CPU_COM_RBIAS_MAG_TRIM_COM_RBIAS_MAG_TRIM_X(x) ((x) & GENMASK(5, 0))

/*      CPU:USB2COMMON_REGS:COM_BIAS_AZ_CLK_SEL */
#define CPU_COM_BIAS_AZ_CLK_SEL   __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 12, 0, 1, 4)

#define CPU_COM_BIAS_AZ_CLK_SEL_COM_BIAS_AZ_CLK_SEL(x) ((x) & GENMASK(0, 0))
#define CPU_COM_BIAS_AZ_CLK_SEL_COM_BIAS_AZ_CLK_SEL_M GENMASK(0, 0)
#define CPU_COM_BIAS_AZ_CLK_SEL_COM_BIAS_AZ_CLK_SEL_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:COM_ATEST_SEL */
#define CPU_COM_ATEST_SEL         __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 16, 0, 1, 4)

#define CPU_COM_ATEST_SEL_COM_ATEST_SEL(x)       ((x) & GENMASK(0, 0))
#define CPU_COM_ATEST_SEL_COM_ATEST_SEL_M        GENMASK(0, 0)
#define CPU_COM_ATEST_SEL_COM_ATEST_SEL_X(x)     ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:COM_SUSPENDB */
#define CPU_COM_SUSPENDB          __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 20, 0, 1, 4)

#define CPU_COM_SUSPENDB_COM_SUSPENDB(x)         ((x) & GENMASK(0, 0))
#define CPU_COM_SUSPENDB_COM_SUSPENDB_M          GENMASK(0, 0)
#define CPU_COM_SUSPENDB_COM_SUSPENDB_X(x)       ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:COM_XTAL_SUSPENDB */
#define CPU_COM_XTAL_SUSPENDB     __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 24, 0, 1, 4)

#define CPU_COM_XTAL_SUSPENDB_COM_XTAL_SUSPENDB(x) ((x) & GENMASK(0, 0))
#define CPU_COM_XTAL_SUSPENDB_COM_XTAL_SUSPENDB_M GENMASK(0, 0)
#define CPU_COM_XTAL_SUSPENDB_COM_XTAL_SUSPENDB_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:COM_PLL_LPM_MODE */
#define CPU_COM_PLL_LPM_MODE      __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 28, 0, 1, 4)

#define CPU_COM_PLL_LPM_MODE_COM_PLL_LPM_MODE(x) ((x) & GENMASK(0, 0))
#define CPU_COM_PLL_LPM_MODE_COM_PLL_LPM_MODE_M  GENMASK(0, 0)
#define CPU_COM_PLL_LPM_MODE_COM_PLL_LPM_MODE_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:COM_PLL_EN */
#define CPU_COM_PLL_EN            __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 32, 0, 1, 4)

#define CPU_COM_PLL_EN_COM_PLL_EN(x)             ((x) & GENMASK(0, 0))
#define CPU_COM_PLL_EN_COM_PLL_EN_M              GENMASK(0, 0)
#define CPU_COM_PLL_EN_COM_PLL_EN_X(x)           ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:COM_TESTBUS_IN_LSB */
#define CPU_COM_TESTBUS_IN_LSB    __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 36, 0, 1, 4)

/*      CPU:USB2COMMON_REGS:COM_TESTBUS_IN_MSB */
#define CPU_COM_TESTBUS_IN_MSB    __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 40, 0, 1, 4)

#define CPU_COM_TESTBUS_IN_MSB_COM_TESTBUS_IN_MSB(x) ((x) & GENMASK(7, 0))
#define CPU_COM_TESTBUS_IN_MSB_COM_TESTBUS_IN_MSB_M GENMASK(7, 0)
#define CPU_COM_TESTBUS_IN_MSB_COM_TESTBUS_IN_MSB_X(x) ((x) & GENMASK(7, 0))

/*      CPU:USB2COMMON_REGS:COM_TESTBUS_OUT */
#define CPU_COM_TESTBUS_OUT       __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 44, 0, 1, 4)

#define CPU_COM_TESTBUS_OUT_COM_TESTBUS_OUT(x)   ((x) & GENMASK(15, 0))
#define CPU_COM_TESTBUS_OUT_COM_TESTBUS_OUT_M    GENMASK(15, 0)
#define CPU_COM_TESTBUS_OUT_COM_TESTBUS_OUT_X(x) ((x) & GENMASK(15, 0))

/*      CPU:USB2AFE0_REGS:USB2_HS_DISC_P0 */
#define CPU_USB2_HS_DISC_P0       __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 0, 0, 1, 4)

#define CPU_USB2_HS_DISC_P0_USB2_HS_DISC_P0(x)   ((x) & GENMASK(1, 0))
#define CPU_USB2_HS_DISC_P0_USB2_HS_DISC_P0_M    GENMASK(1, 0)
#define CPU_USB2_HS_DISC_P0_USB2_HS_DISC_P0_X(x) ((x) & GENMASK(1, 0))

/*      CPU:USB2AFE0_REGS:USB2_SQ_TUNE_P0 */
#define CPU_USB2_SQ_TUNE_P0       __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 4, 0, 1, 4)

#define CPU_USB2_SQ_TUNE_P0_USB2_SQ_TUNE_P0(x)   ((x) & GENMASK(2, 0))
#define CPU_USB2_SQ_TUNE_P0_USB2_SQ_TUNE_P0_M    GENMASK(2, 0)
#define CPU_USB2_SQ_TUNE_P0_USB2_SQ_TUNE_P0_X(x) ((x) & GENMASK(2, 0))

/*      CPU:USB2AFE0_REGS:USB2_HS_DRIVE_P0 */
#define CPU_USB2_HS_DRIVE_P0      __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 8, 0, 1, 4)

#define CPU_USB2_HS_DRIVE_P0_USB2_HS_DRIVE_P0(x) ((x) & GENMASK(2, 0))
#define CPU_USB2_HS_DRIVE_P0_USB2_HS_DRIVE_P0_M  GENMASK(2, 0)
#define CPU_USB2_HS_DRIVE_P0_USB2_HS_DRIVE_P0_X(x) ((x) & GENMASK(2, 0))

/*      CPU:USB2AFE0_REGS:USB2_HSOS_SCAN_EN_P0 */
#define CPU_USB2_HSOS_SCAN_EN_P0  __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 12, 0, 1, 4)

#define CPU_USB2_HSOS_SCAN_EN_P0_USB2_HSOS_SCAN_EN_P0(x) ((x) & GENMASK(0, 0))
#define CPU_USB2_HSOS_SCAN_EN_P0_USB2_HSOS_SCAN_EN_P0_M GENMASK(0, 0)
#define CPU_USB2_HSOS_SCAN_EN_P0_USB2_HSOS_SCAN_EN_P0_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB2AFE0_REGS:USB2_HSOS_SCAN_DATA_P0 */
#define CPU_USB2_HSOS_SCAN_DATA_P0 __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 16, 0, 1, 4)

#define CPU_USB2_HSOS_SCAN_DATA_P0_USB2_HSOS_SCAN_DATA_P0(x)\
	((x) & GENMASK(0, 0))
#define CPU_USB2_HSOS_SCAN_DATA_P0_USB2_HSOS_SCAN_DATA_P0_M GENMASK(0, 0)
#define CPU_USB2_HSOS_SCAN_DATA_P0_USB2_HSOS_SCAN_DATA_P0_X(x)\
	((x) & GENMASK(0, 0))

/*      CPU:USB2AFE0_REGS:USB2_HS_OVSMP_P0 */
#define CPU_USB2_HS_OVSMP_P0      __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 20, 0, 1, 4)

#define CPU_USB2_HS_OVSMP_P0_USB2_HS_OVSMP_P0(x) ((x) & GENMASK(15, 0))
#define CPU_USB2_HS_OVSMP_P0_USB2_HS_OVSMP_P0_M  GENMASK(15, 0)
#define CPU_USB2_HS_OVSMP_P0_USB2_HS_OVSMP_P0_X(x) ((x) & GENMASK(15, 0))

/*      CPU:USB2AFE0_REGS:USB2_AFE_TESTBUS_IN_P0 */
#define CPU_USB2_AFE_TESTBUS_IN_P0 __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 24, 0, 1, 4)

#define CPU_USB2_AFE_TESTBUS_IN_P0_USB2_AFE_TESTBUS_IN_P0(x)\
	((x) & GENMASK(7, 0))
#define CPU_USB2_AFE_TESTBUS_IN_P0_USB2_AFE_TESTBUS_IN_P0_M GENMASK(7, 0)
#define CPU_USB2_AFE_TESTBUS_IN_P0_USB2_AFE_TESTBUS_IN_P0_X(x)\
	((x) & GENMASK(7, 0))

/*      CPU:UTMIUP_REGS:PROG_BITS */
#define CPU_PROG_BITS             __REG(TARGET_CPU,\
					0, 1, 820, 0, 1, 4, 0, 0, 1, 4)

#define CPU_PROG_BITS_USB_RST_RPU_DIS(x)         (((x) << 3) & GENMASK(3, 3))
#define CPU_PROG_BITS_USB_RST_RPU_DIS_M          GENMASK(3, 3)
#define CPU_PROG_BITS_USB_RST_RPU_DIS_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PROG_BITS_BUGID_24910_FIX_DIS(x)     (((x) << 2) & GENMASK(2, 2))
#define CPU_PROG_BITS_BUGID_24910_FIX_DIS_M      GENMASK(2, 2)
#define CPU_PROG_BITS_BUGID_24910_FIX_DIS_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PROG_BITS_SWITCH_DISABLE_SORP(x)     (((x) << 1) & GENMASK(1, 1))
#define CPU_PROG_BITS_SWITCH_DISABLE_SORP_M      GENMASK(1, 1)
#define CPU_PROG_BITS_SWITCH_DISABLE_SORP_X(x)   (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PROG_BITS_UTMIEB_NOISE_FLUSH_EN(x)   ((x) & GENMASK(0, 0))
#define CPU_PROG_BITS_UTMIEB_NOISE_FLUSH_EN_M    GENMASK(0, 0)
#define CPU_PROG_BITS_UTMIEB_NOISE_FLUSH_EN_X(x) ((x) & GENMASK(0, 0))

/*      CPU:ULPI_BRIDGE_REGS:ULPI_RST */
#define CPU_ULPI_RST              __REG(TARGET_CPU,\
					0, 1, 824, 0, 1, 4, 0, 0, 1, 4)

#define CPU_ULPI_RST_ULPI_RST(x)                 ((x) & GENMASK(0, 0))
#define CPU_ULPI_RST_ULPI_RST_M                  GENMASK(0, 0)
#define CPU_ULPI_RST_ULPI_RST_X(x)               ((x) & GENMASK(0, 0))

/*      CPU:PCIE_PHY:PHY_CFG */
#define CPU_PHY_CFG               __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 0, 0, 1, 4)

#define CPU_PHY_CFG_LOS_BIAS(x)                  (((x) << 17) & GENMASK(19, 17))
#define CPU_PHY_CFG_LOS_BIAS_M                   GENMASK(19, 17)
#define CPU_PHY_CFG_LOS_BIAS_X(x)                (((x) & GENMASK(19, 17)) >> 17)

#define CPU_PHY_CFG_LOS_LEVEL(x)                 (((x) << 12) & GENMASK(16, 12))
#define CPU_PHY_CFG_LOS_LEVEL_M                  GENMASK(16, 12)
#define CPU_PHY_CFG_LOS_LEVEL_X(x)               (((x) & GENMASK(16, 12)) >> 12)

#define CPU_PHY_CFG_RX_EQ(x)                     (((x) << 9) & GENMASK(11, 9))
#define CPU_PHY_CFG_RX_EQ_M                      GENMASK(11, 9)
#define CPU_PHY_CFG_RX_EQ_X(x)                   (((x) & GENMASK(11, 9)) >> 9)

#define CPU_PHY_CFG_TX_TERM_OFFSET(x)            (((x) << 4) & GENMASK(8, 4))
#define CPU_PHY_CFG_TX_TERM_OFFSET_M             GENMASK(8, 4)
#define CPU_PHY_CFG_TX_TERM_OFFSET_X(x)          (((x) & GENMASK(8, 4)) >> 4)

#define CPU_PHY_CFG_TX_VBOOST_LVL(x)             (((x) << 1) & GENMASK(3, 1))
#define CPU_PHY_CFG_TX_VBOOST_LVL_M              GENMASK(3, 1)
#define CPU_PHY_CFG_TX_VBOOST_LVL_X(x)           (((x) & GENMASK(3, 1)) >> 1)

#define CPU_PHY_CFG_VREG_BYPASS(x)               ((x) & GENMASK(0, 0))
#define CPU_PHY_CFG_VREG_BYPASS_M                GENMASK(0, 0)
#define CPU_PHY_CFG_VREG_BYPASS_X(x)             ((x) & GENMASK(0, 0))

/*      CPU:PCIE_PHY:PHY_TUNE */
#define CPU_PHY_TUNE              __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 4, 0, 1, 4)

#define CPU_PHY_TUNE_RTUNE_REQ(x)                (((x) << 1) & GENMASK(1, 1))
#define CPU_PHY_TUNE_RTUNE_REQ_M                 GENMASK(1, 1)
#define CPU_PHY_TUNE_RTUNE_REQ_X(x)              (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PHY_TUNE_RTUNE_ACK(x)                ((x) & GENMASK(0, 0))
#define CPU_PHY_TUNE_RTUNE_ACK_M                 GENMASK(0, 0)
#define CPU_PHY_TUNE_RTUNE_ACK_X(x)              ((x) & GENMASK(0, 0))

/*      CPU:PCIE_PHY:PCS_CFG */
#define CPU_PCS_CFG               __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 8, 0, 1, 4)

#define CPU_PCS_CFG_DEEMPH_GEN2_3P5DB(x)         (((x) << 26) & GENMASK(31, 26))
#define CPU_PCS_CFG_DEEMPH_GEN2_3P5DB_M          GENMASK(31, 26)
#define CPU_PCS_CFG_DEEMPH_GEN2_3P5DB_X(x)       (((x) & GENMASK(31, 26)) >> 26)

#define CPU_PCS_CFG_DEEMPH_GEN2_6DB(x)           (((x) << 20) & GENMASK(25, 20))
#define CPU_PCS_CFG_DEEMPH_GEN2_6DB_M            GENMASK(25, 20)
#define CPU_PCS_CFG_DEEMPH_GEN2_6DB_X(x)         (((x) & GENMASK(25, 20)) >> 20)

#define CPU_PCS_CFG_DEEMPH_GEN1(x)               (((x) << 14) & GENMASK(19, 14))
#define CPU_PCS_CFG_DEEMPH_GEN1_M                GENMASK(19, 14)
#define CPU_PCS_CFG_DEEMPH_GEN1_X(x)             (((x) & GENMASK(19, 14)) >> 14)

#define CPU_PCS_CFG_SWING_FULL(x)                (((x) << 7) & GENMASK(13, 7))
#define CPU_PCS_CFG_SWING_FULL_M                 GENMASK(13, 7)
#define CPU_PCS_CFG_SWING_FULL_X(x)              (((x) & GENMASK(13, 7)) >> 7)

#define CPU_PCS_CFG_SWING_LOW(x)                 ((x) & GENMASK(6, 0))
#define CPU_PCS_CFG_SWING_LOW_M                  GENMASK(6, 0)
#define CPU_PCS_CFG_SWING_LOW_X(x)               ((x) & GENMASK(6, 0))

/*      CPU:PCIE_PHY:PHY_CR_CTRL */
#define CPU_PHY_CR_CTRL           __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 12, 0, 1, 4)

#define CPU_PHY_CR_CTRL_CAP_ADDR(x)              (((x) << 4) & GENMASK(4, 4))
#define CPU_PHY_CR_CTRL_CAP_ADDR_M               GENMASK(4, 4)
#define CPU_PHY_CR_CTRL_CAP_ADDR_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define CPU_PHY_CR_CTRL_CAP_DATA(x)              (((x) << 3) & GENMASK(3, 3))
#define CPU_PHY_CR_CTRL_CAP_DATA_M               GENMASK(3, 3)
#define CPU_PHY_CR_CTRL_CAP_DATA_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PHY_CR_CTRL_READ(x)                  (((x) << 2) & GENMASK(2, 2))
#define CPU_PHY_CR_CTRL_READ_M                   GENMASK(2, 2)
#define CPU_PHY_CR_CTRL_READ_X(x)                (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PHY_CR_CTRL_WRITE(x)                 (((x) << 1) & GENMASK(1, 1))
#define CPU_PHY_CR_CTRL_WRITE_M                  GENMASK(1, 1)
#define CPU_PHY_CR_CTRL_WRITE_X(x)               (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PHY_CR_CTRL_ACK(x)                   ((x) & GENMASK(0, 0))
#define CPU_PHY_CR_CTRL_ACK_M                    GENMASK(0, 0)
#define CPU_PHY_CR_CTRL_ACK_X(x)                 ((x) & GENMASK(0, 0))

/*      CPU:PCIE_PHY:PHY_CR_DATA */
#define CPU_PHY_CR_DATA           __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 16, 0, 1, 4)

#define CPU_PHY_CR_DATA_DATA_IN(x)               (((x) << 16) & GENMASK(31, 16))
#define CPU_PHY_CR_DATA_DATA_IN_M                GENMASK(31, 16)
#define CPU_PHY_CR_DATA_DATA_IN_X(x)             (((x) & GENMASK(31, 16)) >> 16)

#define CPU_PHY_CR_DATA_DATA_OUT(x)              ((x) & GENMASK(15, 0))
#define CPU_PHY_CR_DATA_DATA_OUT_M               GENMASK(15, 0)
#define CPU_PHY_CR_DATA_DATA_OUT_X(x)            ((x) & GENMASK(15, 0))

/*      DEV:PORT_MODE:CLOCK_CFG */
#define DEV_CLOCK_CFG(t)          __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 0, 0, 1, 4)

#define DEV_CLOCK_CFG_MAC_TX_RST(x)              (((x) << 7) & GENMASK(7, 7))
#define DEV_CLOCK_CFG_MAC_TX_RST_M               GENMASK(7, 7)
#define DEV_CLOCK_CFG_MAC_TX_RST_X(x)            (((x) & GENMASK(7, 7)) >> 7)

#define DEV_CLOCK_CFG_MAC_RX_RST(x)              (((x) << 6) & GENMASK(6, 6))
#define DEV_CLOCK_CFG_MAC_RX_RST_M               GENMASK(6, 6)
#define DEV_CLOCK_CFG_MAC_RX_RST_X(x)            (((x) & GENMASK(6, 6)) >> 6)

#define DEV_CLOCK_CFG_PCS_TX_RST(x)              (((x) << 5) & GENMASK(5, 5))
#define DEV_CLOCK_CFG_PCS_TX_RST_M               GENMASK(5, 5)
#define DEV_CLOCK_CFG_PCS_TX_RST_X(x)            (((x) & GENMASK(5, 5)) >> 5)

#define DEV_CLOCK_CFG_PCS_RX_RST(x)              (((x) << 4) & GENMASK(4, 4))
#define DEV_CLOCK_CFG_PCS_RX_RST_M               GENMASK(4, 4)
#define DEV_CLOCK_CFG_PCS_RX_RST_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define DEV_CLOCK_CFG_PORT_RST(x)                (((x) << 3) & GENMASK(3, 3))
#define DEV_CLOCK_CFG_PORT_RST_M                 GENMASK(3, 3)
#define DEV_CLOCK_CFG_PORT_RST_X(x)              (((x) & GENMASK(3, 3)) >> 3)

#define DEV_CLOCK_CFG_PHY_RST(x)                 (((x) << 2) & GENMASK(2, 2))
#define DEV_CLOCK_CFG_PHY_RST_M                  GENMASK(2, 2)
#define DEV_CLOCK_CFG_PHY_RST_X(x)               (((x) & GENMASK(2, 2)) >> 2)

#define DEV_CLOCK_CFG_LINK_SPEED(x)              ((x) & GENMASK(1, 0))
#define DEV_CLOCK_CFG_LINK_SPEED_M               GENMASK(1, 0)
#define DEV_CLOCK_CFG_LINK_SPEED_X(x)            ((x) & GENMASK(1, 0))

/*      DEV:PORT_MODE:PORT_MISC */
#define DEV_PORT_MISC(t)          __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 4, 0, 1, 4)

#define DEV_PORT_MISC_FWD_ERROR_ENA(x)           (((x) << 8) & GENMASK(8, 8))
#define DEV_PORT_MISC_FWD_ERROR_ENA_M            GENMASK(8, 8)
#define DEV_PORT_MISC_FWD_ERROR_ENA_X(x)         (((x) & GENMASK(8, 8)) >> 8)

#define DEV_PORT_MISC_FWD_PAUSE_ENA(x)           (((x) << 7) & GENMASK(7, 7))
#define DEV_PORT_MISC_FWD_PAUSE_ENA_M            GENMASK(7, 7)
#define DEV_PORT_MISC_FWD_PAUSE_ENA_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define DEV_PORT_MISC_FWD_CTRL_ENA(x)            (((x) << 6) & GENMASK(6, 6))
#define DEV_PORT_MISC_FWD_CTRL_ENA_M             GENMASK(6, 6)
#define DEV_PORT_MISC_FWD_CTRL_ENA_X(x)          (((x) & GENMASK(6, 6)) >> 6)

#define DEV_PORT_MISC_DEV_LOOP_ENA(x)            (((x) << 3) & GENMASK(5, 3))
#define DEV_PORT_MISC_DEV_LOOP_ENA_M             GENMASK(5, 3)
#define DEV_PORT_MISC_DEV_LOOP_ENA_X(x)          (((x) & GENMASK(5, 3)) >> 3)

#define DEV_PORT_MISC_HDX_FAST_DIS(x)            (((x) << 2) & GENMASK(2, 2))
#define DEV_PORT_MISC_HDX_FAST_DIS_M             GENMASK(2, 2)
#define DEV_PORT_MISC_HDX_FAST_DIS_X(x)          (((x) & GENMASK(2, 2)) >> 2)

#define DEV_PORT_MISC_RTAG48_ENA(x)              (((x) << 1) & GENMASK(1, 1))
#define DEV_PORT_MISC_RTAG48_ENA_M               GENMASK(1, 1)
#define DEV_PORT_MISC_RTAG48_ENA_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define DEV_PORT_MISC_RX_RAW_ENA(x)              ((x) & GENMASK(0, 0))
#define DEV_PORT_MISC_RX_RAW_ENA_M               GENMASK(0, 0)
#define DEV_PORT_MISC_RX_RAW_ENA_X(x)            ((x) & GENMASK(0, 0))

/*      DEV:PORT_MODE:EVENTS */
#define DEV_EVENTS(t)             __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 8, 0, 1, 4)

#define DEV_EVENTS_EV(x)                         ((x) & GENMASK(6, 0))
#define DEV_EVENTS_EV_M                          GENMASK(6, 0)
#define DEV_EVENTS_EV_X(x)                       ((x) & GENMASK(6, 0))

/*      DEV:PORT_MODE:EEE_CFG */
#define DEV_EEE_CFG(t)            __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 12, 0, 1, 4)

#define DEV_EEE_CFG_EEE_ENA(x)                   (((x) << 22) & GENMASK(22, 22))
#define DEV_EEE_CFG_EEE_ENA_M                    GENMASK(22, 22)
#define DEV_EEE_CFG_EEE_ENA_X(x)                 (((x) & GENMASK(22, 22)) >> 22)

#define DEV_EEE_CFG_EEE_TIMER_AGE(x)             (((x) << 15) & GENMASK(21, 15))
#define DEV_EEE_CFG_EEE_TIMER_AGE_M              GENMASK(21, 15)
#define DEV_EEE_CFG_EEE_TIMER_AGE_X(x)           (((x) & GENMASK(21, 15)) >> 15)

#define DEV_EEE_CFG_EEE_TIMER_WAKEUP(x)          (((x) << 8) & GENMASK(14, 8))
#define DEV_EEE_CFG_EEE_TIMER_WAKEUP_M           GENMASK(14, 8)
#define DEV_EEE_CFG_EEE_TIMER_WAKEUP_X(x)        (((x) & GENMASK(14, 8)) >> 8)

#define DEV_EEE_CFG_EEE_TIMER_HOLDOFF(x)         (((x) << 1) & GENMASK(7, 1))
#define DEV_EEE_CFG_EEE_TIMER_HOLDOFF_M          GENMASK(7, 1)
#define DEV_EEE_CFG_EEE_TIMER_HOLDOFF_X(x)       (((x) & GENMASK(7, 1)) >> 1)

#define DEV_EEE_CFG_PORT_LPI(x)                  ((x) & GENMASK(0, 0))
#define DEV_EEE_CFG_PORT_LPI_M                   GENMASK(0, 0)
#define DEV_EEE_CFG_PORT_LPI_X(x)                ((x) & GENMASK(0, 0))

/*      DEV:PORT_MODE:RX_PATH_DELAY */
#define DEV_RX_PATH_DELAY(t)      __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 16, 0, 1, 4)

#define DEV_RX_PATH_DELAY_RX_PATH_DELAY(x)       ((x) & GENMASK(23, 0))
#define DEV_RX_PATH_DELAY_RX_PATH_DELAY_M        GENMASK(23, 0)
#define DEV_RX_PATH_DELAY_RX_PATH_DELAY_X(x)     ((x) & GENMASK(23, 0))

/*      DEV:PORT_MODE:TX_PATH_DELAY */
#define DEV_TX_PATH_DELAY(t)      __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 20, 0, 1, 4)

#define DEV_TX_PATH_DELAY_TX_PATH_DELAY(x)       ((x) & GENMASK(23, 0))
#define DEV_TX_PATH_DELAY_TX_PATH_DELAY_M        GENMASK(23, 0)
#define DEV_TX_PATH_DELAY_TX_PATH_DELAY_X(x)     ((x) & GENMASK(23, 0))

/*      DEV:PORT_MODE:PTP_MISC_CFG */
#define DEV_PTP_MISC_CFG(t)       __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 24, 0, 1, 4)

#define DEV_PTP_MISC_CFG_EXT_SOF_EN(x)           (((x) << 16) & GENMASK(17, 16))
#define DEV_PTP_MISC_CFG_EXT_SOF_EN_M            GENMASK(17, 16)
#define DEV_PTP_MISC_CFG_EXT_SOF_EN_X(x)         (((x) & GENMASK(17, 16)) >> 16)

#define DEV_PTP_MISC_CFG_PHY_PREDICT_STAT(x)     ((x) & GENMASK(15, 0))
#define DEV_PTP_MISC_CFG_PHY_PREDICT_STAT_M      GENMASK(15, 0)
#define DEV_PTP_MISC_CFG_PHY_PREDICT_STAT_X(x)   ((x) & GENMASK(15, 0))

/*      DEV:MAC_CFG_STATUS:MAC_ENA_CFG */
#define DEV_MAC_ENA_CFG(t)        __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 0, 0, 1, 4)

#define DEV_MAC_ENA_CFG_RX_ENA(x)                (((x) << 4) & GENMASK(4, 4))
#define DEV_MAC_ENA_CFG_RX_ENA_M                 GENMASK(4, 4)
#define DEV_MAC_ENA_CFG_RX_ENA_X(x)              (((x) & GENMASK(4, 4)) >> 4)

#define DEV_MAC_ENA_CFG_TX_ENA(x)                ((x) & GENMASK(0, 0))
#define DEV_MAC_ENA_CFG_TX_ENA_M                 GENMASK(0, 0)
#define DEV_MAC_ENA_CFG_TX_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      DEV:MAC_CFG_STATUS:MAC_MODE_CFG */
#define DEV_MAC_MODE_CFG(t)       __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 4, 0, 1, 4)

#define DEV_MAC_MODE_CFG_FC_WORD_SYNC_ENA(x)     (((x) << 8) & GENMASK(8, 8))
#define DEV_MAC_MODE_CFG_FC_WORD_SYNC_ENA_M      GENMASK(8, 8)
#define DEV_MAC_MODE_CFG_FC_WORD_SYNC_ENA_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define DEV_MAC_MODE_CFG_GIGA_MODE_ENA(x)        (((x) << 4) & GENMASK(4, 4))
#define DEV_MAC_MODE_CFG_GIGA_MODE_ENA_M         GENMASK(4, 4)
#define DEV_MAC_MODE_CFG_GIGA_MODE_ENA_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define DEV_MAC_MODE_CFG_FDX_ENA(x)              ((x) & GENMASK(0, 0))
#define DEV_MAC_MODE_CFG_FDX_ENA_M               GENMASK(0, 0)
#define DEV_MAC_MODE_CFG_FDX_ENA_X(x)            ((x) & GENMASK(0, 0))

/*      DEV:MAC_CFG_STATUS:MAC_MAXLEN_CFG */
#define DEV_MAC_MAXLEN_CFG(t)     __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 8, 0, 1, 4)

#define DEV_MAC_MAXLEN_CFG_MAX_LEN(x)            ((x) & GENMASK(15, 0))
#define DEV_MAC_MAXLEN_CFG_MAX_LEN_M             GENMASK(15, 0)
#define DEV_MAC_MAXLEN_CFG_MAX_LEN_X(x)          ((x) & GENMASK(15, 0))

/*      DEV:MAC_CFG_STATUS:MAC_TAGS_CFG */
#define DEV_MAC_TAGS_CFG(t)       __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 12, 0, 1, 4)

#define DEV_MAC_TAGS_CFG_TAG_ID(x)               (((x) << 16) & GENMASK(31, 16))
#define DEV_MAC_TAGS_CFG_TAG_ID_M                GENMASK(31, 16)
#define DEV_MAC_TAGS_CFG_TAG_ID_X(x)             (((x) & GENMASK(31, 16)) >> 16)

#define DEV_MAC_TAGS_CFG_VLAN_LEN_AWR_ENA(x)     (((x) << 2) & GENMASK(2, 2))
#define DEV_MAC_TAGS_CFG_VLAN_LEN_AWR_ENA_M      GENMASK(2, 2)
#define DEV_MAC_TAGS_CFG_VLAN_LEN_AWR_ENA_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define DEV_MAC_TAGS_CFG_PB_ENA(x)               (((x) << 1) & GENMASK(1, 1))
#define DEV_MAC_TAGS_CFG_PB_ENA_M                GENMASK(1, 1)
#define DEV_MAC_TAGS_CFG_PB_ENA_X(x)             (((x) & GENMASK(1, 1)) >> 1)

#define DEV_MAC_TAGS_CFG_VLAN_AWR_ENA(x)         ((x) & GENMASK(0, 0))
#define DEV_MAC_TAGS_CFG_VLAN_AWR_ENA_M          GENMASK(0, 0)
#define DEV_MAC_TAGS_CFG_VLAN_AWR_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      DEV:MAC_CFG_STATUS:MAC_ADV_CHK_CFG */
#define DEV_MAC_ADV_CHK_CFG(t)    __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 16, 0, 1, 4)

#define DEV_MAC_ADV_CHK_CFG_LEN_DROP_ENA(x)      ((x) & GENMASK(0, 0))
#define DEV_MAC_ADV_CHK_CFG_LEN_DROP_ENA_M       GENMASK(0, 0)
#define DEV_MAC_ADV_CHK_CFG_LEN_DROP_ENA_X(x)    ((x) & GENMASK(0, 0))

/*      DEV:MAC_CFG_STATUS:MAC_IFG_CFG */
#define DEV_MAC_IFG_CFG(t)        __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 20, 0, 1, 4)

#define DEV_MAC_IFG_CFG_OLD_IPG_CHECK(x)         (((x) << 17) & GENMASK(17, 17))
#define DEV_MAC_IFG_CFG_OLD_IPG_CHECK_M          GENMASK(17, 17)
#define DEV_MAC_IFG_CFG_OLD_IPG_CHECK_X(x)       (((x) & GENMASK(17, 17)) >> 17)

#define DEV_MAC_IFG_CFG_REDUCED_TX_IFG(x)        (((x) << 16) & GENMASK(16, 16))
#define DEV_MAC_IFG_CFG_REDUCED_TX_IFG_M         GENMASK(16, 16)
#define DEV_MAC_IFG_CFG_REDUCED_TX_IFG_X(x)      (((x) & GENMASK(16, 16)) >> 16)

#define DEV_MAC_IFG_CFG_TX_IFG(x)                (((x) << 8) & GENMASK(12, 8))
#define DEV_MAC_IFG_CFG_TX_IFG_M                 GENMASK(12, 8)
#define DEV_MAC_IFG_CFG_TX_IFG_X(x)              (((x) & GENMASK(12, 8)) >> 8)

#define DEV_MAC_IFG_CFG_RX_IFG2(x)               (((x) << 4) & GENMASK(7, 4))
#define DEV_MAC_IFG_CFG_RX_IFG2_M                GENMASK(7, 4)
#define DEV_MAC_IFG_CFG_RX_IFG2_X(x)             (((x) & GENMASK(7, 4)) >> 4)

#define DEV_MAC_IFG_CFG_RX_IFG1(x)               ((x) & GENMASK(3, 0))
#define DEV_MAC_IFG_CFG_RX_IFG1_M                GENMASK(3, 0)
#define DEV_MAC_IFG_CFG_RX_IFG1_X(x)             ((x) & GENMASK(3, 0))

/*      DEV:MAC_CFG_STATUS:MAC_HDX_CFG */
#define DEV_MAC_HDX_CFG(t)        __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 24, 0, 1, 4)

#define DEV_MAC_HDX_CFG_BYPASS_COL_SYNC(x)       (((x) << 26) & GENMASK(26, 26))
#define DEV_MAC_HDX_CFG_BYPASS_COL_SYNC_M        GENMASK(26, 26)
#define DEV_MAC_HDX_CFG_BYPASS_COL_SYNC_X(x)     (((x) & GENMASK(26, 26)) >> 26)

#define DEV_MAC_HDX_CFG_OB_ENA(x)                (((x) << 25) & GENMASK(25, 25))
#define DEV_MAC_HDX_CFG_OB_ENA_M                 GENMASK(25, 25)
#define DEV_MAC_HDX_CFG_OB_ENA_X(x)              (((x) & GENMASK(25, 25)) >> 25)

#define DEV_MAC_HDX_CFG_WEXC_DIS(x)              (((x) << 24) & GENMASK(24, 24))
#define DEV_MAC_HDX_CFG_WEXC_DIS_M               GENMASK(24, 24)
#define DEV_MAC_HDX_CFG_WEXC_DIS_X(x)            (((x) & GENMASK(24, 24)) >> 24)

#define DEV_MAC_HDX_CFG_SEED(x)                  (((x) << 16) & GENMASK(23, 16))
#define DEV_MAC_HDX_CFG_SEED_M                   GENMASK(23, 16)
#define DEV_MAC_HDX_CFG_SEED_X(x)                (((x) & GENMASK(23, 16)) >> 16)

#define DEV_MAC_HDX_CFG_SEED_LOAD(x)             (((x) << 12) & GENMASK(12, 12))
#define DEV_MAC_HDX_CFG_SEED_LOAD_M              GENMASK(12, 12)
#define DEV_MAC_HDX_CFG_SEED_LOAD_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define DEV_MAC_HDX_CFG_RETRY_EXC_COL_ENA(x)     (((x) << 8) & GENMASK(8, 8))
#define DEV_MAC_HDX_CFG_RETRY_EXC_COL_ENA_M      GENMASK(8, 8)
#define DEV_MAC_HDX_CFG_RETRY_EXC_COL_ENA_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define DEV_MAC_HDX_CFG_LATE_COL_POS(x)          ((x) & GENMASK(6, 0))
#define DEV_MAC_HDX_CFG_LATE_COL_POS_M           GENMASK(6, 0)
#define DEV_MAC_HDX_CFG_LATE_COL_POS_X(x)        ((x) & GENMASK(6, 0))

/*      DEV:MAC_CFG_STATUS:MAC_DBG_CFG */
#define DEV_MAC_DBG_CFG(t)        __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 28, 0, 1, 4)

#define DEV_MAC_DBG_CFG_TBI_MODE(x)              (((x) << 4) & GENMASK(4, 4))
#define DEV_MAC_DBG_CFG_TBI_MODE_M               GENMASK(4, 4)
#define DEV_MAC_DBG_CFG_TBI_MODE_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define DEV_MAC_DBG_CFG_IFG_CRS_EXT_CHK_ENA(x)   ((x) & GENMASK(0, 0))
#define DEV_MAC_DBG_CFG_IFG_CRS_EXT_CHK_ENA_M    GENMASK(0, 0)
#define DEV_MAC_DBG_CFG_IFG_CRS_EXT_CHK_ENA_X(x) ((x) & GENMASK(0, 0))

/*      DEV:MAC_CFG_STATUS:FC_MAC_LOW_CFG */
#define DEV_FC_MAC_LOW_CFG(t)     __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 32, 0, 1, 4)

#define DEV_FC_MAC_LOW_CFG_MAC_LOW(x)            ((x) & GENMASK(23, 0))
#define DEV_FC_MAC_LOW_CFG_MAC_LOW_M             GENMASK(23, 0)
#define DEV_FC_MAC_LOW_CFG_MAC_LOW_X(x)          ((x) & GENMASK(23, 0))

/*      DEV:MAC_CFG_STATUS:FC_MAC_HIGH_CFG */
#define DEV_FC_MAC_HIGH_CFG(t)    __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 36, 0, 1, 4)

#define DEV_FC_MAC_HIGH_CFG_MAC_HIGH(x)          ((x) & GENMASK(23, 0))
#define DEV_FC_MAC_HIGH_CFG_MAC_HIGH_M           GENMASK(23, 0)
#define DEV_FC_MAC_HIGH_CFG_MAC_HIGH_X(x)        ((x) & GENMASK(23, 0))

/*      DEV:MAC_CFG_STATUS:MAC_STICKY */
#define DEV_MAC_STICKY(t)         __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 40, 0, 1, 4)

#define DEV_MAC_STICKY_RX_IPG_SHRINK(x)          (((x) << 9) & GENMASK(9, 9))
#define DEV_MAC_STICKY_RX_IPG_SHRINK_M           GENMASK(9, 9)
#define DEV_MAC_STICKY_RX_IPG_SHRINK_X(x)        (((x) & GENMASK(9, 9)) >> 9)

#define DEV_MAC_STICKY_RX_PREAM_SHRINK(x)        (((x) << 8) & GENMASK(8, 8))
#define DEV_MAC_STICKY_RX_PREAM_SHRINK_M         GENMASK(8, 8)
#define DEV_MAC_STICKY_RX_PREAM_SHRINK_X(x)      (((x) & GENMASK(8, 8)) >> 8)

#define DEV_MAC_STICKY_RX_CARRIER_EXT(x)         (((x) << 7) & GENMASK(7, 7))
#define DEV_MAC_STICKY_RX_CARRIER_EXT_M          GENMASK(7, 7)
#define DEV_MAC_STICKY_RX_CARRIER_EXT_X(x)       (((x) & GENMASK(7, 7)) >> 7)

#define DEV_MAC_STICKY_RX_CARRIER_EXT_ERR(x)     (((x) << 6) & GENMASK(6, 6))
#define DEV_MAC_STICKY_RX_CARRIER_EXT_ERR_M      GENMASK(6, 6)
#define DEV_MAC_STICKY_RX_CARRIER_EXT_ERR_X(x)   (((x) & GENMASK(6, 6)) >> 6)

#define DEV_MAC_STICKY_RX_JUNK(x)                (((x) << 5) & GENMASK(5, 5))
#define DEV_MAC_STICKY_RX_JUNK_M                 GENMASK(5, 5)
#define DEV_MAC_STICKY_RX_JUNK_X(x)              (((x) & GENMASK(5, 5)) >> 5)

#define DEV_MAC_STICKY_TX_RETRANSMIT(x)          (((x) << 4) & GENMASK(4, 4))
#define DEV_MAC_STICKY_TX_RETRANSMIT_M           GENMASK(4, 4)
#define DEV_MAC_STICKY_TX_RETRANSMIT_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define DEV_MAC_STICKY_TX_JAM(x)                 (((x) << 3) & GENMASK(3, 3))
#define DEV_MAC_STICKY_TX_JAM_M                  GENMASK(3, 3)
#define DEV_MAC_STICKY_TX_JAM_X(x)               (((x) & GENMASK(3, 3)) >> 3)

#define DEV_MAC_STICKY_TX_FIFO_OFLW(x)           (((x) << 2) & GENMASK(2, 2))
#define DEV_MAC_STICKY_TX_FIFO_OFLW_M            GENMASK(2, 2)
#define DEV_MAC_STICKY_TX_FIFO_OFLW_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define DEV_MAC_STICKY_TX_FRM_LEN_OVR(x)         (((x) << 1) & GENMASK(1, 1))
#define DEV_MAC_STICKY_TX_FRM_LEN_OVR_M          GENMASK(1, 1)
#define DEV_MAC_STICKY_TX_FRM_LEN_OVR_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define DEV_MAC_STICKY_TX_ABORT(x)               ((x) & GENMASK(0, 0))
#define DEV_MAC_STICKY_TX_ABORT_M                GENMASK(0, 0)
#define DEV_MAC_STICKY_TX_ABORT_X(x)             ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_CFG */
#define DEV_PCS1G_CFG(t)          __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 0, 0, 1, 4)

#define DEV_PCS1G_CFG_LINK_STATUS_TYPE(x)        (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_CFG_LINK_STATUS_TYPE_M         GENMASK(4, 4)
#define DEV_PCS1G_CFG_LINK_STATUS_TYPE_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_CFG_AN_LINK_CTRL_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define DEV_PCS1G_CFG_AN_LINK_CTRL_ENA_M         GENMASK(1, 1)
#define DEV_PCS1G_CFG_AN_LINK_CTRL_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define DEV_PCS1G_CFG_PCS_ENA(x)                 ((x) & GENMASK(0, 0))
#define DEV_PCS1G_CFG_PCS_ENA_M                  GENMASK(0, 0)
#define DEV_PCS1G_CFG_PCS_ENA_X(x)               ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_MODE_CFG */
#define DEV_PCS1G_MODE_CFG(t)     __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 4, 0, 1, 4)

#define DEV_PCS1G_MODE_CFG_UNIDIR_MODE_ENA(x)    (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_MODE_CFG_UNIDIR_MODE_ENA_M     GENMASK(4, 4)
#define DEV_PCS1G_MODE_CFG_UNIDIR_MODE_ENA_X(x)  (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_MODE_CFG_SAVE_PREAMBLE_ENA(x)  (((x) << 1) & GENMASK(1, 1))
#define DEV_PCS1G_MODE_CFG_SAVE_PREAMBLE_ENA_M   GENMASK(1, 1)
#define DEV_PCS1G_MODE_CFG_SAVE_PREAMBLE_ENA_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define DEV_PCS1G_MODE_CFG_SGMII_MODE_ENA(x)     ((x) & GENMASK(0, 0))
#define DEV_PCS1G_MODE_CFG_SGMII_MODE_ENA_M      GENMASK(0, 0)
#define DEV_PCS1G_MODE_CFG_SGMII_MODE_ENA_X(x)   ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_SD_CFG */
#define DEV_PCS1G_SD_CFG(t)       __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 8, 0, 1, 4)

#define DEV_PCS1G_SD_CFG_SD_SEL(x)               (((x) << 8) & GENMASK(8, 8))
#define DEV_PCS1G_SD_CFG_SD_SEL_M                GENMASK(8, 8)
#define DEV_PCS1G_SD_CFG_SD_SEL_X(x)             (((x) & GENMASK(8, 8)) >> 8)

#define DEV_PCS1G_SD_CFG_SD_POL(x)               (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_SD_CFG_SD_POL_M                GENMASK(4, 4)
#define DEV_PCS1G_SD_CFG_SD_POL_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_SD_CFG_SD_ENA(x)               ((x) & GENMASK(0, 0))
#define DEV_PCS1G_SD_CFG_SD_ENA_M                GENMASK(0, 0)
#define DEV_PCS1G_SD_CFG_SD_ENA_X(x)             ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_ANEG_CFG */
#define DEV_PCS1G_ANEG_CFG(t)     __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 12, 0, 1, 4)

#define DEV_PCS1G_ANEG_CFG_ADV_ABILITY(x)        (((x) << 16) & GENMASK(31, 16))
#define DEV_PCS1G_ANEG_CFG_ADV_ABILITY_M         GENMASK(31, 16)
#define DEV_PCS1G_ANEG_CFG_ADV_ABILITY_X(x)      (((x) & GENMASK(31, 16)) >> 16)

#define DEV_PCS1G_ANEG_CFG_SW_RESOLVE_ENA(x)     (((x) << 8) & GENMASK(8, 8))
#define DEV_PCS1G_ANEG_CFG_SW_RESOLVE_ENA_M      GENMASK(8, 8)
#define DEV_PCS1G_ANEG_CFG_SW_RESOLVE_ENA_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define DEV_PCS1G_ANEG_CFG_RESTART_ONE_SHOT(x)   (((x) << 1) & GENMASK(1, 1))
#define DEV_PCS1G_ANEG_CFG_RESTART_ONE_SHOT_M    GENMASK(1, 1)
#define DEV_PCS1G_ANEG_CFG_RESTART_ONE_SHOT_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define DEV_PCS1G_ANEG_CFG_ENA(x)                ((x) & GENMASK(0, 0))
#define DEV_PCS1G_ANEG_CFG_ENA_M                 GENMASK(0, 0)
#define DEV_PCS1G_ANEG_CFG_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_ANEG_NP_CFG */
#define DEV_PCS1G_ANEG_NP_CFG(t)  __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 16, 0, 1, 4)

#define DEV_PCS1G_ANEG_NP_CFG_NP_TX(x)           (((x) << 16) & GENMASK(31, 16))
#define DEV_PCS1G_ANEG_NP_CFG_NP_TX_M            GENMASK(31, 16)
#define DEV_PCS1G_ANEG_NP_CFG_NP_TX_X(x)         (((x) & GENMASK(31, 16)) >> 16)

#define DEV_PCS1G_ANEG_NP_CFG_NP_LOADED_ONE_SHOT(x) ((x) & GENMASK(0, 0))
#define DEV_PCS1G_ANEG_NP_CFG_NP_LOADED_ONE_SHOT_M GENMASK(0, 0)
#define DEV_PCS1G_ANEG_NP_CFG_NP_LOADED_ONE_SHOT_X(x) ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_LB_CFG */
#define DEV_PCS1G_LB_CFG(t)       __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 20, 0, 1, 4)

#define DEV_PCS1G_LB_CFG_RA_ENA(x)               (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_LB_CFG_RA_ENA_M                GENMASK(4, 4)
#define DEV_PCS1G_LB_CFG_RA_ENA_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_LB_CFG_GMII_PHY_LB_ENA(x)      (((x) << 1) & GENMASK(1, 1))
#define DEV_PCS1G_LB_CFG_GMII_PHY_LB_ENA_M       GENMASK(1, 1)
#define DEV_PCS1G_LB_CFG_GMII_PHY_LB_ENA_X(x)    (((x) & GENMASK(1, 1)) >> 1)

#define DEV_PCS1G_LB_CFG_TBI_HOST_LB_ENA(x)      ((x) & GENMASK(0, 0))
#define DEV_PCS1G_LB_CFG_TBI_HOST_LB_ENA_M       GENMASK(0, 0)
#define DEV_PCS1G_LB_CFG_TBI_HOST_LB_ENA_X(x)    ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_DBG_CFG */
#define DEV_PCS1G_DBG_CFG(t)      __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 24, 0, 1, 4)

#define DEV_PCS1G_DBG_CFG_UDLT(x)                ((x) & GENMASK(0, 0))
#define DEV_PCS1G_DBG_CFG_UDLT_M                 GENMASK(0, 0)
#define DEV_PCS1G_DBG_CFG_UDLT_X(x)              ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_CDET_CFG */
#define DEV_PCS1G_CDET_CFG(t)     __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 28, 0, 1, 4)

#define DEV_PCS1G_CDET_CFG_CDET_ENA(x)           ((x) & GENMASK(0, 0))
#define DEV_PCS1G_CDET_CFG_CDET_ENA_M            GENMASK(0, 0)
#define DEV_PCS1G_CDET_CFG_CDET_ENA_X(x)         ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_ANEG_STATUS */
#define DEV_PCS1G_ANEG_STATUS(t)  __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 32, 0, 1, 4)

#define DEV_PCS1G_ANEG_STATUS_LP_ADV(x)          (((x) << 16) & GENMASK(31, 16))
#define DEV_PCS1G_ANEG_STATUS_LP_ADV_M           GENMASK(31, 16)
#define DEV_PCS1G_ANEG_STATUS_LP_ADV_X(x)        (((x) & GENMASK(31, 16)) >> 16)

#define DEV_PCS1G_ANEG_STATUS_PR(x)              (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_ANEG_STATUS_PR_M               GENMASK(4, 4)
#define DEV_PCS1G_ANEG_STATUS_PR_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_ANEG_STATUS_PAGE_RX_STICKY(x)  (((x) << 3) & GENMASK(3, 3))
#define DEV_PCS1G_ANEG_STATUS_PAGE_RX_STICKY_M   GENMASK(3, 3)
#define DEV_PCS1G_ANEG_STATUS_PAGE_RX_STICKY_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define DEV_PCS1G_ANEG_STATUS_ANEG_COMPLETE(x)   ((x) & GENMASK(0, 0))
#define DEV_PCS1G_ANEG_STATUS_ANEG_COMPLETE_M    GENMASK(0, 0)
#define DEV_PCS1G_ANEG_STATUS_ANEG_COMPLETE_X(x) ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_ANEG_NP_STATUS */
#define DEV_PCS1G_ANEG_NP_STATUS(t) __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 36, 0, 1, 4)

#define DEV_PCS1G_ANEG_NP_STATUS_LP_NP_RX(x)     (((x) << 16) & GENMASK(31, 16))
#define DEV_PCS1G_ANEG_NP_STATUS_LP_NP_RX_M      GENMASK(31, 16)
#define DEV_PCS1G_ANEG_NP_STATUS_LP_NP_RX_X(x)   (((x) & GENMASK(31, 16)) >> 16)

/*      DEV:PCS1G_CFG_STATUS:PCS1G_LINK_STATUS */
#define DEV_PCS1G_LINK_STATUS(t)  __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 40, 0, 1, 4)

#define DEV_PCS1G_LINK_STATUS_DELAY_VAR(x)       (((x) << 12) & GENMASK(15, 12))
#define DEV_PCS1G_LINK_STATUS_DELAY_VAR_M        GENMASK(15, 12)
#define DEV_PCS1G_LINK_STATUS_DELAY_VAR_X(x)     (((x) & GENMASK(15, 12)) >> 12)

#define DEV_PCS1G_LINK_STATUS_SIGNAL_DETECT(x)   (((x) << 8) & GENMASK(8, 8))
#define DEV_PCS1G_LINK_STATUS_SIGNAL_DETECT_M    GENMASK(8, 8)
#define DEV_PCS1G_LINK_STATUS_SIGNAL_DETECT_X(x) (((x) & GENMASK(8, 8)) >> 8)

#define DEV_PCS1G_LINK_STATUS_LINK_STATUS(x)     (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_LINK_STATUS_LINK_STATUS_M      GENMASK(4, 4)
#define DEV_PCS1G_LINK_STATUS_LINK_STATUS_X(x)   (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_LINK_STATUS_SYNC_STATUS(x)     ((x) & GENMASK(0, 0))
#define DEV_PCS1G_LINK_STATUS_SYNC_STATUS_M      GENMASK(0, 0)
#define DEV_PCS1G_LINK_STATUS_SYNC_STATUS_X(x)   ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_LINK_DOWN_CNT */
#define DEV_PCS1G_LINK_DOWN_CNT(t) __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 44, 0, 1, 4)

#define DEV_PCS1G_LINK_DOWN_CNT_LINK_DOWN_CNT(x) ((x) & GENMASK(7, 0))
#define DEV_PCS1G_LINK_DOWN_CNT_LINK_DOWN_CNT_M  GENMASK(7, 0)
#define DEV_PCS1G_LINK_DOWN_CNT_LINK_DOWN_CNT_X(x) ((x) & GENMASK(7, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_STICKY */
#define DEV_PCS1G_STICKY(t)       __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 48, 0, 1, 4)

#define DEV_PCS1G_STICKY_LINK_DOWN_STICKY(x)     (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_STICKY_LINK_DOWN_STICKY_M      GENMASK(4, 4)
#define DEV_PCS1G_STICKY_LINK_DOWN_STICKY_X(x)   (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_STICKY_OUT_OF_SYNC_STICKY(x)   ((x) & GENMASK(0, 0))
#define DEV_PCS1G_STICKY_OUT_OF_SYNC_STICKY_M    GENMASK(0, 0)
#define DEV_PCS1G_STICKY_OUT_OF_SYNC_STICKY_X(x) ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_DEBUG_STATUS */
#define DEV_PCS1G_DEBUG_STATUS(t) __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 52, 0, 1, 4)

#define DEV_PCS1G_DEBUG_STATUS_XMIT_MODE(x)      (((x) << 12) & GENMASK(13, 12))
#define DEV_PCS1G_DEBUG_STATUS_XMIT_MODE_M       GENMASK(13, 12)
#define DEV_PCS1G_DEBUG_STATUS_XMIT_MODE_X(x)    (((x) & GENMASK(13, 12)) >> 12)

/*      DEV:PCS1G_CFG_STATUS:PCS1G_LPI_CFG */
#define DEV_PCS1G_LPI_CFG(t)      __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 56, 0, 1, 4)

#define DEV_PCS1G_LPI_CFG_QSGMII_MS_SEL(x)       (((x) << 20) & GENMASK(20, 20))
#define DEV_PCS1G_LPI_CFG_QSGMII_MS_SEL_M        GENMASK(20, 20)
#define DEV_PCS1G_LPI_CFG_QSGMII_MS_SEL_X(x)     (((x) & GENMASK(20, 20)) >> 20)

#define DEV_PCS1G_LPI_CFG_RX_LPI_OUT_DIS(x)      (((x) << 17) & GENMASK(17, 17))
#define DEV_PCS1G_LPI_CFG_RX_LPI_OUT_DIS_M       GENMASK(17, 17)
#define DEV_PCS1G_LPI_CFG_RX_LPI_OUT_DIS_X(x)    (((x) & GENMASK(17, 17)) >> 17)

#define DEV_PCS1G_LPI_CFG_LPI_TESTMODE(x)        (((x) << 16) & GENMASK(16, 16))
#define DEV_PCS1G_LPI_CFG_LPI_TESTMODE_M         GENMASK(16, 16)
#define DEV_PCS1G_LPI_CFG_LPI_TESTMODE_X(x)      (((x) & GENMASK(16, 16)) >> 16)

#define DEV_PCS1G_LPI_CFG_LPI_RX_WTIM(x)         (((x) << 4) & GENMASK(5, 4))
#define DEV_PCS1G_LPI_CFG_LPI_RX_WTIM_M          GENMASK(5, 4)
#define DEV_PCS1G_LPI_CFG_LPI_RX_WTIM_X(x)       (((x) & GENMASK(5, 4)) >> 4)

#define DEV_PCS1G_LPI_CFG_TX_ASSERT_LPIDLE(x)    ((x) & GENMASK(0, 0))
#define DEV_PCS1G_LPI_CFG_TX_ASSERT_LPIDLE_M     GENMASK(0, 0)
#define DEV_PCS1G_LPI_CFG_TX_ASSERT_LPIDLE_X(x)  ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_LPI_W_ERR_CNT */
#define DEV_PCS1G_LPI_W_ERR_CNT(t) __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 60, 0, 1, 4)

#define DEV_PCS1G_LPI_W_ERR_CNT_WAKE_ERROR_CNT(x) ((x) & GENMASK(15, 0))
#define DEV_PCS1G_LPI_W_ERR_CNT_WAKE_ERROR_CNT_M GENMASK(15, 0)
#define DEV_PCS1G_LPI_W_ERR_CNT_WAKE_ERROR_CNT_X(x) ((x) & GENMASK(15, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_LPI_STATUS */
#define DEV_PCS1G_LPI_STATUS(t)   __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 64, 0, 1, 4)

#define DEV_PCS1G_LPI_STATUS_RX_LPI_FAIL(x)      (((x) << 16) & GENMASK(16, 16))
#define DEV_PCS1G_LPI_STATUS_RX_LPI_FAIL_M       GENMASK(16, 16)
#define DEV_PCS1G_LPI_STATUS_RX_LPI_FAIL_X(x)    (((x) & GENMASK(16, 16)) >> 16)

#define DEV_PCS1G_LPI_STATUS_RX_LPI_STICKY(x)    (((x) << 12) & GENMASK(12, 12))
#define DEV_PCS1G_LPI_STATUS_RX_LPI_STICKY_M     GENMASK(12, 12)
#define DEV_PCS1G_LPI_STATUS_RX_LPI_STICKY_X(x)  (((x) & GENMASK(12, 12)) >> 12)

#define DEV_PCS1G_LPI_STATUS_RX_QUIET(x)         (((x) << 9) & GENMASK(9, 9))
#define DEV_PCS1G_LPI_STATUS_RX_QUIET_M          GENMASK(9, 9)
#define DEV_PCS1G_LPI_STATUS_RX_QUIET_X(x)       (((x) & GENMASK(9, 9)) >> 9)

#define DEV_PCS1G_LPI_STATUS_RX_LPI_MODE(x)      (((x) << 8) & GENMASK(8, 8))
#define DEV_PCS1G_LPI_STATUS_RX_LPI_MODE_M       GENMASK(8, 8)
#define DEV_PCS1G_LPI_STATUS_RX_LPI_MODE_X(x)    (((x) & GENMASK(8, 8)) >> 8)

#define DEV_PCS1G_LPI_STATUS_TX_LPI_STICKY(x)    (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_LPI_STATUS_TX_LPI_STICKY_M     GENMASK(4, 4)
#define DEV_PCS1G_LPI_STATUS_TX_LPI_STICKY_X(x)  (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_LPI_STATUS_TX_QUIET(x)         (((x) << 1) & GENMASK(1, 1))
#define DEV_PCS1G_LPI_STATUS_TX_QUIET_M          GENMASK(1, 1)
#define DEV_PCS1G_LPI_STATUS_TX_QUIET_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define DEV_PCS1G_LPI_STATUS_TX_LPI_MODE(x)      ((x) & GENMASK(0, 0))
#define DEV_PCS1G_LPI_STATUS_TX_LPI_MODE_M       GENMASK(0, 0)
#define DEV_PCS1G_LPI_STATUS_TX_LPI_MODE_X(x)    ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_TSTPAT_CFG_STATUS:PCS1G_TSTPAT_MODE_CFG */
#define DEV_PCS1G_TSTPAT_MODE_CFG(t) __REG(TARGET_DEV,\
					t, 8, 140, 0, 1, 8, 0, 0, 1, 4)

#define DEV_PCS1G_TSTPAT_MODE_CFG_JTP_SEL(x)     ((x) & GENMASK(2, 0))
#define DEV_PCS1G_TSTPAT_MODE_CFG_JTP_SEL_M      GENMASK(2, 0)
#define DEV_PCS1G_TSTPAT_MODE_CFG_JTP_SEL_X(x)   ((x) & GENMASK(2, 0))

/*      DEV:PCS1G_TSTPAT_CFG_STATUS:PCS1G_TSTPAT_STATUS */
#define DEV_PCS1G_TSTPAT_STATUS(t) __REG(TARGET_DEV,\
					t, 8, 140, 0, 1, 8, 4, 0, 1, 4)

#define DEV_PCS1G_TSTPAT_STATUS_JTP_ERR_CNT(x)   (((x) << 8) & GENMASK(15, 8))
#define DEV_PCS1G_TSTPAT_STATUS_JTP_ERR_CNT_M    GENMASK(15, 8)
#define DEV_PCS1G_TSTPAT_STATUS_JTP_ERR_CNT_X(x) (((x) & GENMASK(15, 8)) >> 8)

#define DEV_PCS1G_TSTPAT_STATUS_JTP_ERR(x)       (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_TSTPAT_STATUS_JTP_ERR_M        GENMASK(4, 4)
#define DEV_PCS1G_TSTPAT_STATUS_JTP_ERR_X(x)     (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_TSTPAT_STATUS_JTP_LOCK(x)      ((x) & GENMASK(0, 0))
#define DEV_PCS1G_TSTPAT_STATUS_JTP_LOCK_M       GENMASK(0, 0)
#define DEV_PCS1G_TSTPAT_STATUS_JTP_LOCK_X(x)    ((x) & GENMASK(0, 0))

/*      DEV:MM_CONFIG:ENABLE_CONFIG */
#define DEV_ENABLE_CONFIG(t)      __REG(TARGET_DEV,\
					t, 8, 156, 0, 1, 8, 0, 0, 1, 4)

#define DEV_ENABLE_CONFIG_KEEP_S_AFTER_D(x)      (((x) << 8) & GENMASK(8, 8))
#define DEV_ENABLE_CONFIG_KEEP_S_AFTER_D_M       GENMASK(8, 8)
#define DEV_ENABLE_CONFIG_KEEP_S_AFTER_D_X(x)    (((x) & GENMASK(8, 8)) >> 8)

#define DEV_ENABLE_CONFIG_MM_TX_ENA(x)           (((x) << 4) & GENMASK(4, 4))
#define DEV_ENABLE_CONFIG_MM_TX_ENA_M            GENMASK(4, 4)
#define DEV_ENABLE_CONFIG_MM_TX_ENA_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define DEV_ENABLE_CONFIG_MM_RX_ENA(x)           ((x) & GENMASK(0, 0))
#define DEV_ENABLE_CONFIG_MM_RX_ENA_M            GENMASK(0, 0)
#define DEV_ENABLE_CONFIG_MM_RX_ENA_X(x)         ((x) & GENMASK(0, 0))

/*      DEV:MM_CONFIG:VERIF_CONFIG */
#define DEV_VERIF_CONFIG(t)       __REG(TARGET_DEV,\
					t, 8, 156, 0, 1, 8, 4, 0, 1, 4)

#define DEV_VERIF_CONFIG_VERIF_TIMER_UNITS(x)    (((x) << 12) & GENMASK(13, 12))
#define DEV_VERIF_CONFIG_VERIF_TIMER_UNITS_M     GENMASK(13, 12)
#define DEV_VERIF_CONFIG_VERIF_TIMER_UNITS_X(x)  (((x) & GENMASK(13, 12)) >> 12)

#define DEV_VERIF_CONFIG_PRM_VERIFY_TIME(x)      (((x) << 4) & GENMASK(11, 4))
#define DEV_VERIF_CONFIG_PRM_VERIFY_TIME_M       GENMASK(11, 4)
#define DEV_VERIF_CONFIG_PRM_VERIFY_TIME_X(x)    (((x) & GENMASK(11, 4)) >> 4)

#define DEV_VERIF_CONFIG_PRM_VERIFY_DIS(x)       ((x) & GENMASK(0, 0))
#define DEV_VERIF_CONFIG_PRM_VERIFY_DIS_M        GENMASK(0, 0)
#define DEV_VERIF_CONFIG_PRM_VERIFY_DIS_X(x)     ((x) & GENMASK(0, 0))

/*      DEV:MM_STATISTICS:MM_STATUS */
#define DEV_MM_STATUS(t)          __REG(TARGET_DEV,\
					t, 8, 164, 0, 1, 4, 0, 0, 1, 4)

#define DEV_MM_STATUS_MM_TX_PRMPT_STATUS(x)      (((x) << 28) & GENMASK(28, 28))
#define DEV_MM_STATUS_MM_TX_PRMPT_STATUS_M       GENMASK(28, 28)
#define DEV_MM_STATUS_MM_TX_PRMPT_STATUS_X(x)    (((x) & GENMASK(28, 28)) >> 28)

#define DEV_MM_STATUS_MM_TX_FRAME_STATUS(x)      (((x) << 24) & GENMASK(24, 24))
#define DEV_MM_STATUS_MM_TX_FRAME_STATUS_M       GENMASK(24, 24)
#define DEV_MM_STATUS_MM_TX_FRAME_STATUS_X(x)    (((x) & GENMASK(24, 24)) >> 24)

#define DEV_MM_STATUS_MM_RX_FRAME_STATUS(x)      (((x) << 20) & GENMASK(20, 20))
#define DEV_MM_STATUS_MM_RX_FRAME_STATUS_M       GENMASK(20, 20)
#define DEV_MM_STATUS_MM_RX_FRAME_STATUS_X(x)    (((x) & GENMASK(20, 20)) >> 20)

#define DEV_MM_STATUS_UNEXP_TX_PFRM_STICKY(x)    (((x) << 16) & GENMASK(16, 16))
#define DEV_MM_STATUS_UNEXP_TX_PFRM_STICKY_M     GENMASK(16, 16)
#define DEV_MM_STATUS_UNEXP_TX_PFRM_STICKY_X(x)  (((x) & GENMASK(16, 16)) >> 16)

#define DEV_MM_STATUS_UNEXP_RX_PFRM_STICKY(x)    (((x) << 12) & GENMASK(12, 12))
#define DEV_MM_STATUS_UNEXP_RX_PFRM_STICKY_M     GENMASK(12, 12)
#define DEV_MM_STATUS_UNEXP_RX_PFRM_STICKY_X(x)  (((x) & GENMASK(12, 12)) >> 12)

#define DEV_MM_STATUS_PRMPT_VERIFY_STATE(x)      (((x) << 8) & GENMASK(10, 8))
#define DEV_MM_STATUS_PRMPT_VERIFY_STATE_M       GENMASK(10, 8)
#define DEV_MM_STATUS_PRMPT_VERIFY_STATE_X(x)    (((x) & GENMASK(10, 8)) >> 8)

#define DEV_MM_STATUS_PRMPT_ACTIVE_STICKY(x)     (((x) << 4) & GENMASK(4, 4))
#define DEV_MM_STATUS_PRMPT_ACTIVE_STICKY_M      GENMASK(4, 4)
#define DEV_MM_STATUS_PRMPT_ACTIVE_STICKY_X(x)   (((x) & GENMASK(4, 4)) >> 4)

#define DEV_MM_STATUS_PRMPT_ACTIVE_STATUS(x)     ((x) & GENMASK(0, 0))
#define DEV_MM_STATUS_PRMPT_ACTIVE_STATUS_M      GENMASK(0, 0)
#define DEV_MM_STATUS_PRMPT_ACTIVE_STATUS_X(x)   ((x) & GENMASK(0, 0))

/*      DEV:PHASE_DETECTOR_CTRL:PHAD_CTRL */
#define DEV_PHAD_CTRL(t, g)       __REG(TARGET_DEV,\
					t, 8, 168, g, 2, 12, 0, 0, 1, 4)

#define DEV_PHAD_CTRL_PHAD_LOCK(x)               (((x) << 17) & GENMASK(17, 17))
#define DEV_PHAD_CTRL_PHAD_LOCK_M                GENMASK(17, 17)
#define DEV_PHAD_CTRL_PHAD_LOCK_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define DEV_PHAD_CTRL_DIV4_ACT(x)                (((x) << 16) & GENMASK(16, 16))
#define DEV_PHAD_CTRL_DIV4_ACT_M                 GENMASK(16, 16)
#define DEV_PHAD_CTRL_DIV4_ACT_X(x)              (((x) & GENMASK(16, 16)) >> 16)

#define DEV_PHAD_CTRL_PHAD_ENA(x)                (((x) << 15) & GENMASK(15, 15))
#define DEV_PHAD_CTRL_PHAD_ENA_M                 GENMASK(15, 15)
#define DEV_PHAD_CTRL_PHAD_ENA_X(x)              (((x) & GENMASK(15, 15)) >> 15)

#define DEV_PHAD_CTRL_PHAD_FAILED(x)             (((x) << 14) & GENMASK(14, 14))
#define DEV_PHAD_CTRL_PHAD_FAILED_M              GENMASK(14, 14)
#define DEV_PHAD_CTRL_PHAD_FAILED_X(x)           (((x) & GENMASK(14, 14)) >> 14)

#define DEV_PHAD_CTRL_PHAD_ADJ(x)                (((x) << 12) & GENMASK(13, 12))
#define DEV_PHAD_CTRL_PHAD_ADJ_M                 GENMASK(13, 12)
#define DEV_PHAD_CTRL_PHAD_ADJ_X(x)              (((x) & GENMASK(13, 12)) >> 12)

#define DEV_PHAD_CTRL_ERR_MAX_ENA(x)             (((x) << 11) & GENMASK(11, 11))
#define DEV_PHAD_CTRL_ERR_MAX_ENA_M              GENMASK(11, 11)
#define DEV_PHAD_CTRL_ERR_MAX_ENA_X(x)           (((x) & GENMASK(11, 11)) >> 11)

#define DEV_PHAD_CTRL_LOCK_ACC(x)                (((x) << 8) & GENMASK(10, 8))
#define DEV_PHAD_CTRL_LOCK_ACC_M                 GENMASK(10, 8)
#define DEV_PHAD_CTRL_LOCK_ACC_X(x)              (((x) & GENMASK(10, 8)) >> 8)

#define DEV_PHAD_CTRL_REALIGN_OFS(x)             (((x) << 5) & GENMASK(7, 5))
#define DEV_PHAD_CTRL_REALIGN_OFS_M              GENMASK(7, 5)
#define DEV_PHAD_CTRL_REALIGN_OFS_X(x)           (((x) & GENMASK(7, 5)) >> 5)

#define DEV_PHAD_CTRL_TWEAKS(x)                  (((x) << 2) & GENMASK(4, 2))
#define DEV_PHAD_CTRL_TWEAKS_M                   GENMASK(4, 2)
#define DEV_PHAD_CTRL_TWEAKS_X(x)                (((x) & GENMASK(4, 2)) >> 2)

#define DEV_PHAD_CTRL_DIV_CFG(x)                 ((x) & GENMASK(1, 0))
#define DEV_PHAD_CTRL_DIV_CFG_M                  GENMASK(1, 0)
#define DEV_PHAD_CTRL_DIV_CFG_X(x)               ((x) & GENMASK(1, 0))

/*      DEV:PHASE_DETECTOR_CTRL:PHAD_CYC_STAT */
#define DEV_PHAD_CYC_STAT(t, g)   __REG(TARGET_DEV,\
					t, 8, 168, g, 2, 12, 4, 0, 1, 4)

/*      DEV:PHASE_DETECTOR_CTRL:PHAD_ERR_STAT */
#define DEV_PHAD_ERR_STAT(t, g)   __REG(TARGET_DEV,\
					t, 8, 168, g, 2, 12, 8, 0, 1, 4)

#define DEV_PHAD_ERR_STAT_PHAD_ERR_STAT(x)       ((x) & GENMASK(18, 0))
#define DEV_PHAD_ERR_STAT_PHAD_ERR_STAT_M        GENMASK(18, 0)
#define DEV_PHAD_ERR_STAT_PHAD_ERR_STAT_X(x)     ((x) & GENMASK(18, 0))

/*      GCB:CHIP_REGS:CHIP_ID */
#define GCB_CHIP_ID               __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 0, 0, 1, 4)

#define GCB_CHIP_ID_REV_ID(x)                    (((x) << 28) & GENMASK(31, 28))
#define GCB_CHIP_ID_REV_ID_M                     GENMASK(31, 28)
#define GCB_CHIP_ID_REV_ID_X(x)                  (((x) & GENMASK(31, 28)) >> 28)

#define GCB_CHIP_ID_PART_ID(x)                   (((x) << 12) & GENMASK(27, 12))
#define GCB_CHIP_ID_PART_ID_M                    GENMASK(27, 12)
#define GCB_CHIP_ID_PART_ID_X(x)                 (((x) & GENMASK(27, 12)) >> 12)

#define GCB_CHIP_ID_MFG_ID(x)                    (((x) << 1) & GENMASK(11, 1))
#define GCB_CHIP_ID_MFG_ID_M                     GENMASK(11, 1)
#define GCB_CHIP_ID_MFG_ID_X(x)                  (((x) & GENMASK(11, 1)) >> 1)

#define GCB_CHIP_ID_ONE(x)                       ((x) & GENMASK(0, 0))
#define GCB_CHIP_ID_ONE_M                        GENMASK(0, 0)
#define GCB_CHIP_ID_ONE_X(x)                     ((x) & GENMASK(0, 0))

/*      GCB:CHIP_REGS:REVID_RAW */
#define GCB_REVID_RAW             __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 4, 0, 1, 4)

#define GCB_REVID_RAW_REV_ID_RAW(x)              ((x) & GENMASK(14, 0))
#define GCB_REVID_RAW_REV_ID_RAW_M               GENMASK(14, 0)
#define GCB_REVID_RAW_REV_ID_RAW_X(x)            ((x) & GENMASK(14, 0))

/*      GCB:CHIP_REGS:GPR */
#define GCB_GPR                   __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 8, 0, 1, 4)

/*      GCB:CHIP_REGS:SOFT_RST */
#define GCB_SOFT_RST              __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 12, 0, 1, 4)

#define GCB_SOFT_RST_SOFT_SWC_RST(x)             (((x) << 1) & GENMASK(1, 1))
#define GCB_SOFT_RST_SOFT_SWC_RST_M              GENMASK(1, 1)
#define GCB_SOFT_RST_SOFT_SWC_RST_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define GCB_SOFT_RST_SOFT_CHIP_RST(x)            ((x) & GENMASK(0, 0))
#define GCB_SOFT_RST_SOFT_CHIP_RST_M             GENMASK(0, 0)
#define GCB_SOFT_RST_SOFT_CHIP_RST_X(x)          ((x) & GENMASK(0, 0))

/*      GCB:CHIP_REGS:HW_STAT */
#define GCB_HW_STAT               __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 16, 0, 1, 4)

#define GCB_HW_STAT_PLL_CONF(x)                  (((x) << 3) & GENMASK(4, 3))
#define GCB_HW_STAT_PLL_CONF_M                   GENMASK(4, 3)
#define GCB_HW_STAT_PLL_CONF_X(x)                (((x) & GENMASK(4, 3)) >> 3)

#define GCB_HW_STAT_SJTAG_MUX(x)                 ((x) & GENMASK(2, 0))
#define GCB_HW_STAT_SJTAG_MUX_M                  GENMASK(2, 0)
#define GCB_HW_STAT_SJTAG_MUX_X(x)               ((x) & GENMASK(2, 0))

/*      GCB:CHIP_REGS:HW_SGPIO_TO_SD_MAP_CFG */
#define GCB_HW_SGPIO_TO_SD_MAP_CFG(r) __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 20, r, 8, 4)

#define GCB_HW_SGPIO_TO_SD_MAP_CFG_SGPIO_TO_SD_SEL(x) ((x) & GENMASK(6, 0))
#define GCB_HW_SGPIO_TO_SD_MAP_CFG_SGPIO_TO_SD_SEL_M GENMASK(6, 0)
#define GCB_HW_SGPIO_TO_SD_MAP_CFG_SGPIO_TO_SD_SEL_X(x) ((x) & GENMASK(6, 0))

/*      GCB:CHIP_REGS:HW_SGPIO_TO_SERDES_SD_MAP_CFG */
#define GCB_HW_SGPIO_TO_SERDES_SD_MAP_CFG(r) __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 52, r, 3, 4)

#define GCB_HW_SGPIO_TO_SERDES_SD_MAP_CFG_SGPIO_TO_SERDES_SD_SEL(x)\
	((x) & GENMASK(6, 0))
#define GCB_HW_SGPIO_TO_SERDES_SD_MAP_CFG_SGPIO_TO_SERDES_SD_SEL_M GENMASK(6, 0)
#define GCB_HW_SGPIO_TO_SERDES_SD_MAP_CFG_SGPIO_TO_SERDES_SD_SEL_X(x)\
	((x) & GENMASK(6, 0))

/*      GCB:CHIP_REGS:BUILDID */
#define GCB_BUILDID               __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 64, 0, 1, 4)

/*      GCB:SI_REGS:IF_CTRL */
#define GCB_IF_CTRL               __REG(TARGET_GCB,\
					0, 1, 68, 0, 1, 8, 0, 0, 1, 4)

#define GCB_IF_CTRL_IF_CTRL(x)                   ((x) & GENMASK(3, 0))
#define GCB_IF_CTRL_IF_CTRL_M                    GENMASK(3, 0)
#define GCB_IF_CTRL_IF_CTRL_X(x)                 ((x) & GENMASK(3, 0))

/*      GCB:SI_REGS:IF_CFGSTAT */
#define GCB_IF_CFGSTAT            __REG(TARGET_GCB,\
					0, 1, 68, 0, 1, 8, 4, 0, 1, 4)

#define GCB_IF_CFGSTAT_IF_STAT(x)                (((x) << 16) & GENMASK(16, 16))
#define GCB_IF_CFGSTAT_IF_STAT_M                 GENMASK(16, 16)
#define GCB_IF_CFGSTAT_IF_STAT_X(x)              (((x) & GENMASK(16, 16)) >> 16)

#define GCB_IF_CFGSTAT_IF_CFG(x)                 ((x) & GENMASK(3, 0))
#define GCB_IF_CFGSTAT_IF_CFG_M                  GENMASK(3, 0)
#define GCB_IF_CFGSTAT_IF_CFG_X(x)               ((x) & GENMASK(3, 0))

/*      GCB:SW_REGS:SW_INTR */
#define GCB_SW_INTR               __REG(TARGET_GCB,\
					0, 1, 76, 0, 1, 4, 0, 0, 1, 4)

#define GCB_SW_INTR_SW1_INTR(x)                  (((x) << 1) & GENMASK(1, 1))
#define GCB_SW_INTR_SW1_INTR_M                   GENMASK(1, 1)
#define GCB_SW_INTR_SW1_INTR_X(x)                (((x) & GENMASK(1, 1)) >> 1)

#define GCB_SW_INTR_SW0_INTR(x)                  ((x) & GENMASK(0, 0))
#define GCB_SW_INTR_SW0_INTR_M                   GENMASK(0, 0)
#define GCB_SW_INTR_SW0_INTR_X(x)                ((x) & GENMASK(0, 0))

/*      GCB:VCORE_ACCESS:VA_CTRL */
#define GCB_VA_CTRL               __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 0, 0, 1, 4)

#define GCB_VA_CTRL_VA_SIZE(x)                   (((x) << 4) & GENMASK(5, 4))
#define GCB_VA_CTRL_VA_SIZE_M                    GENMASK(5, 4)
#define GCB_VA_CTRL_VA_SIZE_X(x)                 (((x) & GENMASK(5, 4)) >> 4)

#define GCB_VA_CTRL_VA_ERR(x)                    (((x) << 2) & GENMASK(3, 2))
#define GCB_VA_CTRL_VA_ERR_M                     GENMASK(3, 2)
#define GCB_VA_CTRL_VA_ERR_X(x)                  (((x) & GENMASK(3, 2)) >> 2)

#define GCB_VA_CTRL_VA_BUSY_RD(x)                (((x) << 1) & GENMASK(1, 1))
#define GCB_VA_CTRL_VA_BUSY_RD_M                 GENMASK(1, 1)
#define GCB_VA_CTRL_VA_BUSY_RD_X(x)              (((x) & GENMASK(1, 1)) >> 1)

#define GCB_VA_CTRL_VA_BUSY(x)                   ((x) & GENMASK(0, 0))
#define GCB_VA_CTRL_VA_BUSY_M                    GENMASK(0, 0)
#define GCB_VA_CTRL_VA_BUSY_X(x)                 ((x) & GENMASK(0, 0))

/*      GCB:VCORE_ACCESS:VA_ADDR */
#define GCB_VA_ADDR               __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 4, 0, 1, 4)

/*      GCB:VCORE_ACCESS:VA_DATA */
#define GCB_VA_DATA               __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 8, 0, 1, 4)

/*      GCB:VCORE_ACCESS:VA_DATA_INCR */
#define GCB_VA_DATA_INCR          __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 12, 0, 1, 4)

/*      GCB:VCORE_ACCESS:VA_DATA_INERT */
#define GCB_VA_DATA_INERT         __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 16, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_SET */
#define GCB_GPIO_OUT_SET          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 0, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_SET1 */
#define GCB_GPIO_OUT_SET1         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 4, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_SET2 */
#define GCB_GPIO_OUT_SET2         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 8, 0, 1, 4)

#define GCB_GPIO_OUT_SET2_G_OUT_SET2(x)          ((x) & GENMASK(13, 0))
#define GCB_GPIO_OUT_SET2_G_OUT_SET2_M           GENMASK(13, 0)
#define GCB_GPIO_OUT_SET2_G_OUT_SET2_X(x)        ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_OUT_CLR */
#define GCB_GPIO_OUT_CLR          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 12, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_CLR1 */
#define GCB_GPIO_OUT_CLR1         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 16, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_CLR2 */
#define GCB_GPIO_OUT_CLR2         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 20, 0, 1, 4)

#define GCB_GPIO_OUT_CLR2_G_OUT_CLR2(x)          ((x) & GENMASK(13, 0))
#define GCB_GPIO_OUT_CLR2_G_OUT_CLR2_M           GENMASK(13, 0)
#define GCB_GPIO_OUT_CLR2_G_OUT_CLR2_X(x)        ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_OUT */
#define GCB_GPIO_OUT              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 24, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT1 */
#define GCB_GPIO_OUT1             __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 28, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT2 */
#define GCB_GPIO_OUT2             __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 32, 0, 1, 4)

#define GCB_GPIO_OUT2_G_OUT2(x)                  ((x) & GENMASK(13, 0))
#define GCB_GPIO_OUT2_G_OUT2_M                   GENMASK(13, 0)
#define GCB_GPIO_OUT2_G_OUT2_X(x)                ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_IN */
#define GCB_GPIO_IN               __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 36, 0, 1, 4)

/*      GCB:GPIO:GPIO_IN1 */
#define GCB_GPIO_IN1              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 40, 0, 1, 4)

/*      GCB:GPIO:GPIO_IN2 */
#define GCB_GPIO_IN2              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 44, 0, 1, 4)

#define GCB_GPIO_IN2_G_IN2(x)                    ((x) & GENMASK(13, 0))
#define GCB_GPIO_IN2_G_IN2_M                     GENMASK(13, 0)
#define GCB_GPIO_IN2_G_IN2_X(x)                  ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_OE */
#define GCB_GPIO_OE               __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 48, 0, 1, 4)

/*      GCB:GPIO:GPIO_OE1 */
#define GCB_GPIO_OE1              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 52, 0, 1, 4)

/*      GCB:GPIO:GPIO_OE2 */
#define GCB_GPIO_OE2              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 56, 0, 1, 4)

#define GCB_GPIO_OE2_G_OE2(x)                    ((x) & GENMASK(13, 0))
#define GCB_GPIO_OE2_G_OE2_M                     GENMASK(13, 0)
#define GCB_GPIO_OE2_G_OE2_X(x)                  ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_INTR */
#define GCB_GPIO_INTR             __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 60, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR1 */
#define GCB_GPIO_INTR1            __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 64, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR2 */
#define GCB_GPIO_INTR2            __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 68, 0, 1, 4)

#define GCB_GPIO_INTR2_G_INTR2(x)                ((x) & GENMASK(13, 0))
#define GCB_GPIO_INTR2_G_INTR2_M                 GENMASK(13, 0)
#define GCB_GPIO_INTR2_G_INTR2_X(x)              ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_INTR_ENA */
#define GCB_GPIO_INTR_ENA         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 72, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR_ENA1 */
#define GCB_GPIO_INTR_ENA1        __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 76, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR_ENA2 */
#define GCB_GPIO_INTR_ENA2        __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 80, 0, 1, 4)

#define GCB_GPIO_INTR_ENA2_G_INTR_ENA2(x)        ((x) & GENMASK(13, 0))
#define GCB_GPIO_INTR_ENA2_G_INTR_ENA2_M         GENMASK(13, 0)
#define GCB_GPIO_INTR_ENA2_G_INTR_ENA2_X(x)      ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_INTR_IDENT */
#define GCB_GPIO_INTR_IDENT       __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 84, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR_IDENT1 */
#define GCB_GPIO_INTR_IDENT1      __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 88, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR_IDENT2 */
#define GCB_GPIO_INTR_IDENT2      __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 92, 0, 1, 4)

#define GCB_GPIO_INTR_IDENT2_G_INTR_IDENT2(x)    ((x) & GENMASK(13, 0))
#define GCB_GPIO_INTR_IDENT2_G_INTR_IDENT2_M     GENMASK(13, 0)
#define GCB_GPIO_INTR_IDENT2_G_INTR_IDENT2_X(x)  ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_ALT */
#define GCB_GPIO_ALT(r)           __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 96, r, 3, 4)

/*      GCB:GPIO:GPIO_ALT1 */
#define GCB_GPIO_ALT1(r)          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 108, r, 3, 4)

/*      GCB:GPIO:GPIO_ALT2 */
#define GCB_GPIO_ALT2(r)          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 120, r, 3, 4)

#define GCB_GPIO_ALT2_G_ALT2(x)                  ((x) & GENMASK(13, 0))
#define GCB_GPIO_ALT2_G_ALT2_M                   GENMASK(13, 0)
#define GCB_GPIO_ALT2_G_ALT2_X(x)                ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_SD_DEV_MAP */
#define GCB_GPIO_SD_DEV_MAP(r)    __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 132, r, 6, 4)

#define GCB_GPIO_SD_DEV_MAP_G_SD_DEV_MAP(x)      ((x) & GENMASK(2, 0))
#define GCB_GPIO_SD_DEV_MAP_G_SD_DEV_MAP_M       GENMASK(2, 0)
#define GCB_GPIO_SD_DEV_MAP_G_SD_DEV_MAP_X(x)    ((x) & GENMASK(2, 0))

/*      GCB:GPIO:GPIO_SD_SERDES_MAP */
#define GCB_GPIO_SD_SERDES_MAP(r) __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 156, r, 6, 4)

#define GCB_GPIO_SD_SERDES_MAP_G_SD_SERDES_MAP(x) ((x) & GENMASK(1, 0))
#define GCB_GPIO_SD_SERDES_MAP_G_SD_SERDES_MAP_M GENMASK(1, 0)
#define GCB_GPIO_SD_SERDES_MAP_G_SD_SERDES_MAP_X(x) ((x) & GENMASK(1, 0))

/*      GCB:MIIM:MII_STATUS */
#define GCB_MII_STATUS(g)         __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 0, 0, 1, 4)

#define GCB_MII_STATUS_SCAN_COMPLETE(x)          (((x) << 4) & GENMASK(4, 4))
#define GCB_MII_STATUS_SCAN_COMPLETE_M           GENMASK(4, 4)
#define GCB_MII_STATUS_SCAN_COMPLETE_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define GCB_MII_STATUS_STAT_BUSY(x)              (((x) << 3) & GENMASK(3, 3))
#define GCB_MII_STATUS_STAT_BUSY_M               GENMASK(3, 3)
#define GCB_MII_STATUS_STAT_BUSY_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define GCB_MII_STATUS_STAT_OPR_PEND(x)          (((x) << 2) & GENMASK(2, 2))
#define GCB_MII_STATUS_STAT_OPR_PEND_M           GENMASK(2, 2)
#define GCB_MII_STATUS_STAT_OPR_PEND_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define GCB_MII_STATUS_STAT_PENDING_RD(x)        (((x) << 1) & GENMASK(1, 1))
#define GCB_MII_STATUS_STAT_PENDING_RD_M         GENMASK(1, 1)
#define GCB_MII_STATUS_STAT_PENDING_RD_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define GCB_MII_STATUS_STAT_PENDING_WR(x)        ((x) & GENMASK(0, 0))
#define GCB_MII_STATUS_STAT_PENDING_WR_M         GENMASK(0, 0)
#define GCB_MII_STATUS_STAT_PENDING_WR_X(x)      ((x) & GENMASK(0, 0))

/*      GCB:MIIM:MII_CFG_7226 */
#define GCB_MII_CFG_7226(g)       __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 4, 0, 1, 4)

#define GCB_MII_CFG_7226_7226_CFG_FIELD(x)       (((x) << 9) & GENMASK(9, 9))
#define GCB_MII_CFG_7226_7226_CFG_FIELD_M        GENMASK(9, 9)
#define GCB_MII_CFG_7226_7226_CFG_FIELD_X(x)     (((x) & GENMASK(9, 9)) >> 9)

/*      GCB:MIIM:MII_CMD */
#define GCB_MII_CMD(g)            __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 8, 0, 1, 4)

#define GCB_MII_CMD_CMD_VLD(x)                   (((x) << 31) & GENMASK(31, 31))
#define GCB_MII_CMD_CMD_VLD_M                    GENMASK(31, 31)
#define GCB_MII_CMD_CMD_VLD_X(x)                 (((x) & GENMASK(31, 31)) >> 31)

#define GCB_MII_CMD_CMD_PHYAD(x)                 (((x) << 25) & GENMASK(29, 25))
#define GCB_MII_CMD_CMD_PHYAD_M                  GENMASK(29, 25)
#define GCB_MII_CMD_CMD_PHYAD_X(x)               (((x) & GENMASK(29, 25)) >> 25)

#define GCB_MII_CMD_CMD_REGAD(x)                 (((x) << 20) & GENMASK(24, 20))
#define GCB_MII_CMD_CMD_REGAD_M                  GENMASK(24, 20)
#define GCB_MII_CMD_CMD_REGAD_X(x)               (((x) & GENMASK(24, 20)) >> 20)

#define GCB_MII_CMD_CMD_WRDATA(x)                (((x) << 4) & GENMASK(19, 4))
#define GCB_MII_CMD_CMD_WRDATA_M                 GENMASK(19, 4)
#define GCB_MII_CMD_CMD_WRDATA_X(x)              (((x) & GENMASK(19, 4)) >> 4)

#define GCB_MII_CMD_CMD_SINGLE_SCAN(x)           (((x) << 3) & GENMASK(3, 3))
#define GCB_MII_CMD_CMD_SINGLE_SCAN_M            GENMASK(3, 3)
#define GCB_MII_CMD_CMD_SINGLE_SCAN_X(x)         (((x) & GENMASK(3, 3)) >> 3)

#define GCB_MII_CMD_CMD_OPR_FIELD(x)             (((x) << 1) & GENMASK(2, 1))
#define GCB_MII_CMD_CMD_OPR_FIELD_M              GENMASK(2, 1)
#define GCB_MII_CMD_CMD_OPR_FIELD_X(x)           (((x) & GENMASK(2, 1)) >> 1)

#define GCB_MII_CMD_CMD_SCAN(x)                  ((x) & GENMASK(0, 0))
#define GCB_MII_CMD_CMD_SCAN_M                   GENMASK(0, 0)
#define GCB_MII_CMD_CMD_SCAN_X(x)                ((x) & GENMASK(0, 0))

/*      GCB:MIIM:MII_DATA */
#define GCB_MII_DATA(g)           __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 12, 0, 1, 4)

#define GCB_MII_DATA_DATA_SUCCESS(x)             (((x) << 16) & GENMASK(17, 16))
#define GCB_MII_DATA_DATA_SUCCESS_M              GENMASK(17, 16)
#define GCB_MII_DATA_DATA_SUCCESS_X(x)           (((x) & GENMASK(17, 16)) >> 16)

#define GCB_MII_DATA_DATA_RDDATA(x)              ((x) & GENMASK(15, 0))
#define GCB_MII_DATA_DATA_RDDATA_M               GENMASK(15, 0)
#define GCB_MII_DATA_DATA_RDDATA_X(x)            ((x) & GENMASK(15, 0))

/*      GCB:MIIM:MII_CFG */
#define GCB_MII_CFG(g)            __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 16, 0, 1, 4)

#define GCB_MII_CFG_DEADLOCK_FIX_DIS(x)          (((x) << 11) & GENMASK(11, 11))
#define GCB_MII_CFG_DEADLOCK_FIX_DIS_M           GENMASK(11, 11)
#define GCB_MII_CFG_DEADLOCK_FIX_DIS_X(x)        (((x) & GENMASK(11, 11)) >> 11)

#define GCB_MII_CFG_ST_CFG_FIELD(x)              (((x) << 9) & GENMASK(10, 9))
#define GCB_MII_CFG_ST_CFG_FIELD_M               GENMASK(10, 9)
#define GCB_MII_CFG_ST_CFG_FIELD_X(x)            (((x) & GENMASK(10, 9)) >> 9)

#define GCB_MII_CFG_CFG_DBG(x)                   (((x) << 8) & GENMASK(8, 8))
#define GCB_MII_CFG_CFG_DBG_M                    GENMASK(8, 8)
#define GCB_MII_CFG_CFG_DBG_X(x)                 (((x) & GENMASK(8, 8)) >> 8)

#define GCB_MII_CFG_CFG_PRESCALE(x)              ((x) & GENMASK(7, 0))
#define GCB_MII_CFG_CFG_PRESCALE_M               GENMASK(7, 0)
#define GCB_MII_CFG_CFG_PRESCALE_X(x)            ((x) & GENMASK(7, 0))

/*      GCB:MIIM:MII_SCAN_0 */
#define GCB_MII_SCAN_0(g)         __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 20, 0, 1, 4)

#define GCB_MII_SCAN_0_SCAN_PHYADHI(x)           (((x) << 5) & GENMASK(9, 5))
#define GCB_MII_SCAN_0_SCAN_PHYADHI_M            GENMASK(9, 5)
#define GCB_MII_SCAN_0_SCAN_PHYADHI_X(x)         (((x) & GENMASK(9, 5)) >> 5)

#define GCB_MII_SCAN_0_SCAN_PHYADLO(x)           ((x) & GENMASK(4, 0))
#define GCB_MII_SCAN_0_SCAN_PHYADLO_M            GENMASK(4, 0)
#define GCB_MII_SCAN_0_SCAN_PHYADLO_X(x)         ((x) & GENMASK(4, 0))

/*      GCB:MIIM:MII_SCAN_1 */
#define GCB_MII_SCAN_1(g)         __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 24, 0, 1, 4)

#define GCB_MII_SCAN_1_SCAN_MASK(x)              (((x) << 16) & GENMASK(31, 16))
#define GCB_MII_SCAN_1_SCAN_MASK_M               GENMASK(31, 16)
#define GCB_MII_SCAN_1_SCAN_MASK_X(x)            (((x) & GENMASK(31, 16)) >> 16)

#define GCB_MII_SCAN_1_SCAN_EXPECT(x)            ((x) & GENMASK(15, 0))
#define GCB_MII_SCAN_1_SCAN_EXPECT_M             GENMASK(15, 0)
#define GCB_MII_SCAN_1_SCAN_EXPECT_X(x)          ((x) & GENMASK(15, 0))

/*      GCB:MIIM:MII_RSLTS */
#define GCB_MII_RSLTS(g)          __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 28, 0, 1, 4)

/*      GCB:MIIM:MII_RSLTS_VLD */
#define GCB_MII_RSLTS_VLD(g)      __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 32, 0, 1, 4)

/*      GCB:MIIM_READ_SCAN:MII_STICKY */
#define GCB_MII_STICKY(r)         __REG(TARGET_GCB,\
					0, 1, 352, 0, 1, 8, 0, r, 2, 4)

/*      GCB:FLEXCOM_SHARED:SS_MASK */
#define GCB_SS_MASK(g, r)         __REG(TARGET_GCB,\
					0, 1, 360, g, 5, 8, 0, r, 2, 4)

#define GCB_SS_MASK_MASK(x)                      ((x) & GENMASK(20, 0))
#define GCB_SS_MASK_MASK_M                       GENMASK(20, 0)
#define GCB_SS_MASK_MASK_X(x)                    ((x) & GENMASK(20, 0))

/*      GCB:SIO_CTRL:SIO_INPUT_DATA */
#define GCB_SIO_INPUT_DATA(r)     __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 0, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_CFG */
#define GCB_SIO_CFG               __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 16, 0, 1, 4)

#define GCB_SIO_CFG_SIO_PWM_WINDOW(x)            (((x) << 20) & GENMASK(27, 20))
#define GCB_SIO_CFG_SIO_PWM_WINDOW_M             GENMASK(27, 20)
#define GCB_SIO_CFG_SIO_PWM_WINDOW_X(x)          (((x) & GENMASK(27, 20)) >> 20)

#define GCB_SIO_CFG_SIO_REDUCED_GAP(x)           (((x) << 19) & GENMASK(19, 19))
#define GCB_SIO_CFG_SIO_REDUCED_GAP_M            GENMASK(19, 19)
#define GCB_SIO_CFG_SIO_REDUCED_GAP_X(x)         (((x) & GENMASK(19, 19)) >> 19)

#define GCB_SIO_CFG_SIO_BMODE_1(x)               (((x) << 17) & GENMASK(18, 17))
#define GCB_SIO_CFG_SIO_BMODE_1_M                GENMASK(18, 17)
#define GCB_SIO_CFG_SIO_BMODE_1_X(x)             (((x) & GENMASK(18, 17)) >> 17)

#define GCB_SIO_CFG_SIO_BMODE_0(x)               (((x) << 15) & GENMASK(16, 15))
#define GCB_SIO_CFG_SIO_BMODE_0_M                GENMASK(16, 15)
#define GCB_SIO_CFG_SIO_BMODE_0_X(x)             (((x) & GENMASK(16, 15)) >> 15)

#define GCB_SIO_CFG_SIO_BLINK_RESET(x)           (((x) << 14) & GENMASK(14, 14))
#define GCB_SIO_CFG_SIO_BLINK_RESET_M            GENMASK(14, 14)
#define GCB_SIO_CFG_SIO_BLINK_RESET_X(x)         (((x) & GENMASK(14, 14)) >> 14)

#define GCB_SIO_CFG_SIO_BURST_GAP_DIS(x)         (((x) << 13) & GENMASK(13, 13))
#define GCB_SIO_CFG_SIO_BURST_GAP_DIS_M          GENMASK(13, 13)
#define GCB_SIO_CFG_SIO_BURST_GAP_DIS_X(x)       (((x) & GENMASK(13, 13)) >> 13)

#define GCB_SIO_CFG_SIO_BURST_GAP(x)             (((x) << 8) & GENMASK(12, 8))
#define GCB_SIO_CFG_SIO_BURST_GAP_M              GENMASK(12, 8)
#define GCB_SIO_CFG_SIO_BURST_GAP_X(x)           (((x) & GENMASK(12, 8)) >> 8)

#define GCB_SIO_CFG_SIO_SINGLE_SHOT(x)           (((x) << 7) & GENMASK(7, 7))
#define GCB_SIO_CFG_SIO_SINGLE_SHOT_M            GENMASK(7, 7)
#define GCB_SIO_CFG_SIO_SINGLE_SHOT_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define GCB_SIO_CFG_SIO_AUTO_REPEAT(x)           (((x) << 6) & GENMASK(6, 6))
#define GCB_SIO_CFG_SIO_AUTO_REPEAT_M            GENMASK(6, 6)
#define GCB_SIO_CFG_SIO_AUTO_REPEAT_X(x)         (((x) & GENMASK(6, 6)) >> 6)

#define GCB_SIO_CFG_SIO_LD_POLARITY(x)           (((x) << 5) & GENMASK(5, 5))
#define GCB_SIO_CFG_SIO_LD_POLARITY_M            GENMASK(5, 5)
#define GCB_SIO_CFG_SIO_LD_POLARITY_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define GCB_SIO_CFG_SIO_PORT_WIDTH(x)            (((x) << 3) & GENMASK(4, 3))
#define GCB_SIO_CFG_SIO_PORT_WIDTH_M             GENMASK(4, 3)
#define GCB_SIO_CFG_SIO_PORT_WIDTH_X(x)          (((x) & GENMASK(4, 3)) >> 3)

#define GCB_SIO_CFG_SIO_REVERSE_OUTPUT(x)        (((x) << 2) & GENMASK(2, 2))
#define GCB_SIO_CFG_SIO_REVERSE_OUTPUT_M         GENMASK(2, 2)
#define GCB_SIO_CFG_SIO_REVERSE_OUTPUT_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define GCB_SIO_CFG_SIO_REVERSE_INPUT(x)         (((x) << 1) & GENMASK(1, 1))
#define GCB_SIO_CFG_SIO_REVERSE_INPUT_M          GENMASK(1, 1)
#define GCB_SIO_CFG_SIO_REVERSE_INPUT_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define GCB_SIO_CFG_SIO_GLOB_INTR_ENA(x)         ((x) & GENMASK(0, 0))
#define GCB_SIO_CFG_SIO_GLOB_INTR_ENA_M          GENMASK(0, 0)
#define GCB_SIO_CFG_SIO_GLOB_INTR_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      GCB:SIO_CTRL:SIO_CLOCK */
#define GCB_SIO_CLOCK             __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 20, 0, 1, 4)

#define GCB_SIO_CLOCK_SIO_CLK_FREQ(x)            (((x) << 8) & GENMASK(19, 8))
#define GCB_SIO_CLOCK_SIO_CLK_FREQ_M             GENMASK(19, 8)
#define GCB_SIO_CLOCK_SIO_CLK_FREQ_X(x)          (((x) & GENMASK(19, 8)) >> 8)

#define GCB_SIO_CLOCK_SYS_CLK_PERIOD(x)          ((x) & GENMASK(7, 0))
#define GCB_SIO_CLOCK_SYS_CLK_PERIOD_M           GENMASK(7, 0)
#define GCB_SIO_CLOCK_SYS_CLK_PERIOD_X(x)        ((x) & GENMASK(7, 0))

/*      GCB:SIO_CTRL:SIO_PORT_CFG */
#define GCB_SIO_PORT_CFG(r)       __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 24, r, 32, 4)

#define GCB_SIO_PORT_CFG_BIT_SOURCE(x)           (((x) << 12) & GENMASK(23, 12))
#define GCB_SIO_PORT_CFG_BIT_SOURCE_M            GENMASK(23, 12)
#define GCB_SIO_PORT_CFG_BIT_SOURCE_X(x)         (((x) & GENMASK(23, 12)) >> 12)

#define GCB_SIO_PORT_CFG_PWM_SOURCE(x)           (((x) << 4) & GENMASK(11, 4))
#define GCB_SIO_PORT_CFG_PWM_SOURCE_M            GENMASK(11, 4)
#define GCB_SIO_PORT_CFG_PWM_SOURCE_X(x)         (((x) & GENMASK(11, 4)) >> 4)

#define GCB_SIO_PORT_CFG_BIT_POLARITY(x)         ((x) & GENMASK(3, 0))
#define GCB_SIO_PORT_CFG_BIT_POLARITY_M          GENMASK(3, 0)
#define GCB_SIO_PORT_CFG_BIT_POLARITY_X(x)       ((x) & GENMASK(3, 0))

/*      GCB:SIO_CTRL:SIO_PORT_ENA */
#define GCB_SIO_PORT_ENA          __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 152, 0, 1, 4)

/*      GCB:SIO_CTRL:SIO_PWM_CFG */
#define GCB_SIO_PWM_CFG(r)        __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 156, r, 3, 4)

#define GCB_SIO_PWM_CFG_PWM_DUTY_CYCLE(x)        ((x) & GENMASK(7, 0))
#define GCB_SIO_PWM_CFG_PWM_DUTY_CYCLE_M         GENMASK(7, 0)
#define GCB_SIO_PWM_CFG_PWM_DUTY_CYCLE_X(x)      ((x) & GENMASK(7, 0))

/*      GCB:SIO_CTRL:SIO_INTR_POL */
#define GCB_SIO_INTR_POL(r)       __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 168, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_RAW */
#define GCB_SIO_INTR_RAW(r)       __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 184, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_TRIGGER0 */
#define GCB_SIO_INTR_TRIGGER0(r)  __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 200, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_TRIGGER1 */
#define GCB_SIO_INTR_TRIGGER1(r)  __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 216, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR */
#define GCB_SIO_INTR(r)           __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 232, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_ENA */
#define GCB_SIO_INTR_ENA(r)       __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 248, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_IDENT */
#define GCB_SIO_INTR_IDENT(r)     __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 264, r, 4, 4)

/*      GCB:FAN_CTRL:FAN_CFG */
#define GCB_FAN_CFG               __REG(TARGET_GCB,\
					0, 1, 680, 0, 1, 12, 0, 0, 1, 4)

#define GCB_FAN_CFG_DUTY_CYCLE(x)                (((x) << 16) & GENMASK(23, 16))
#define GCB_FAN_CFG_DUTY_CYCLE_M                 GENMASK(23, 16)
#define GCB_FAN_CFG_DUTY_CYCLE_X(x)              (((x) & GENMASK(23, 16)) >> 16)

#define GCB_FAN_CFG_INV_POL(x)                   (((x) << 3) & GENMASK(3, 3))
#define GCB_FAN_CFG_INV_POL_M                    GENMASK(3, 3)
#define GCB_FAN_CFG_INV_POL_X(x)                 (((x) & GENMASK(3, 3)) >> 3)

#define GCB_FAN_CFG_GATE_ENA(x)                  (((x) << 2) & GENMASK(2, 2))
#define GCB_FAN_CFG_GATE_ENA_M                   GENMASK(2, 2)
#define GCB_FAN_CFG_GATE_ENA_X(x)                (((x) & GENMASK(2, 2)) >> 2)

#define GCB_FAN_CFG_PWM_OPEN_COL_ENA(x)          (((x) << 1) & GENMASK(1, 1))
#define GCB_FAN_CFG_PWM_OPEN_COL_ENA_M           GENMASK(1, 1)
#define GCB_FAN_CFG_PWM_OPEN_COL_ENA_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define GCB_FAN_CFG_FAN_STAT_CFG(x)              ((x) & GENMASK(0, 0))
#define GCB_FAN_CFG_FAN_STAT_CFG_M               GENMASK(0, 0)
#define GCB_FAN_CFG_FAN_STAT_CFG_X(x)            ((x) & GENMASK(0, 0))

/*      GCB:FAN_CTRL:PWM_FREQ */
#define GCB_PWM_FREQ              __REG(TARGET_GCB,\
					0, 1, 680, 0, 1, 12, 4, 0, 1, 4)

#define GCB_PWM_FREQ_CLK_CYCLES_10US(x)          (((x) << 15) & GENMASK(25, 15))
#define GCB_PWM_FREQ_CLK_CYCLES_10US_M           GENMASK(25, 15)
#define GCB_PWM_FREQ_CLK_CYCLES_10US_X(x)        (((x) & GENMASK(25, 15)) >> 15)

#define GCB_PWM_FREQ_PWM_FREQ(x)                 ((x) & GENMASK(14, 0))
#define GCB_PWM_FREQ_PWM_FREQ_M                  GENMASK(14, 0)
#define GCB_PWM_FREQ_PWM_FREQ_X(x)               ((x) & GENMASK(14, 0))

/*      GCB:FAN_CTRL:FAN_CNT */
#define GCB_FAN_CNT               __REG(TARGET_GCB,\
					0, 1, 680, 0, 1, 12, 8, 0, 1, 4)

#define GCB_FAN_CNT_FAN_CNT(x)                   ((x) & GENMASK(15, 0))
#define GCB_FAN_CNT_FAN_CNT_M                    GENMASK(15, 0)
#define GCB_FAN_CNT_FAN_CNT_X(x)                 ((x) & GENMASK(15, 0))

/*      GCB:MEMITGR:MEMITGR_CTRL */
#define GCB_MEMITGR_CTRL          __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 0, 0, 1, 4)

#define GCB_MEMITGR_CTRL_ACTIVATE(x)             ((x) & GENMASK(0, 0))
#define GCB_MEMITGR_CTRL_ACTIVATE_M              GENMASK(0, 0)
#define GCB_MEMITGR_CTRL_ACTIVATE_X(x)           ((x) & GENMASK(0, 0))

/*      GCB:MEMITGR:MEMITGR_STAT */
#define GCB_MEMITGR_STAT          __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 4, 0, 1, 4)

#define GCB_MEMITGR_STAT_INDICATION_OVF(x)       (((x) << 5) & GENMASK(5, 5))
#define GCB_MEMITGR_STAT_INDICATION_OVF_M        GENMASK(5, 5)
#define GCB_MEMITGR_STAT_INDICATION_OVF_X(x)     (((x) & GENMASK(5, 5)) >> 5)

#define GCB_MEMITGR_STAT_INDICATION(x)           (((x) << 4) & GENMASK(4, 4))
#define GCB_MEMITGR_STAT_INDICATION_M            GENMASK(4, 4)
#define GCB_MEMITGR_STAT_INDICATION_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define GCB_MEMITGR_STAT_MODE_LISTEN(x)          (((x) << 3) & GENMASK(3, 3))
#define GCB_MEMITGR_STAT_MODE_LISTEN_M           GENMASK(3, 3)
#define GCB_MEMITGR_STAT_MODE_LISTEN_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define GCB_MEMITGR_STAT_MODE_DETECT(x)          (((x) << 2) & GENMASK(2, 2))
#define GCB_MEMITGR_STAT_MODE_DETECT_M           GENMASK(2, 2)
#define GCB_MEMITGR_STAT_MODE_DETECT_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define GCB_MEMITGR_STAT_MODE_IDLE(x)            (((x) << 1) & GENMASK(1, 1))
#define GCB_MEMITGR_STAT_MODE_IDLE_M             GENMASK(1, 1)
#define GCB_MEMITGR_STAT_MODE_IDLE_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define GCB_MEMITGR_STAT_MODE_BUSY(x)            ((x) & GENMASK(0, 0))
#define GCB_MEMITGR_STAT_MODE_BUSY_M             GENMASK(0, 0)
#define GCB_MEMITGR_STAT_MODE_BUSY_X(x)          ((x) & GENMASK(0, 0))

/*      GCB:MEMITGR:MEMITGR_INFO */
#define GCB_MEMITGR_INFO          __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 8, 0, 1, 4)

#define GCB_MEMITGR_INFO_MEM_ERR(x)              (((x) << 31) & GENMASK(31, 31))
#define GCB_MEMITGR_INFO_MEM_ERR_M               GENMASK(31, 31)
#define GCB_MEMITGR_INFO_MEM_ERR_X(x)            (((x) & GENMASK(31, 31)) >> 31)

#define GCB_MEMITGR_INFO_MEM_COR(x)              (((x) << 30) & GENMASK(30, 30))
#define GCB_MEMITGR_INFO_MEM_COR_M               GENMASK(30, 30)
#define GCB_MEMITGR_INFO_MEM_COR_X(x)            (((x) & GENMASK(30, 30)) >> 30)

#define GCB_MEMITGR_INFO_MEM_ERR_OVF(x)          (((x) << 29) & GENMASK(29, 29))
#define GCB_MEMITGR_INFO_MEM_ERR_OVF_M           GENMASK(29, 29)
#define GCB_MEMITGR_INFO_MEM_ERR_OVF_X(x)        (((x) & GENMASK(29, 29)) >> 29)

#define GCB_MEMITGR_INFO_MEM_COR_OVF(x)          (((x) << 28) & GENMASK(28, 28))
#define GCB_MEMITGR_INFO_MEM_COR_OVF_M           GENMASK(28, 28)
#define GCB_MEMITGR_INFO_MEM_COR_OVF_X(x)        (((x) & GENMASK(28, 28)) >> 28)

#define GCB_MEMITGR_INFO_MEM_ADDR(x)             ((x) & GENMASK(27, 0))
#define GCB_MEMITGR_INFO_MEM_ADDR_M              GENMASK(27, 0)
#define GCB_MEMITGR_INFO_MEM_ADDR_X(x)           ((x) & GENMASK(27, 0))

/*      GCB:MEMITGR:MEMITGR_IDX */
#define GCB_MEMITGR_IDX           __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 12, 0, 1, 4)

#define GCB_MEMITGR_IDX_MEM_IDX(x)               ((x) & GENMASK(15, 0))
#define GCB_MEMITGR_IDX_MEM_IDX_M                GENMASK(15, 0)
#define GCB_MEMITGR_IDX_MEM_IDX_X(x)             ((x) & GENMASK(15, 0))

/*      GCB:MEMITGR:MEMITGR_DIV */
#define GCB_MEMITGR_DIV           __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 16, 0, 1, 4)

#define GCB_MEMITGR_DIV_MEM_DIV(x)               ((x) & GENMASK(15, 0))
#define GCB_MEMITGR_DIV_MEM_DIV_M                GENMASK(15, 0)
#define GCB_MEMITGR_DIV_MEM_DIV_X(x)             ((x) & GENMASK(15, 0))

/*      GCB:MEMITGR:MEMITGR_DBG */
#define GCB_MEMITGR_DBG           __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 20, 0, 1, 4)

#define GCB_MEMITGR_DBG_MEM_DIV_SENSE(x)         (((x) << 9) & GENMASK(9, 9))
#define GCB_MEMITGR_DBG_MEM_DIV_SENSE_M          GENMASK(9, 9)
#define GCB_MEMITGR_DBG_MEM_DIV_SENSE_X(x)       (((x) & GENMASK(9, 9)) >> 9)

#define GCB_MEMITGR_DBG_FORCE_INTR(x)            (((x) << 8) & GENMASK(8, 8))
#define GCB_MEMITGR_DBG_FORCE_INTR_M             GENMASK(8, 8)
#define GCB_MEMITGR_DBG_FORCE_INTR_X(x)          (((x) & GENMASK(8, 8)) >> 8)

#define GCB_MEMITGR_DBG_SYNC_IN(x)               (((x) << 7) & GENMASK(7, 7))
#define GCB_MEMITGR_DBG_SYNC_IN_M                GENMASK(7, 7)
#define GCB_MEMITGR_DBG_SYNC_IN_X(x)             (((x) & GENMASK(7, 7)) >> 7)

#define GCB_MEMITGR_DBG_ENA_IN(x)                (((x) << 6) & GENMASK(6, 6))
#define GCB_MEMITGR_DBG_ENA_IN_M                 GENMASK(6, 6)
#define GCB_MEMITGR_DBG_ENA_IN_X(x)              (((x) & GENMASK(6, 6)) >> 6)

#define GCB_MEMITGR_DBG_DATA_IN(x)               (((x) << 5) & GENMASK(5, 5))
#define GCB_MEMITGR_DBG_DATA_IN_M                GENMASK(5, 5)
#define GCB_MEMITGR_DBG_DATA_IN_X(x)             (((x) & GENMASK(5, 5)) >> 5)

#define GCB_MEMITGR_DBG_INTR_IN(x)               (((x) << 4) & GENMASK(4, 4))
#define GCB_MEMITGR_DBG_INTR_IN_M                GENMASK(4, 4)
#define GCB_MEMITGR_DBG_INTR_IN_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define GCB_MEMITGR_DBG_SYNC_OUT(x)              (((x) << 3) & GENMASK(3, 3))
#define GCB_MEMITGR_DBG_SYNC_OUT_M               GENMASK(3, 3)
#define GCB_MEMITGR_DBG_SYNC_OUT_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define GCB_MEMITGR_DBG_ENA_OUT(x)               (((x) << 2) & GENMASK(2, 2))
#define GCB_MEMITGR_DBG_ENA_OUT_M                GENMASK(2, 2)
#define GCB_MEMITGR_DBG_ENA_OUT_X(x)             (((x) & GENMASK(2, 2)) >> 2)

#define GCB_MEMITGR_DBG_FORCE_ENA(x)             (((x) << 1) & GENMASK(1, 1))
#define GCB_MEMITGR_DBG_FORCE_ENA_M              GENMASK(1, 1)
#define GCB_MEMITGR_DBG_FORCE_ENA_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define GCB_MEMITGR_DBG_DETECT_ENA(x)            ((x) & GENMASK(0, 0))
#define GCB_MEMITGR_DBG_DETECT_ENA_M             GENMASK(0, 0)
#define GCB_MEMITGR_DBG_DETECT_ENA_X(x)          ((x) & GENMASK(0, 0))

/*      GCB:ETHERACCESS:VRAP_ACCESS_STAT */
#define GCB_VRAP_ACCESS_STAT      __REG(TARGET_GCB,\
					0, 1, 716, 0, 1, 4, 0, 0, 1, 4)

#define GCB_VRAP_ACCESS_STAT_FRM_RECV_STICKY(x)  (((x) << 3) & GENMASK(3, 3))
#define GCB_VRAP_ACCESS_STAT_FRM_RECV_STICKY_M   GENMASK(3, 3)
#define GCB_VRAP_ACCESS_STAT_FRM_RECV_STICKY_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define GCB_VRAP_ACCESS_STAT_CMD_INVALID_STICKY(x) (((x) << 2) & GENMASK(2, 2))
#define GCB_VRAP_ACCESS_STAT_CMD_INVALID_STICKY_M GENMASK(2, 2)
#define GCB_VRAP_ACCESS_STAT_CMD_INVALID_STICKY_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define GCB_VRAP_ACCESS_STAT_FRM_INVALID_STICKY(x) (((x) << 1) & GENMASK(1, 1))
#define GCB_VRAP_ACCESS_STAT_FRM_INVALID_STICKY_M GENMASK(1, 1)
#define GCB_VRAP_ACCESS_STAT_FRM_INVALID_STICKY_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define GCB_VRAP_ACCESS_STAT_REPLY_ABORT_STICKY(x) ((x) & GENMASK(0, 0))
#define GCB_VRAP_ACCESS_STAT_REPLY_ABORT_STICKY_M GENMASK(0, 0)
#define GCB_VRAP_ACCESS_STAT_REPLY_ABORT_STICKY_X(x) ((x) & GENMASK(0, 0))

/*      HSIO:SYNC_ETH_CFG:SYNC_ETH_CFG */
#define HSIO_SYNC_ETH_CFG(r)      __REG(TARGET_HSIO,\
					0, 1, 0, 0, 1, 8, 0, r, 2, 4)

#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_SRC(x)    (((x) << 4) & GENMASK(6, 4))
#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_SRC_M     GENMASK(6, 4)
#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_SRC_X(x)  (((x) & GENMASK(6, 4)) >> 4)

#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_DIV(x)    (((x) << 1) & GENMASK(3, 1))
#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_DIV_M     GENMASK(3, 1)
#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_DIV_X(x)  (((x) & GENMASK(3, 1)) >> 1)

#define HSIO_SYNC_ETH_CFG_RECO_CLK_ENA(x)        ((x) & GENMASK(0, 0))
#define HSIO_SYNC_ETH_CFG_RECO_CLK_ENA_M         GENMASK(0, 0)
#define HSIO_SYNC_ETH_CFG_RECO_CLK_ENA_X(x)      ((x) & GENMASK(0, 0))

/*      HSIO:SD:SD_CFG */
#define HSIO_SD_CFG(g)            __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 0, 0, 1, 4)

#define HSIO_SD_CFG_TEST_POWERDOWN(x)            (((x) << 28) & GENMASK(28, 28))
#define HSIO_SD_CFG_TEST_POWERDOWN_M             GENMASK(28, 28)
#define HSIO_SD_CFG_TEST_POWERDOWN_X(x)          (((x) & GENMASK(28, 28)) >> 28)

#define HSIO_SD_CFG_PHY_RESET(x)                 (((x) << 27) & GENMASK(27, 27))
#define HSIO_SD_CFG_PHY_RESET_M                  GENMASK(27, 27)
#define HSIO_SD_CFG_PHY_RESET_X(x)               (((x) & GENMASK(27, 27)) >> 27)

#define HSIO_SD_CFG_RX_LOS_FILT_CNT(x)           (((x) << 20) & GENMASK(26, 20))
#define HSIO_SD_CFG_RX_LOS_FILT_CNT_M            GENMASK(26, 20)
#define HSIO_SD_CFG_RX_LOS_FILT_CNT_X(x)         (((x) & GENMASK(26, 20)) >> 20)

#define HSIO_SD_CFG_TX_VBOOST_EN(x)              (((x) << 19) & GENMASK(19, 19))
#define HSIO_SD_CFG_TX_VBOOST_EN_M               GENMASK(19, 19)
#define HSIO_SD_CFG_TX_VBOOST_EN_X(x)            (((x) & GENMASK(19, 19)) >> 19)

#define HSIO_SD_CFG_TX_RESET(x)                  (((x) << 18) & GENMASK(18, 18))
#define HSIO_SD_CFG_TX_RESET_M                   GENMASK(18, 18)
#define HSIO_SD_CFG_TX_RESET_X(x)                (((x) & GENMASK(18, 18)) >> 18)

#define HSIO_SD_CFG_TX_RATE(x)                   (((x) << 16) & GENMASK(17, 16))
#define HSIO_SD_CFG_TX_RATE_M                    GENMASK(17, 16)
#define HSIO_SD_CFG_TX_RATE_X(x)                 (((x) & GENMASK(17, 16)) >> 16)

#define HSIO_SD_CFG_TX_INVERT(x)                 (((x) << 15) & GENMASK(15, 15))
#define HSIO_SD_CFG_TX_INVERT_M                  GENMASK(15, 15)
#define HSIO_SD_CFG_TX_INVERT_X(x)               (((x) & GENMASK(15, 15)) >> 15)

#define HSIO_SD_CFG_TX_EN(x)                     (((x) << 14) & GENMASK(14, 14))
#define HSIO_SD_CFG_TX_EN_M                      GENMASK(14, 14)
#define HSIO_SD_CFG_TX_EN_X(x)                   (((x) & GENMASK(14, 14)) >> 14)

#define HSIO_SD_CFG_TX_DETECT_RX_REQ(x)          (((x) << 13) & GENMASK(13, 13))
#define HSIO_SD_CFG_TX_DETECT_RX_REQ_M           GENMASK(13, 13)
#define HSIO_SD_CFG_TX_DETECT_RX_REQ_X(x)        (((x) & GENMASK(13, 13)) >> 13)

#define HSIO_SD_CFG_TX_DATA_EN(x)                (((x) << 12) & GENMASK(12, 12))
#define HSIO_SD_CFG_TX_DATA_EN_M                 GENMASK(12, 12)
#define HSIO_SD_CFG_TX_DATA_EN_X(x)              (((x) & GENMASK(12, 12)) >> 12)

#define HSIO_SD_CFG_TX_CM_EN(x)                  (((x) << 11) & GENMASK(11, 11))
#define HSIO_SD_CFG_TX_CM_EN_M                   GENMASK(11, 11)
#define HSIO_SD_CFG_TX_CM_EN_X(x)                (((x) & GENMASK(11, 11)) >> 11)

#define HSIO_SD_CFG_LANE_10BIT_SEL(x)            (((x) << 10) & GENMASK(10, 10))
#define HSIO_SD_CFG_LANE_10BIT_SEL_M             GENMASK(10, 10)
#define HSIO_SD_CFG_LANE_10BIT_SEL_X(x)          (((x) & GENMASK(10, 10)) >> 10)

#define HSIO_SD_CFG_RX_TERM_EN(x)                (((x) << 9) & GENMASK(9, 9))
#define HSIO_SD_CFG_RX_TERM_EN_M                 GENMASK(9, 9)
#define HSIO_SD_CFG_RX_TERM_EN_X(x)              (((x) & GENMASK(9, 9)) >> 9)

#define HSIO_SD_CFG_RX_RESET(x)                  (((x) << 8) & GENMASK(8, 8))
#define HSIO_SD_CFG_RX_RESET_M                   GENMASK(8, 8)
#define HSIO_SD_CFG_RX_RESET_X(x)                (((x) & GENMASK(8, 8)) >> 8)

#define HSIO_SD_CFG_RX_RATE(x)                   (((x) << 6) & GENMASK(7, 6))
#define HSIO_SD_CFG_RX_RATE_M                    GENMASK(7, 6)
#define HSIO_SD_CFG_RX_RATE_X(x)                 (((x) & GENMASK(7, 6)) >> 6)

#define HSIO_SD_CFG_RX_PLL_EN(x)                 (((x) << 5) & GENMASK(5, 5))
#define HSIO_SD_CFG_RX_PLL_EN_M                  GENMASK(5, 5)
#define HSIO_SD_CFG_RX_PLL_EN_X(x)               (((x) & GENMASK(5, 5)) >> 5)

#define HSIO_SD_CFG_RX_LOS_EN(x)                 (((x) << 4) & GENMASK(4, 4))
#define HSIO_SD_CFG_RX_LOS_EN_M                  GENMASK(4, 4)
#define HSIO_SD_CFG_RX_LOS_EN_X(x)               (((x) & GENMASK(4, 4)) >> 4)

#define HSIO_SD_CFG_RX_INVERT(x)                 (((x) << 3) & GENMASK(3, 3))
#define HSIO_SD_CFG_RX_INVERT_M                  GENMASK(3, 3)
#define HSIO_SD_CFG_RX_INVERT_X(x)               (((x) & GENMASK(3, 3)) >> 3)

#define HSIO_SD_CFG_RX_DATA_EN(x)                (((x) << 2) & GENMASK(2, 2))
#define HSIO_SD_CFG_RX_DATA_EN_M                 GENMASK(2, 2)
#define HSIO_SD_CFG_RX_DATA_EN_X(x)              (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_SD_CFG_RX_ALIGN_EN(x)               (((x) << 1) & GENMASK(1, 1))
#define HSIO_SD_CFG_RX_ALIGN_EN_M                GENMASK(1, 1)
#define HSIO_SD_CFG_RX_ALIGN_EN_X(x)             (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_SD_CFG_LANE_LOOPBK_EN(x)            ((x) & GENMASK(0, 0))
#define HSIO_SD_CFG_LANE_LOOPBK_EN_M             GENMASK(0, 0)
#define HSIO_SD_CFG_LANE_LOOPBK_EN_X(x)          ((x) & GENMASK(0, 0))

/*      HSIO:SD:SD_CFG2 */
#define HSIO_SD_CFG2(g)           __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 4, 0, 1, 4)

#define HSIO_SD_CFG2_RX_EQ(x)                    (((x) << 25) & GENMASK(27, 25))
#define HSIO_SD_CFG2_RX_EQ_M                     GENMASK(27, 25)
#define HSIO_SD_CFG2_RX_EQ_X(x)                  (((x) & GENMASK(27, 25)) >> 25)

#define HSIO_SD_CFG2_TX_TERM_OFFSET(x)           (((x) << 20) & GENMASK(24, 20))
#define HSIO_SD_CFG2_TX_TERM_OFFSET_M            GENMASK(24, 20)
#define HSIO_SD_CFG2_TX_TERM_OFFSET_X(x)         (((x) & GENMASK(24, 20)) >> 20)

#define HSIO_SD_CFG2_TX_VBOOST_LVL(x)            (((x) << 17) & GENMASK(19, 17))
#define HSIO_SD_CFG2_TX_VBOOST_LVL_M             GENMASK(19, 17)
#define HSIO_SD_CFG2_TX_VBOOST_LVL_X(x)          (((x) & GENMASK(19, 17)) >> 17)

#define HSIO_SD_CFG2_LOS_BIAS(x)                 (((x) << 14) & GENMASK(16, 14))
#define HSIO_SD_CFG2_LOS_BIAS_M                  GENMASK(16, 14)
#define HSIO_SD_CFG2_LOS_BIAS_X(x)               (((x) & GENMASK(16, 14)) >> 14)

#define HSIO_SD_CFG2_TX_AMPLITUDE(x)             (((x) << 7) & GENMASK(13, 7))
#define HSIO_SD_CFG2_TX_AMPLITUDE_M              GENMASK(13, 7)
#define HSIO_SD_CFG2_TX_AMPLITUDE_X(x)           (((x) & GENMASK(13, 7)) >> 7)

#define HSIO_SD_CFG2_TX_PREEMPH(x)               ((x) & GENMASK(6, 0))
#define HSIO_SD_CFG2_TX_PREEMPH_M                GENMASK(6, 0)
#define HSIO_SD_CFG2_TX_PREEMPH_X(x)             ((x) & GENMASK(6, 0))

/*      HSIO:SD:MPLL_CFG */
#define HSIO_MPLL_CFG(g)          __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 8, 0, 1, 4)

#define HSIO_MPLL_CFG_REF_SSP_EN(x)              (((x) << 18) & GENMASK(18, 18))
#define HSIO_MPLL_CFG_REF_SSP_EN_M               GENMASK(18, 18)
#define HSIO_MPLL_CFG_REF_SSP_EN_X(x)            (((x) & GENMASK(18, 18)) >> 18)

#define HSIO_MPLL_CFG_REF_CLKDIV2(x)             (((x) << 17) & GENMASK(17, 17))
#define HSIO_MPLL_CFG_REF_CLKDIV2_M              GENMASK(17, 17)
#define HSIO_MPLL_CFG_REF_CLKDIV2_X(x)           (((x) & GENMASK(17, 17)) >> 17)

#define HSIO_MPLL_CFG_MPLL_EN(x)                 (((x) << 16) & GENMASK(16, 16))
#define HSIO_MPLL_CFG_MPLL_EN_M                  GENMASK(16, 16)
#define HSIO_MPLL_CFG_MPLL_EN_X(x)               (((x) & GENMASK(16, 16)) >> 16)

#define HSIO_MPLL_CFG_SSC_REF_CLK_SEL(x)         (((x) << 7) & GENMASK(15, 7))
#define HSIO_MPLL_CFG_SSC_REF_CLK_SEL_M          GENMASK(15, 7)
#define HSIO_MPLL_CFG_SSC_REF_CLK_SEL_X(x)       (((x) & GENMASK(15, 7)) >> 7)

#define HSIO_MPLL_CFG_MPLL_MULTIPLIER(x)         ((x) & GENMASK(6, 0))
#define HSIO_MPLL_CFG_MPLL_MULTIPLIER_M          GENMASK(6, 0)
#define HSIO_MPLL_CFG_MPLL_MULTIPLIER_X(x)       ((x) & GENMASK(6, 0))

/*      HSIO:SD:SD_STAT */
#define HSIO_SD_STAT(g)           __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 12, 0, 1, 4)

#define HSIO_SD_STAT_MPLL_STATE(x)               (((x) << 6) & GENMASK(6, 6))
#define HSIO_SD_STAT_MPLL_STATE_M                GENMASK(6, 6)
#define HSIO_SD_STAT_MPLL_STATE_X(x)             (((x) & GENMASK(6, 6)) >> 6)

#define HSIO_SD_STAT_TX_STATE(x)                 (((x) << 5) & GENMASK(5, 5))
#define HSIO_SD_STAT_TX_STATE_M                  GENMASK(5, 5)
#define HSIO_SD_STAT_TX_STATE_X(x)               (((x) & GENMASK(5, 5)) >> 5)

#define HSIO_SD_STAT_TX_DETECT_RX_RESULT(x)      (((x) << 4) & GENMASK(4, 4))
#define HSIO_SD_STAT_TX_DETECT_RX_RESULT_M       GENMASK(4, 4)
#define HSIO_SD_STAT_TX_DETECT_RX_RESULT_X(x)    (((x) & GENMASK(4, 4)) >> 4)

#define HSIO_SD_STAT_TX_DETECT_RX_ACK(x)         (((x) << 3) & GENMASK(3, 3))
#define HSIO_SD_STAT_TX_DETECT_RX_ACK_M          GENMASK(3, 3)
#define HSIO_SD_STAT_TX_DETECT_RX_ACK_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define HSIO_SD_STAT_TX_CM_STATE(x)              (((x) << 2) & GENMASK(2, 2))
#define HSIO_SD_STAT_TX_CM_STATE_M               GENMASK(2, 2)
#define HSIO_SD_STAT_TX_CM_STATE_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_SD_STAT_RX_VALID(x)                 (((x) << 1) & GENMASK(1, 1))
#define HSIO_SD_STAT_RX_VALID_M                  GENMASK(1, 1)
#define HSIO_SD_STAT_RX_VALID_X(x)               (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_SD_STAT_RX_PLL_STATE(x)             ((x) & GENMASK(0, 0))
#define HSIO_SD_STAT_RX_PLL_STATE_M              GENMASK(0, 0)
#define HSIO_SD_STAT_RX_PLL_STATE_X(x)           ((x) & GENMASK(0, 0))

/*      HSIO:SD:CR_ACCESS */
#define HSIO_CR_ACCESS(g)         __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 16, 0, 1, 4)

#define HSIO_CR_ACCESS_WRITE(x)                  (((x) << 19) & GENMASK(19, 19))
#define HSIO_CR_ACCESS_WRITE_M                   GENMASK(19, 19)
#define HSIO_CR_ACCESS_WRITE_X(x)                (((x) & GENMASK(19, 19)) >> 19)

#define HSIO_CR_ACCESS_READ(x)                   (((x) << 18) & GENMASK(18, 18))
#define HSIO_CR_ACCESS_READ_M                    GENMASK(18, 18)
#define HSIO_CR_ACCESS_READ_X(x)                 (((x) & GENMASK(18, 18)) >> 18)

#define HSIO_CR_ACCESS_CAP_DATA(x)               (((x) << 17) & GENMASK(17, 17))
#define HSIO_CR_ACCESS_CAP_DATA_M                GENMASK(17, 17)
#define HSIO_CR_ACCESS_CAP_DATA_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define HSIO_CR_ACCESS_CAP_ADDR(x)               (((x) << 16) & GENMASK(16, 16))
#define HSIO_CR_ACCESS_CAP_ADDR_M                GENMASK(16, 16)
#define HSIO_CR_ACCESS_CAP_ADDR_X(x)             (((x) & GENMASK(16, 16)) >> 16)

#define HSIO_CR_ACCESS_DATA_IN(x)                ((x) & GENMASK(15, 0))
#define HSIO_CR_ACCESS_DATA_IN_M                 GENMASK(15, 0)
#define HSIO_CR_ACCESS_DATA_IN_X(x)              ((x) & GENMASK(15, 0))

/*      HSIO:SD:CR_OUTPUT */
#define HSIO_CR_OUTPUT(g)         __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 20, 0, 1, 4)

#define HSIO_CR_OUTPUT_ACK(x)                    (((x) << 16) & GENMASK(16, 16))
#define HSIO_CR_OUTPUT_ACK_M                     GENMASK(16, 16)
#define HSIO_CR_OUTPUT_ACK_X(x)                  (((x) & GENMASK(16, 16)) >> 16)

#define HSIO_CR_OUTPUT_DATA_OUT(x)               ((x) & GENMASK(15, 0))
#define HSIO_CR_OUTPUT_DATA_OUT_M                GENMASK(15, 0)
#define HSIO_CR_OUTPUT_DATA_OUT_X(x)             ((x) & GENMASK(15, 0))

/*      HSIO:SD:SYNC_ETH_SD_CFG */
#define HSIO_SYNC_ETH_SD_CFG(g)   __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 24, 0, 1, 4)

#define HSIO_SYNC_ETH_SD_CFG_SD_RECO_CLK_DIV(x)  (((x) << 4) & GENMASK(5, 4))
#define HSIO_SYNC_ETH_SD_CFG_SD_RECO_CLK_DIV_M   GENMASK(5, 4)
#define HSIO_SYNC_ETH_SD_CFG_SD_RECO_CLK_DIV_X(x) (((x) & GENMASK(5, 4)) >> 4)

#define HSIO_SYNC_ETH_SD_CFG_SD_LINK_STAT_ENA(x) (((x) << 1) & GENMASK(1, 1))
#define HSIO_SYNC_ETH_SD_CFG_SD_LINK_STAT_ENA_M  GENMASK(1, 1)
#define HSIO_SYNC_ETH_SD_CFG_SD_LINK_STAT_ENA_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_SYNC_ETH_SD_CFG_SD_AUTO_SQUELCH_ENA(x) ((x) & GENMASK(0, 0))
#define HSIO_SYNC_ETH_SD_CFG_SD_AUTO_SQUELCH_ENA_M GENMASK(0, 0)
#define HSIO_SYNC_ETH_SD_CFG_SD_AUTO_SQUELCH_ENA_X(x) ((x) & GENMASK(0, 0))

/*      HSIO:SD:SIGDET_CFG */
#define HSIO_SIGDET_CFG(g)        __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 28, 0, 1, 4)

#define HSIO_SIGDET_CFG_SD_SEL(x)                (((x) << 2) & GENMASK(2, 2))
#define HSIO_SIGDET_CFG_SD_SEL_M                 GENMASK(2, 2)
#define HSIO_SIGDET_CFG_SD_SEL_X(x)              (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_SIGDET_CFG_SD_POL(x)                (((x) << 1) & GENMASK(1, 1))
#define HSIO_SIGDET_CFG_SD_POL_M                 GENMASK(1, 1)
#define HSIO_SIGDET_CFG_SD_POL_X(x)              (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_SIGDET_CFG_SD_ENA(x)                ((x) & GENMASK(0, 0))
#define HSIO_SIGDET_CFG_SD_ENA_M                 GENMASK(0, 0)
#define HSIO_SIGDET_CFG_SD_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      HSIO:HW_CFGSTAT:HW_CFG */
#define HSIO_HW_CFG               __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 0, 0, 1, 4)

#define HSIO_HW_CFG_RGMII_1_CFG(x)               (((x) << 15) & GENMASK(15, 15))
#define HSIO_HW_CFG_RGMII_1_CFG_M                GENMASK(15, 15)
#define HSIO_HW_CFG_RGMII_1_CFG_X(x)             (((x) & GENMASK(15, 15)) >> 15)

#define HSIO_HW_CFG_RGMII_0_CFG(x)               (((x) << 14) & GENMASK(14, 14))
#define HSIO_HW_CFG_RGMII_0_CFG_M                GENMASK(14, 14)
#define HSIO_HW_CFG_RGMII_0_CFG_X(x)             (((x) & GENMASK(14, 14)) >> 14)

#define HSIO_HW_CFG_RGMII_ENA(x)                 (((x) << 12) & GENMASK(13, 12))
#define HSIO_HW_CFG_RGMII_ENA_M                  GENMASK(13, 12)
#define HSIO_HW_CFG_RGMII_ENA_X(x)               (((x) & GENMASK(13, 12)) >> 12)

#define HSIO_HW_CFG_SD6G_0_CFG(x)                (((x) << 11) & GENMASK(11, 11))
#define HSIO_HW_CFG_SD6G_0_CFG_M                 GENMASK(11, 11)
#define HSIO_HW_CFG_SD6G_0_CFG_X(x)              (((x) & GENMASK(11, 11)) >> 11)

#define HSIO_HW_CFG_SD6G_1_CFG(x)                (((x) << 10) & GENMASK(10, 10))
#define HSIO_HW_CFG_SD6G_1_CFG_M                 GENMASK(10, 10)
#define HSIO_HW_CFG_SD6G_1_CFG_X(x)              (((x) & GENMASK(10, 10)) >> 10)

#define HSIO_HW_CFG_GMII_ENA(x)                  (((x) << 2) & GENMASK(9, 2))
#define HSIO_HW_CFG_GMII_ENA_M                   GENMASK(9, 2)
#define HSIO_HW_CFG_GMII_ENA_X(x)                (((x) & GENMASK(9, 2)) >> 2)

#define HSIO_HW_CFG_QSGMII_ENA(x)                ((x) & GENMASK(1, 0))
#define HSIO_HW_CFG_QSGMII_ENA_M                 GENMASK(1, 0)
#define HSIO_HW_CFG_QSGMII_ENA_X(x)              ((x) & GENMASK(1, 0))

/*      HSIO:HW_CFGSTAT:GPIO_PI_CFG */
#define HSIO_GPIO_PI_CFG          __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 4, 0, 1, 4)

#define HSIO_GPIO_PI_CFG_PI_MUX_ENA(x)           ((x) & GENMASK(26, 0))
#define HSIO_GPIO_PI_CFG_PI_MUX_ENA_M            GENMASK(26, 0)
#define HSIO_GPIO_PI_CFG_PI_MUX_ENA_X(x)         ((x) & GENMASK(26, 0))

/*      HSIO:HW_CFGSTAT:QSGMII_CFG */
#define HSIO_QSGMII_CFG           __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 8, 0, 1, 4)

#define HSIO_QSGMII_CFG_SHYST_DIS(x)             (((x) << 4) & GENMASK(4, 4))
#define HSIO_QSGMII_CFG_SHYST_DIS_M              GENMASK(4, 4)
#define HSIO_QSGMII_CFG_SHYST_DIS_X(x)           (((x) & GENMASK(4, 4)) >> 4)

#define HSIO_QSGMII_CFG_E_DET_ENA(x)             (((x) << 3) & GENMASK(3, 3))
#define HSIO_QSGMII_CFG_E_DET_ENA_M              GENMASK(3, 3)
#define HSIO_QSGMII_CFG_E_DET_ENA_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define HSIO_QSGMII_CFG_USE_I1_ENA(x)            (((x) << 2) & GENMASK(2, 2))
#define HSIO_QSGMII_CFG_USE_I1_ENA_M             GENMASK(2, 2)
#define HSIO_QSGMII_CFG_USE_I1_ENA_X(x)          (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_QSGMII_CFG_FLIP_LANES(x)            ((x) & GENMASK(1, 0))
#define HSIO_QSGMII_CFG_FLIP_LANES_M             GENMASK(1, 0)
#define HSIO_QSGMII_CFG_FLIP_LANES_X(x)          ((x) & GENMASK(1, 0))

/*      HSIO:HW_CFGSTAT:QSGMII_STAT */
#define HSIO_QSGMII_STAT(r)       __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 12, r, 2, 4)

#define HSIO_QSGMII_STAT_DELAY_VAR_X200PS(x)     (((x) << 2) & GENMASK(7, 2))
#define HSIO_QSGMII_STAT_DELAY_VAR_X200PS_M      GENMASK(7, 2)
#define HSIO_QSGMII_STAT_DELAY_VAR_X200PS_X(x)   (((x) & GENMASK(7, 2)) >> 2)

#define HSIO_QSGMII_STAT_SYNC(x)                 ((x) & GENMASK(1, 0))
#define HSIO_QSGMII_STAT_SYNC_M                  GENMASK(1, 0)
#define HSIO_QSGMII_STAT_SYNC_X(x)               ((x) & GENMASK(1, 0))

/*      HSIO:HW_CFGSTAT:RGMII_CFG */
#define HSIO_RGMII_CFG(r)         __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 20, r, 2, 4)

#define HSIO_RGMII_CFG_IB_RX_LINK_STATUS(x)      (((x) << 15) & GENMASK(15, 15))
#define HSIO_RGMII_CFG_IB_RX_LINK_STATUS_M       GENMASK(15, 15)
#define HSIO_RGMII_CFG_IB_RX_LINK_STATUS_X(x)    (((x) & GENMASK(15, 15)) >> 15)

#define HSIO_RGMII_CFG_IB_RX_DUPLEX(x)           (((x) << 14) & GENMASK(14, 14))
#define HSIO_RGMII_CFG_IB_RX_DUPLEX_M            GENMASK(14, 14)
#define HSIO_RGMII_CFG_IB_RX_DUPLEX_X(x)         (((x) & GENMASK(14, 14)) >> 14)

#define HSIO_RGMII_CFG_IB_RX_SPEED(x)            (((x) << 12) & GENMASK(13, 12))
#define HSIO_RGMII_CFG_IB_RX_SPEED_M             GENMASK(13, 12)
#define HSIO_RGMII_CFG_IB_RX_SPEED_X(x)          (((x) & GENMASK(13, 12)) >> 12)

#define HSIO_RGMII_CFG_IB_TX_LINK_STATUS(x)      (((x) << 11) & GENMASK(11, 11))
#define HSIO_RGMII_CFG_IB_TX_LINK_STATUS_M       GENMASK(11, 11)
#define HSIO_RGMII_CFG_IB_TX_LINK_STATUS_X(x)    (((x) & GENMASK(11, 11)) >> 11)

#define HSIO_RGMII_CFG_IB_TX_FDX(x)              (((x) << 10) & GENMASK(10, 10))
#define HSIO_RGMII_CFG_IB_TX_FDX_M               GENMASK(10, 10)
#define HSIO_RGMII_CFG_IB_TX_FDX_X(x)            (((x) & GENMASK(10, 10)) >> 10)

#define HSIO_RGMII_CFG_IB_TX_MII_SPD(x)          (((x) << 9) & GENMASK(9, 9))
#define HSIO_RGMII_CFG_IB_TX_MII_SPD_M           GENMASK(9, 9)
#define HSIO_RGMII_CFG_IB_TX_MII_SPD_X(x)        (((x) & GENMASK(9, 9)) >> 9)

#define HSIO_RGMII_CFG_IB_TX_SPD_1G(x)           (((x) << 8) & GENMASK(8, 8))
#define HSIO_RGMII_CFG_IB_TX_SPD_1G_M            GENMASK(8, 8)
#define HSIO_RGMII_CFG_IB_TX_SPD_1G_X(x)         (((x) & GENMASK(8, 8)) >> 8)

#define HSIO_RGMII_CFG_IB_TX_ENA(x)              (((x) << 7) & GENMASK(7, 7))
#define HSIO_RGMII_CFG_IB_TX_ENA_M               GENMASK(7, 7)
#define HSIO_RGMII_CFG_IB_TX_ENA_X(x)            (((x) & GENMASK(7, 7)) >> 7)

#define HSIO_RGMII_CFG_IB_RX_ENA(x)              (((x) << 6) & GENMASK(6, 6))
#define HSIO_RGMII_CFG_IB_RX_ENA_M               GENMASK(6, 6)
#define HSIO_RGMII_CFG_IB_RX_ENA_X(x)            (((x) & GENMASK(6, 6)) >> 6)

#define HSIO_RGMII_CFG_IB_ENA(x)                 (((x) << 5) & GENMASK(5, 5))
#define HSIO_RGMII_CFG_IB_ENA_M                  GENMASK(5, 5)
#define HSIO_RGMII_CFG_IB_ENA_X(x)               (((x) & GENMASK(5, 5)) >> 5)

#define HSIO_RGMII_CFG_TX_CLK_CFG(x)             (((x) << 2) & GENMASK(4, 2))
#define HSIO_RGMII_CFG_TX_CLK_CFG_M              GENMASK(4, 2)
#define HSIO_RGMII_CFG_TX_CLK_CFG_X(x)           (((x) & GENMASK(4, 2)) >> 2)

#define HSIO_RGMII_CFG_RGMII_TX_RST(x)           (((x) << 1) & GENMASK(1, 1))
#define HSIO_RGMII_CFG_RGMII_TX_RST_M            GENMASK(1, 1)
#define HSIO_RGMII_CFG_RGMII_TX_RST_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_RGMII_CFG_RGMII_RX_RST(x)           ((x) & GENMASK(0, 0))
#define HSIO_RGMII_CFG_RGMII_RX_RST_M            GENMASK(0, 0)
#define HSIO_RGMII_CFG_RGMII_RX_RST_X(x)         ((x) & GENMASK(0, 0))

/*      HSIO:HW_CFGSTAT:RMII_CFG */
#define HSIO_RMII_CFG(r)          __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 28, r, 2, 4)

#define HSIO_RMII_CFG_REF_CLK_SEL(x)             (((x) << 6) & GENMASK(6, 6))
#define HSIO_RMII_CFG_REF_CLK_SEL_M              GENMASK(6, 6)
#define HSIO_RMII_CFG_REF_CLK_SEL_X(x)           (((x) & GENMASK(6, 6)) >> 6)

#define HSIO_RMII_CFG_CFG_TX_EDGE(x)             (((x) << 5) & GENMASK(5, 5))
#define HSIO_RMII_CFG_CFG_TX_EDGE_M              GENMASK(5, 5)
#define HSIO_RMII_CFG_CFG_TX_EDGE_X(x)           (((x) & GENMASK(5, 5)) >> 5)

#define HSIO_RMII_CFG_FDX_CFG(x)                 (((x) << 4) & GENMASK(4, 4))
#define HSIO_RMII_CFG_FDX_CFG_M                  GENMASK(4, 4)
#define HSIO_RMII_CFG_FDX_CFG_X(x)               (((x) & GENMASK(4, 4)) >> 4)

#define HSIO_RMII_CFG_SPEED_CFG(x)               (((x) << 3) & GENMASK(3, 3))
#define HSIO_RMII_CFG_SPEED_CFG_M                GENMASK(3, 3)
#define HSIO_RMII_CFG_SPEED_CFG_X(x)             (((x) & GENMASK(3, 3)) >> 3)

#define HSIO_RMII_CFG_RMII_TX_RST(x)             (((x) << 2) & GENMASK(2, 2))
#define HSIO_RMII_CFG_RMII_TX_RST_M              GENMASK(2, 2)
#define HSIO_RMII_CFG_RMII_TX_RST_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_RMII_CFG_RMII_RX_RST(x)             (((x) << 1) & GENMASK(1, 1))
#define HSIO_RMII_CFG_RMII_RX_RST_M              GENMASK(1, 1)
#define HSIO_RMII_CFG_RMII_RX_RST_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_RMII_CFG_RMII_ENA(x)                ((x) & GENMASK(0, 0))
#define HSIO_RMII_CFG_RMII_ENA_M                 GENMASK(0, 0)
#define HSIO_RMII_CFG_RMII_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      HSIO:HW_CFGSTAT:DLL_CFG */
#define HSIO_DLL_CFG(r)           __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 36, r, 4, 4)

#define HSIO_DLL_CFG_DLL_CLK_ENA(x)              (((x) << 20) & GENMASK(20, 20))
#define HSIO_DLL_CFG_DLL_CLK_ENA_M               GENMASK(20, 20)
#define HSIO_DLL_CFG_DLL_CLK_ENA_X(x)            (((x) & GENMASK(20, 20)) >> 20)

#define HSIO_DLL_CFG_BIST_PASS(x)                (((x) << 19) & GENMASK(19, 19))
#define HSIO_DLL_CFG_BIST_PASS_M                 GENMASK(19, 19)
#define HSIO_DLL_CFG_BIST_PASS_X(x)              (((x) & GENMASK(19, 19)) >> 19)

#define HSIO_DLL_CFG_BIST_END(x)                 (((x) << 18) & GENMASK(18, 18))
#define HSIO_DLL_CFG_BIST_END_M                  GENMASK(18, 18)
#define HSIO_DLL_CFG_BIST_END_X(x)               (((x) & GENMASK(18, 18)) >> 18)

#define HSIO_DLL_CFG_BIST_START(x)               (((x) << 17) & GENMASK(17, 17))
#define HSIO_DLL_CFG_BIST_START_M                GENMASK(17, 17)
#define HSIO_DLL_CFG_BIST_START_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define HSIO_DLL_CFG_TAP_SEL(x)                  (((x) << 10) & GENMASK(16, 10))
#define HSIO_DLL_CFG_TAP_SEL_M                   GENMASK(16, 10)
#define HSIO_DLL_CFG_TAP_SEL_X(x)                (((x) & GENMASK(16, 10)) >> 10)

#define HSIO_DLL_CFG_TAP_ADJ(x)                  (((x) << 3) & GENMASK(9, 3))
#define HSIO_DLL_CFG_TAP_ADJ_M                   GENMASK(9, 3)
#define HSIO_DLL_CFG_TAP_ADJ_X(x)                (((x) & GENMASK(9, 3)) >> 3)

#define HSIO_DLL_CFG_DELAY_ENA(x)                (((x) << 2) & GENMASK(2, 2))
#define HSIO_DLL_CFG_DELAY_ENA_M                 GENMASK(2, 2)
#define HSIO_DLL_CFG_DELAY_ENA_X(x)              (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_DLL_CFG_DLL_ENA(x)                  (((x) << 1) & GENMASK(1, 1))
#define HSIO_DLL_CFG_DLL_ENA_M                   GENMASK(1, 1)
#define HSIO_DLL_CFG_DLL_ENA_X(x)                (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_DLL_CFG_DLL_RST(x)                  ((x) & GENMASK(0, 0))
#define HSIO_DLL_CFG_DLL_RST_M                   GENMASK(0, 0)
#define HSIO_DLL_CFG_DLL_RST_X(x)                ((x) & GENMASK(0, 0))

/*      MEP:COMMON:MEP_CTRL */
#define MEP_MEP_CTRL              __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 0, 0, 1, 4)

#define MEP_MEP_CTRL_LOC_SCAN_ENA(x)             (((x) << 1) & GENMASK(1, 1))
#define MEP_MEP_CTRL_LOC_SCAN_ENA_M              GENMASK(1, 1)
#define MEP_MEP_CTRL_LOC_SCAN_ENA_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MEP_CTRL_MEP_ENA(x)                  ((x) & GENMASK(0, 0))
#define MEP_MEP_CTRL_MEP_ENA_M                   GENMASK(0, 0)
#define MEP_MEP_CTRL_MEP_ENA_X(x)                ((x) & GENMASK(0, 0))

/*      MEP:COMMON:CPU_MASK_CFG */
#define MEP_CPU_MASK_CFG          __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 4, 0, 1, 4)

#define MEP_CPU_MASK_CFG_EXT_CPU_PORTMASK(x)     ((x) & GENMASK(7, 0))
#define MEP_CPU_MASK_CFG_EXT_CPU_PORTMASK_M      GENMASK(7, 0)
#define MEP_CPU_MASK_CFG_EXT_CPU_PORTMASK_X(x)   ((x) & GENMASK(7, 0))

/*      MEP:COMMON:CPU_CFG */
#define MEP_CPU_CFG               __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 8, 0, 1, 4)

#define MEP_CPU_CFG_DEF_EXT_PORT_ENA(x)          (((x) << 31) & GENMASK(31, 31))
#define MEP_CPU_CFG_DEF_EXT_PORT_ENA_M           GENMASK(31, 31)
#define MEP_CPU_CFG_DEF_EXT_PORT_ENA_X(x)        (((x) & GENMASK(31, 31)) >> 31)

#define MEP_CPU_CFG_DEF_COPY_QU(x)               (((x) << 24) & GENMASK(26, 24))
#define MEP_CPU_CFG_DEF_COPY_QU_M                GENMASK(26, 24)
#define MEP_CPU_CFG_DEF_COPY_QU_X(x)             (((x) & GENMASK(26, 24)) >> 24)

#define MEP_CPU_CFG_CPU_ERR_EXT_PORT_ENA(x)      (((x) << 23) & GENMASK(23, 23))
#define MEP_CPU_CFG_CPU_ERR_EXT_PORT_ENA_M       GENMASK(23, 23)
#define MEP_CPU_CFG_CPU_ERR_EXT_PORT_ENA_X(x)    (((x) & GENMASK(23, 23)) >> 23)

#define MEP_CPU_CFG_CPU_ERR_QU(x)                (((x) << 16) & GENMASK(18, 16))
#define MEP_CPU_CFG_CPU_ERR_QU_M                 GENMASK(18, 16)
#define MEP_CPU_CFG_CPU_ERR_QU_X(x)              (((x) & GENMASK(18, 16)) >> 16)

#define MEP_CPU_CFG_LBR_EXT_PORT_ENA(x)          (((x) << 15) & GENMASK(15, 15))
#define MEP_CPU_CFG_LBR_EXT_PORT_ENA_M           GENMASK(15, 15)
#define MEP_CPU_CFG_LBR_EXT_PORT_ENA_X(x)        (((x) & GENMASK(15, 15)) >> 15)

#define MEP_CPU_CFG_LBR_CPU_QU(x)                (((x) << 8) & GENMASK(10, 8))
#define MEP_CPU_CFG_LBR_CPU_QU_M                 GENMASK(10, 8)
#define MEP_CPU_CFG_LBR_CPU_QU_X(x)              (((x) & GENMASK(10, 8)) >> 8)

#define MEP_CPU_CFG_LBM_EXT_PORT_ENA(x)          (((x) << 7) & GENMASK(7, 7))
#define MEP_CPU_CFG_LBM_EXT_PORT_ENA_M           GENMASK(7, 7)
#define MEP_CPU_CFG_LBM_EXT_PORT_ENA_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define MEP_CPU_CFG_LBM_CPU_QU(x)                ((x) & GENMASK(2, 0))
#define MEP_CPU_CFG_LBM_CPU_QU_M                 GENMASK(2, 0)
#define MEP_CPU_CFG_LBM_CPU_QU_X(x)              ((x) & GENMASK(2, 0))

/*      MEP:COMMON:CPU_CFG_1 */
#define MEP_CPU_CFG_1             __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 12, 0, 1, 4)

#define MEP_CPU_CFG_1_LT_EXT_PORT_ENA(x)         (((x) << 15) & GENMASK(15, 15))
#define MEP_CPU_CFG_1_LT_EXT_PORT_ENA_M          GENMASK(15, 15)
#define MEP_CPU_CFG_1_LT_EXT_PORT_ENA_X(x)       (((x) & GENMASK(15, 15)) >> 15)

#define MEP_CPU_CFG_1_LT_CPU_QU(x)               (((x) << 8) & GENMASK(10, 8))
#define MEP_CPU_CFG_1_LT_CPU_QU_M                GENMASK(10, 8)
#define MEP_CPU_CFG_1_LT_CPU_QU_X(x)             (((x) & GENMASK(10, 8)) >> 8)

#define MEP_CPU_CFG_1_CCM_EXT_PORT_ENA(x)        (((x) << 7) & GENMASK(7, 7))
#define MEP_CPU_CFG_1_CCM_EXT_PORT_ENA_M         GENMASK(7, 7)
#define MEP_CPU_CFG_1_CCM_EXT_PORT_ENA_X(x)      (((x) & GENMASK(7, 7)) >> 7)

#define MEP_CPU_CFG_1_CCM_CPU_QU(x)              ((x) & GENMASK(2, 0))
#define MEP_CPU_CFG_1_CCM_CPU_QU_M               GENMASK(2, 0)
#define MEP_CPU_CFG_1_CCM_CPU_QU_X(x)            ((x) & GENMASK(2, 0))

/*      MEP:COMMON:MRP_CPU_CFG */
#define MEP_MRP_CPU_CFG           __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 16, 0, 1, 4)

#define MEP_MRP_CPU_CFG_REM_CPU_QU(x)            (((x) << 18) & GENMASK(20, 18))
#define MEP_MRP_CPU_CFG_REM_CPU_QU_M             GENMASK(20, 18)
#define MEP_MRP_CPU_CFG_REM_CPU_QU_X(x)          (((x) & GENMASK(20, 18)) >> 18)

#define MEP_MRP_CPU_CFG_OWN_CPU_QU(x)            (((x) << 15) & GENMASK(17, 15))
#define MEP_MRP_CPU_CFG_OWN_CPU_QU_M             GENMASK(17, 15)
#define MEP_MRP_CPU_CFG_OWN_CPU_QU_X(x)          (((x) & GENMASK(17, 15)) >> 15)

#define MEP_MRP_CPU_CFG_MRP_OTHER_CPU_QU(x)      (((x) << 12) & GENMASK(14, 12))
#define MEP_MRP_CPU_CFG_MRP_OTHER_CPU_QU_M       GENMASK(14, 12)
#define MEP_MRP_CPU_CFG_MRP_OTHER_CPU_QU_X(x)    (((x) & GENMASK(14, 12)) >> 12)

#define MEP_MRP_CPU_CFG_MRP_TST_CPU_QU(x)        (((x) << 9) & GENMASK(11, 9))
#define MEP_MRP_CPU_CFG_MRP_TST_CPU_QU_M         GENMASK(11, 9)
#define MEP_MRP_CPU_CFG_MRP_TST_CPU_QU_X(x)      (((x) & GENMASK(11, 9)) >> 9)

#define MEP_MRP_CPU_CFG_MRP_CTRL_CPU_QU(x)       (((x) << 6) & GENMASK(8, 6))
#define MEP_MRP_CPU_CFG_MRP_CTRL_CPU_QU_M        GENMASK(8, 6)
#define MEP_MRP_CPU_CFG_MRP_CTRL_CPU_QU_X(x)     (((x) & GENMASK(8, 6)) >> 6)

#define MEP_MRP_CPU_CFG_MRP_ITST_CPU_QU(x)       (((x) << 3) & GENMASK(5, 3))
#define MEP_MRP_CPU_CFG_MRP_ITST_CPU_QU_M        GENMASK(5, 3)
#define MEP_MRP_CPU_CFG_MRP_ITST_CPU_QU_X(x)     (((x) & GENMASK(5, 3)) >> 3)

#define MEP_MRP_CPU_CFG_MRP_ICTRL_CPU_QU(x)      ((x) & GENMASK(2, 0))
#define MEP_MRP_CPU_CFG_MRP_ICTRL_CPU_QU_M       GENMASK(2, 0)
#define MEP_MRP_CPU_CFG_MRP_ICTRL_CPU_QU_X(x)    ((x) & GENMASK(2, 0))

/*      MEP:COMMON:DLR_CPU_CFG */
#define MEP_DLR_CPU_CFG           __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 20, 0, 1, 4)

#define MEP_DLR_CPU_CFG_NEW_CPU_QU(x)            (((x) << 12) & GENMASK(14, 12))
#define MEP_DLR_CPU_CFG_NEW_CPU_QU_M             GENMASK(14, 12)
#define MEP_DLR_CPU_CFG_NEW_CPU_QU_X(x)          (((x) & GENMASK(14, 12)) >> 12)

#define MEP_DLR_CPU_CFG_ACT_CPU_QU(x)            (((x) << 9) & GENMASK(11, 9))
#define MEP_DLR_CPU_CFG_ACT_CPU_QU_M             GENMASK(11, 9)
#define MEP_DLR_CPU_CFG_ACT_CPU_QU_X(x)          (((x) & GENMASK(11, 9)) >> 9)

#define MEP_DLR_CPU_CFG_DLR_ADV_CPU_QU(x)        (((x) << 6) & GENMASK(8, 6))
#define MEP_DLR_CPU_CFG_DLR_ADV_CPU_QU_M         GENMASK(8, 6)
#define MEP_DLR_CPU_CFG_DLR_ADV_CPU_QU_X(x)      (((x) & GENMASK(8, 6)) >> 6)

#define MEP_DLR_CPU_CFG_DLR_BCN_CPU_QU(x)        (((x) << 3) & GENMASK(5, 3))
#define MEP_DLR_CPU_CFG_DLR_BCN_CPU_QU_M         GENMASK(5, 3)
#define MEP_DLR_CPU_CFG_DLR_BCN_CPU_QU_X(x)      (((x) & GENMASK(5, 3)) >> 3)

#define MEP_DLR_CPU_CFG_DLR_OTHER_CPU_QU(x)      ((x) & GENMASK(2, 0))
#define MEP_DLR_CPU_CFG_DLR_OTHER_CPU_QU_M       GENMASK(2, 0)
#define MEP_DLR_CPU_CFG_DLR_OTHER_CPU_QU_X(x)    ((x) & GENMASK(2, 0))

/*      MEP:COMMON:GENERIC_CFG */
#define MEP_GENERIC_CFG(r)        __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 24, r, 8, 4)

#define MEP_GENERIC_CFG_DMAC_CHK_DIS(x)          (((x) << 17) & GENMASK(17, 17))
#define MEP_GENERIC_CFG_DMAC_CHK_DIS_M           GENMASK(17, 17)
#define MEP_GENERIC_CFG_DMAC_CHK_DIS_X(x)        (((x) & GENMASK(17, 17)) >> 17)

#define MEP_GENERIC_CFG_OPC_EXT_PORT_ENA(x)      (((x) << 16) & GENMASK(16, 16))
#define MEP_GENERIC_CFG_OPC_EXT_PORT_ENA_M       GENMASK(16, 16)
#define MEP_GENERIC_CFG_OPC_EXT_PORT_ENA_X(x)    (((x) & GENMASK(16, 16)) >> 16)

#define MEP_GENERIC_CFG_OPC_CPU_QU(x)            (((x) << 8) & GENMASK(10, 8))
#define MEP_GENERIC_CFG_OPC_CPU_QU_M             GENMASK(10, 8)
#define MEP_GENERIC_CFG_OPC_CPU_QU_X(x)          (((x) & GENMASK(10, 8)) >> 8)

#define MEP_GENERIC_CFG_OPC_VAL(x)               ((x) & GENMASK(7, 0))
#define MEP_GENERIC_CFG_OPC_VAL_M                GENMASK(7, 0)
#define MEP_GENERIC_CFG_OPC_VAL_X(x)             ((x) & GENMASK(7, 0))

/*      MEP:COMMON:LOC_PERIOD_CFG */
#define MEP_LOC_PERIOD_CFG(r)     __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 56, r, 10, 4)

/*      MEP:COMMON:LOC_CTRL */
#define MEP_LOC_CTRL              __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 96, 0, 1, 4)

#define MEP_LOC_CTRL_BASE_TICK_CNT(x)            (((x) << 24) & GENMASK(31, 24))
#define MEP_LOC_CTRL_BASE_TICK_CNT_M             GENMASK(31, 24)
#define MEP_LOC_CTRL_BASE_TICK_CNT_X(x)          (((x) & GENMASK(31, 24)) >> 24)

#define MEP_LOC_CTRL_BETWEEN_ENTRY_SCAN(x)       (((x) << 16) & GENMASK(23, 16))
#define MEP_LOC_CTRL_BETWEEN_ENTRY_SCAN_M        GENMASK(23, 16)
#define MEP_LOC_CTRL_BETWEEN_ENTRY_SCAN_X(x)     (((x) & GENMASK(23, 16)) >> 16)

#define MEP_LOC_CTRL_FORCE_HW_SCAN_ENA(x)        (((x) << 4) & GENMASK(13, 4))
#define MEP_LOC_CTRL_FORCE_HW_SCAN_ENA_M         GENMASK(13, 4)
#define MEP_LOC_CTRL_FORCE_HW_SCAN_ENA_X(x)      (((x) & GENMASK(13, 4)) >> 4)

#define MEP_LOC_CTRL_FORCE_HW_SCAN_STOP_ENA(x)   ((x) & GENMASK(0, 0))
#define MEP_LOC_CTRL_FORCE_HW_SCAN_STOP_ENA_M    GENMASK(0, 0)
#define MEP_LOC_CTRL_FORCE_HW_SCAN_STOP_ENA_X(x) ((x) & GENMASK(0, 0))

/*      MEP:COMMON:LOC_SCAN_STICKY */
#define MEP_LOC_SCAN_STICKY       __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 100, 0, 1, 4)

#define MEP_LOC_SCAN_STICKY_ONGOING_STATUS(x)    (((x) << 16) & GENMASK(25, 16))
#define MEP_LOC_SCAN_STICKY_ONGOING_STATUS_M     GENMASK(25, 16)
#define MEP_LOC_SCAN_STICKY_ONGOING_STATUS_X(x)  (((x) & GENMASK(25, 16)) >> 16)

#define MEP_LOC_SCAN_STICKY_COMPLETED_STICKY(x)  (((x) << 2) & GENMASK(2, 2))
#define MEP_LOC_SCAN_STICKY_COMPLETED_STICKY_M   GENMASK(2, 2)
#define MEP_LOC_SCAN_STICKY_COMPLETED_STICKY_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define MEP_LOC_SCAN_STICKY_STARTED_STICKY(x)    (((x) << 1) & GENMASK(1, 1))
#define MEP_LOC_SCAN_STICKY_STARTED_STICKY_M     GENMASK(1, 1)
#define MEP_LOC_SCAN_STICKY_STARTED_STICKY_X(x)  (((x) & GENMASK(1, 1)) >> 1)

#define MEP_LOC_SCAN_STICKY_START_DELAYED_STICKY(x) ((x) & GENMASK(0, 0))
#define MEP_LOC_SCAN_STICKY_START_DELAYED_STICKY_M GENMASK(0, 0)
#define MEP_LOC_SCAN_STICKY_START_DELAYED_STICKY_X(x) ((x) & GENMASK(0, 0))

/*      MEP:COMMON:INTR_CTRL */
#define MEP_INTR_CTRL             __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 104, 0, 1, 4)

#define MEP_INTR_CTRL_OAM_MEP_INTR_ENA(x)        (((x) << 25) & GENMASK(25, 25))
#define MEP_INTR_CTRL_OAM_MEP_INTR_ENA_M         GENMASK(25, 25)
#define MEP_INTR_CTRL_OAM_MEP_INTR_ENA_X(x)      (((x) & GENMASK(25, 25)) >> 25)

#define MEP_INTR_CTRL_OAM_MEP_INTR(x)            (((x) << 8) & GENMASK(8, 8))
#define MEP_INTR_CTRL_OAM_MEP_INTR_M             GENMASK(8, 8)
#define MEP_INTR_CTRL_OAM_MEP_INTR_X(x)          (((x) & GENMASK(8, 8)) >> 8)

/*      MEP:COMMON:INTR */
#define MEP_INTR                  __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 108, 0, 1, 4)

#define MEP_INTR_CCM_INTR(x)                     (((x) << 16) & GENMASK(23, 16))
#define MEP_INTR_CCM_INTR_M                      GENMASK(23, 16)
#define MEP_INTR_CCM_INTR_X(x)                   (((x) & GENMASK(23, 16)) >> 16)

#define MEP_INTR_MRP_INTR(x)                     (((x) << 8) & GENMASK(15, 8))
#define MEP_INTR_MRP_INTR_M                      GENMASK(15, 8)
#define MEP_INTR_MRP_INTR_X(x)                   (((x) & GENMASK(15, 8)) >> 8)

#define MEP_INTR_DLR_INTR(x)                     ((x) & GENMASK(7, 0))
#define MEP_INTR_DLR_INTR_M                      GENMASK(7, 0)
#define MEP_INTR_DLR_INTR_X(x)                   ((x) & GENMASK(7, 0))

/*      MEP:COMMON:VOE_CNT_CTRL */
#define MEP_VOE_CNT_CTRL(r)       __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 112, r, 8, 4)

#define MEP_VOE_CNT_CTRL_CNT_YELLOW_ENA(x)       (((x) << 8) & GENMASK(8, 8))
#define MEP_VOE_CNT_CTRL_CNT_YELLOW_ENA_M        GENMASK(8, 8)
#define MEP_VOE_CNT_CTRL_CNT_YELLOW_ENA_X(x)     (((x) & GENMASK(8, 8)) >> 8)

#define MEP_VOE_CNT_CTRL_PRIO_CNT_MASK(x)        ((x) & GENMASK(7, 0))
#define MEP_VOE_CNT_CTRL_PRIO_CNT_MASK_M         GENMASK(7, 0)
#define MEP_VOE_CNT_CTRL_PRIO_CNT_MASK_X(x)      ((x) & GENMASK(7, 0))

/*      MEP:COMMON:MC_MAC_LSB */
#define MEP_MC_MAC_LSB            __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 144, 0, 1, 4)

#define MEP_MC_MAC_LSB_MEP_MC_MAC_LSB(x)         (((x) << 3) & GENMASK(30, 3))
#define MEP_MC_MAC_LSB_MEP_MC_MAC_LSB_M          GENMASK(30, 3)
#define MEP_MC_MAC_LSB_MEP_MC_MAC_LSB_X(x)       (((x) & GENMASK(30, 3)) >> 3)

/*      MEP:COMMON:MC_MAC_MSB */
#define MEP_MC_MAC_MSB            __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 148, 0, 1, 4)

#define MEP_MC_MAC_MSB_MEP_MC_MAC_MSB(x)         ((x) & GENMASK(15, 0))
#define MEP_MC_MAC_MSB_MEP_MC_MAC_MSB_M          GENMASK(15, 0)
#define MEP_MC_MAC_MSB_MEP_MC_MAC_MSB_X(x)       ((x) & GENMASK(15, 0))

/*      MEP:COMMON:MEL_FILTERING_CFG */
#define MEP_MEL_FILTERING_CFG(r)  __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 152, r, 8, 4)

#define MEP_MEL_FILTERING_CFG_MEL_PORTMASK(x)    ((x) & GENMASK(7, 0))
#define MEP_MEL_FILTERING_CFG_MEL_PORTMASK_M     GENMASK(7, 0)
#define MEP_MEL_FILTERING_CFG_MEL_PORTMASK_X(x)  ((x) & GENMASK(7, 0))

/*      MEP:COMMON:TICK_CFG */
#define MEP_TICK_CFG              __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 184, 0, 1, 4)

#define MEP_TICK_CFG_TICK_CNT(x)                 ((x) & GENMASK(17, 0))
#define MEP_TICK_CFG_TICK_CNT_M                  GENMASK(17, 0)
#define MEP_TICK_CFG_TICK_CNT_X(x)               ((x) & GENMASK(17, 0))

/*      MEP:COMMON:MRP_RX_TS_CFG */
#define MEP_MRP_RX_TS_CFG         __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 188, 0, 1, 4)

/*      MEP:COMMON:DBG_STICKY */
#define MEP_DBG_STICKY            __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 192, 0, 1, 4)

#define MEP_DBG_STICKY_ST00(x)                   (((x) << 31) & GENMASK(31, 31))
#define MEP_DBG_STICKY_ST00_M                    GENMASK(31, 31)
#define MEP_DBG_STICKY_ST00_X(x)                 (((x) & GENMASK(31, 31)) >> 31)

#define MEP_DBG_STICKY_ST01(x)                   (((x) << 30) & GENMASK(30, 30))
#define MEP_DBG_STICKY_ST01_M                    GENMASK(30, 30)
#define MEP_DBG_STICKY_ST01_X(x)                 (((x) & GENMASK(30, 30)) >> 30)

#define MEP_DBG_STICKY_ST02(x)                   (((x) << 29) & GENMASK(29, 29))
#define MEP_DBG_STICKY_ST02_M                    GENMASK(29, 29)
#define MEP_DBG_STICKY_ST02_X(x)                 (((x) & GENMASK(29, 29)) >> 29)

#define MEP_DBG_STICKY_ST03(x)                   (((x) << 28) & GENMASK(28, 28))
#define MEP_DBG_STICKY_ST03_M                    GENMASK(28, 28)
#define MEP_DBG_STICKY_ST03_X(x)                 (((x) & GENMASK(28, 28)) >> 28)

#define MEP_DBG_STICKY_ST04(x)                   (((x) << 27) & GENMASK(27, 27))
#define MEP_DBG_STICKY_ST04_M                    GENMASK(27, 27)
#define MEP_DBG_STICKY_ST04_X(x)                 (((x) & GENMASK(27, 27)) >> 27)

#define MEP_DBG_STICKY_ST05(x)                   (((x) << 26) & GENMASK(26, 26))
#define MEP_DBG_STICKY_ST05_M                    GENMASK(26, 26)
#define MEP_DBG_STICKY_ST05_X(x)                 (((x) & GENMASK(26, 26)) >> 26)

#define MEP_DBG_STICKY_ST06(x)                   (((x) << 25) & GENMASK(25, 25))
#define MEP_DBG_STICKY_ST06_M                    GENMASK(25, 25)
#define MEP_DBG_STICKY_ST06_X(x)                 (((x) & GENMASK(25, 25)) >> 25)

#define MEP_DBG_STICKY_ST07(x)                   (((x) << 24) & GENMASK(24, 24))
#define MEP_DBG_STICKY_ST07_M                    GENMASK(24, 24)
#define MEP_DBG_STICKY_ST07_X(x)                 (((x) & GENMASK(24, 24)) >> 24)

#define MEP_DBG_STICKY_ST08(x)                   (((x) << 23) & GENMASK(23, 23))
#define MEP_DBG_STICKY_ST08_M                    GENMASK(23, 23)
#define MEP_DBG_STICKY_ST08_X(x)                 (((x) & GENMASK(23, 23)) >> 23)

#define MEP_DBG_STICKY_ST09(x)                   (((x) << 22) & GENMASK(22, 22))
#define MEP_DBG_STICKY_ST09_M                    GENMASK(22, 22)
#define MEP_DBG_STICKY_ST09_X(x)                 (((x) & GENMASK(22, 22)) >> 22)

#define MEP_DBG_STICKY_ST10(x)                   (((x) << 21) & GENMASK(21, 21))
#define MEP_DBG_STICKY_ST10_M                    GENMASK(21, 21)
#define MEP_DBG_STICKY_ST10_X(x)                 (((x) & GENMASK(21, 21)) >> 21)

#define MEP_DBG_STICKY_ST11(x)                   (((x) << 20) & GENMASK(20, 20))
#define MEP_DBG_STICKY_ST11_M                    GENMASK(20, 20)
#define MEP_DBG_STICKY_ST11_X(x)                 (((x) & GENMASK(20, 20)) >> 20)

#define MEP_DBG_STICKY_ST12(x)                   (((x) << 19) & GENMASK(19, 19))
#define MEP_DBG_STICKY_ST12_M                    GENMASK(19, 19)
#define MEP_DBG_STICKY_ST12_X(x)                 (((x) & GENMASK(19, 19)) >> 19)

#define MEP_DBG_STICKY_ST13(x)                   (((x) << 18) & GENMASK(18, 18))
#define MEP_DBG_STICKY_ST13_M                    GENMASK(18, 18)
#define MEP_DBG_STICKY_ST13_X(x)                 (((x) & GENMASK(18, 18)) >> 18)

#define MEP_DBG_STICKY_ST14(x)                   (((x) << 17) & GENMASK(17, 17))
#define MEP_DBG_STICKY_ST14_M                    GENMASK(17, 17)
#define MEP_DBG_STICKY_ST14_X(x)                 (((x) & GENMASK(17, 17)) >> 17)

#define MEP_DBG_STICKY_ST15(x)                   (((x) << 16) & GENMASK(16, 16))
#define MEP_DBG_STICKY_ST15_M                    GENMASK(16, 16)
#define MEP_DBG_STICKY_ST15_X(x)                 (((x) & GENMASK(16, 16)) >> 16)

#define MEP_DBG_STICKY_ST16(x)                   (((x) << 15) & GENMASK(15, 15))
#define MEP_DBG_STICKY_ST16_M                    GENMASK(15, 15)
#define MEP_DBG_STICKY_ST16_X(x)                 (((x) & GENMASK(15, 15)) >> 15)

#define MEP_DBG_STICKY_ST17(x)                   (((x) << 14) & GENMASK(14, 14))
#define MEP_DBG_STICKY_ST17_M                    GENMASK(14, 14)
#define MEP_DBG_STICKY_ST17_X(x)                 (((x) & GENMASK(14, 14)) >> 14)

#define MEP_DBG_STICKY_ST18(x)                   (((x) << 13) & GENMASK(13, 13))
#define MEP_DBG_STICKY_ST18_M                    GENMASK(13, 13)
#define MEP_DBG_STICKY_ST18_X(x)                 (((x) & GENMASK(13, 13)) >> 13)

#define MEP_DBG_STICKY_ST19(x)                   (((x) << 12) & GENMASK(12, 12))
#define MEP_DBG_STICKY_ST19_M                    GENMASK(12, 12)
#define MEP_DBG_STICKY_ST19_X(x)                 (((x) & GENMASK(12, 12)) >> 12)

#define MEP_DBG_STICKY_ST20(x)                   (((x) << 11) & GENMASK(11, 11))
#define MEP_DBG_STICKY_ST20_M                    GENMASK(11, 11)
#define MEP_DBG_STICKY_ST20_X(x)                 (((x) & GENMASK(11, 11)) >> 11)

#define MEP_DBG_STICKY_ST21(x)                   (((x) << 10) & GENMASK(10, 10))
#define MEP_DBG_STICKY_ST21_M                    GENMASK(10, 10)
#define MEP_DBG_STICKY_ST21_X(x)                 (((x) & GENMASK(10, 10)) >> 10)

#define MEP_DBG_STICKY_ST22(x)                   (((x) << 9) & GENMASK(9, 9))
#define MEP_DBG_STICKY_ST22_M                    GENMASK(9, 9)
#define MEP_DBG_STICKY_ST22_X(x)                 (((x) & GENMASK(9, 9)) >> 9)

#define MEP_DBG_STICKY_ST23(x)                   (((x) << 8) & GENMASK(8, 8))
#define MEP_DBG_STICKY_ST23_M                    GENMASK(8, 8)
#define MEP_DBG_STICKY_ST23_X(x)                 (((x) & GENMASK(8, 8)) >> 8)

#define MEP_DBG_STICKY_ST24(x)                   (((x) << 7) & GENMASK(7, 7))
#define MEP_DBG_STICKY_ST24_M                    GENMASK(7, 7)
#define MEP_DBG_STICKY_ST24_X(x)                 (((x) & GENMASK(7, 7)) >> 7)

#define MEP_DBG_STICKY_ST25(x)                   (((x) << 6) & GENMASK(6, 6))
#define MEP_DBG_STICKY_ST25_M                    GENMASK(6, 6)
#define MEP_DBG_STICKY_ST25_X(x)                 (((x) & GENMASK(6, 6)) >> 6)

#define MEP_DBG_STICKY_ST26(x)                   (((x) << 5) & GENMASK(5, 5))
#define MEP_DBG_STICKY_ST26_M                    GENMASK(5, 5)
#define MEP_DBG_STICKY_ST26_X(x)                 (((x) & GENMASK(5, 5)) >> 5)

#define MEP_DBG_STICKY_ST27(x)                   (((x) << 4) & GENMASK(4, 4))
#define MEP_DBG_STICKY_ST27_M                    GENMASK(4, 4)
#define MEP_DBG_STICKY_ST27_X(x)                 (((x) & GENMASK(4, 4)) >> 4)

#define MEP_DBG_STICKY_ST28(x)                   (((x) << 3) & GENMASK(3, 3))
#define MEP_DBG_STICKY_ST28_M                    GENMASK(3, 3)
#define MEP_DBG_STICKY_ST28_X(x)                 (((x) & GENMASK(3, 3)) >> 3)

#define MEP_DBG_STICKY_ST29(x)                   (((x) << 2) & GENMASK(2, 2))
#define MEP_DBG_STICKY_ST29_M                    GENMASK(2, 2)
#define MEP_DBG_STICKY_ST29_X(x)                 (((x) & GENMASK(2, 2)) >> 2)

#define MEP_DBG_STICKY_ST30(x)                   (((x) << 1) & GENMASK(1, 1))
#define MEP_DBG_STICKY_ST30_M                    GENMASK(1, 1)
#define MEP_DBG_STICKY_ST30_X(x)                 (((x) & GENMASK(1, 1)) >> 1)

#define MEP_DBG_STICKY_ST31(x)                   ((x) & GENMASK(0, 0))
#define MEP_DBG_STICKY_ST31_M                    GENMASK(0, 0)
#define MEP_DBG_STICKY_ST31_X(x)                 ((x) & GENMASK(0, 0))

/*      MEP:VOE:BASIC_CTRL */
#define MEP_BASIC_CTRL(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 0, 0, 1, 4)

#define MEP_BASIC_CTRL_DMAC_ERR_REDIR_ENA(x)     (((x) << 9) & GENMASK(9, 9))
#define MEP_BASIC_CTRL_DMAC_ERR_REDIR_ENA_M      GENMASK(9, 9)
#define MEP_BASIC_CTRL_DMAC_ERR_REDIR_ENA_X(x)   (((x) & GENMASK(9, 9)) >> 9)

#define MEP_BASIC_CTRL_RX_DMAC_CHK_SEL(x)        (((x) << 7) & GENMASK(8, 7))
#define MEP_BASIC_CTRL_RX_DMAC_CHK_SEL_M         GENMASK(8, 7)
#define MEP_BASIC_CTRL_RX_DMAC_CHK_SEL_X(x)      (((x) & GENMASK(8, 7)) >> 7)

#define MEP_BASIC_CTRL_CPU_ONCE_CCM_TLV(x)       (((x) << 6) & GENMASK(6, 6))
#define MEP_BASIC_CTRL_CPU_ONCE_CCM_TLV_M        GENMASK(6, 6)
#define MEP_BASIC_CTRL_CPU_ONCE_CCM_TLV_X(x)     (((x) & GENMASK(6, 6)) >> 6)

#define MEP_BASIC_CTRL_CCM_ERR_CPU_ONCE(x)       (((x) << 5) & GENMASK(5, 5))
#define MEP_BASIC_CTRL_CCM_ERR_CPU_ONCE_M        GENMASK(5, 5)
#define MEP_BASIC_CTRL_CCM_ERR_CPU_ONCE_X(x)     (((x) & GENMASK(5, 5)) >> 5)

#define MEP_BASIC_CTRL_CCM_ERR_CPU_COPY_ENA(x)   (((x) << 4) & GENMASK(4, 4))
#define MEP_BASIC_CTRL_CCM_ERR_CPU_COPY_ENA_M    GENMASK(4, 4)
#define MEP_BASIC_CTRL_CCM_ERR_CPU_COPY_ENA_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define MEP_BASIC_CTRL_CCM_NXT_CPU_ONCE(x)       (((x) << 3) & GENMASK(3, 3))
#define MEP_BASIC_CTRL_CCM_NXT_CPU_ONCE_M        GENMASK(3, 3)
#define MEP_BASIC_CTRL_CCM_NXT_CPU_ONCE_X(x)     (((x) & GENMASK(3, 3)) >> 3)

#define MEP_BASIC_CTRL_MIP_UC_ONLY_COPY_ENA(x)   (((x) << 2) & GENMASK(2, 2))
#define MEP_BASIC_CTRL_MIP_UC_ONLY_COPY_ENA_M    GENMASK(2, 2)
#define MEP_BASIC_CTRL_MIP_UC_ONLY_COPY_ENA_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define MEP_BASIC_CTRL_VOE_AS_MIP_ENA(x)         (((x) << 1) & GENMASK(1, 1))
#define MEP_BASIC_CTRL_VOE_AS_MIP_ENA_M          GENMASK(1, 1)
#define MEP_BASIC_CTRL_VOE_AS_MIP_ENA_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define MEP_BASIC_CTRL_VOE_ENA(x)                ((x) & GENMASK(0, 0))
#define MEP_BASIC_CTRL_VOE_ENA_M                 GENMASK(0, 0)
#define MEP_BASIC_CTRL_VOE_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      MEP:VOE:MEL_CTRL */
#define MEP_MEL_CTRL(g)           __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 4, 0, 1, 4)

#define MEP_MEL_CTRL_MEL_VAL(x)                  (((x) << 4) & GENMASK(6, 4))
#define MEP_MEL_CTRL_MEL_VAL_M                   GENMASK(6, 4)
#define MEP_MEL_CTRL_MEL_VAL_X(x)                (((x) & GENMASK(6, 4)) >> 4)

#define MEP_MEL_CTRL_CPU_HITME_ONCE_MTL(x)       (((x) << 3) & GENMASK(3, 3))
#define MEP_MEL_CTRL_CPU_HITME_ONCE_MTL_M        GENMASK(3, 3)
#define MEP_MEL_CTRL_CPU_HITME_ONCE_MTL_X(x)     (((x) & GENMASK(3, 3)) >> 3)

#define MEP_MEL_CTRL_CPU_COPY_MTL(x)             (((x) << 2) & GENMASK(2, 2))
#define MEP_MEL_CTRL_CPU_COPY_MTL_M              GENMASK(2, 2)
#define MEP_MEL_CTRL_CPU_COPY_MTL_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define MEP_MEL_CTRL_CPU_HITME_ONCE_CCM_MTL(x)   (((x) << 1) & GENMASK(1, 1))
#define MEP_MEL_CTRL_CPU_HITME_ONCE_CCM_MTL_M    GENMASK(1, 1)
#define MEP_MEL_CTRL_CPU_HITME_ONCE_CCM_MTL_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MEL_CTRL_CPU_COPY_CCM_MTL(x)         ((x) & GENMASK(0, 0))
#define MEP_MEL_CTRL_CPU_COPY_CCM_MTL_M          GENMASK(0, 0)
#define MEP_MEL_CTRL_CPU_COPY_CCM_MTL_X(x)       ((x) & GENMASK(0, 0))

/*      MEP:VOE:CPU_COPY_CTRL */
#define MEP_CPU_COPY_CTRL(g)      __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 8, 0, 1, 4)

#define MEP_CPU_COPY_CTRL_GENERIC_COPY_MASK(x)   (((x) << 6) & GENMASK(13, 6))
#define MEP_CPU_COPY_CTRL_GENERIC_COPY_MASK_M    GENMASK(13, 6)
#define MEP_CPU_COPY_CTRL_GENERIC_COPY_MASK_X(x) (((x) & GENMASK(13, 6)) >> 6)

#define MEP_CPU_COPY_CTRL_UNK_OPCODE_CPU_CP(x)   (((x) << 5) & GENMASK(5, 5))
#define MEP_CPU_COPY_CTRL_UNK_OPCODE_CPU_CP_M    GENMASK(5, 5)
#define MEP_CPU_COPY_CTRL_UNK_OPCODE_CPU_CP_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define MEP_CPU_COPY_CTRL_LTM_CPU_CP(x)          (((x) << 4) & GENMASK(4, 4))
#define MEP_CPU_COPY_CTRL_LTM_CPU_CP_M           GENMASK(4, 4)
#define MEP_CPU_COPY_CTRL_LTM_CPU_CP_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define MEP_CPU_COPY_CTRL_LTR_CPU_CP(x)          (((x) << 3) & GENMASK(3, 3))
#define MEP_CPU_COPY_CTRL_LTR_CPU_CP_M           GENMASK(3, 3)
#define MEP_CPU_COPY_CTRL_LTR_CPU_CP_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define MEP_CPU_COPY_CTRL_LBM_CPU_CP(x)          (((x) << 2) & GENMASK(2, 2))
#define MEP_CPU_COPY_CTRL_LBM_CPU_CP_M           GENMASK(2, 2)
#define MEP_CPU_COPY_CTRL_LBM_CPU_CP_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define MEP_CPU_COPY_CTRL_LBR_CPU_CP(x)          (((x) << 1) & GENMASK(1, 1))
#define MEP_CPU_COPY_CTRL_LBR_CPU_CP_M           GENMASK(1, 1)
#define MEP_CPU_COPY_CTRL_LBR_CPU_CP_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define MEP_CPU_COPY_CTRL_CCM_CPU_CP(x)          ((x) & GENMASK(0, 0))
#define MEP_CPU_COPY_CTRL_CCM_CPU_CP_M           GENMASK(0, 0)
#define MEP_CPU_COPY_CTRL_CCM_CPU_CP_X(x)        ((x) & GENMASK(0, 0))

/*      MEP:VOE:FWD_CTRL */
#define MEP_FWD_CTRL(g)           __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 12, 0, 1, 4)

#define MEP_FWD_CTRL_GENERIC_FWD_MASK(x)         (((x) << 5) & GENMASK(12, 5))
#define MEP_FWD_CTRL_GENERIC_FWD_MASK_M          GENMASK(12, 5)
#define MEP_FWD_CTRL_GENERIC_FWD_MASK_X(x)       (((x) & GENMASK(12, 5)) >> 5)

#define MEP_FWD_CTRL_LTM_FWD_ENA(x)              (((x) << 4) & GENMASK(4, 4))
#define MEP_FWD_CTRL_LTM_FWD_ENA_M               GENMASK(4, 4)
#define MEP_FWD_CTRL_LTM_FWD_ENA_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define MEP_FWD_CTRL_LTR_FWD_ENA(x)              (((x) << 3) & GENMASK(3, 3))
#define MEP_FWD_CTRL_LTR_FWD_ENA_M               GENMASK(3, 3)
#define MEP_FWD_CTRL_LTR_FWD_ENA_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define MEP_FWD_CTRL_LBM_FWD_ENA(x)              (((x) << 2) & GENMASK(2, 2))
#define MEP_FWD_CTRL_LBM_FWD_ENA_M               GENMASK(2, 2)
#define MEP_FWD_CTRL_LBM_FWD_ENA_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define MEP_FWD_CTRL_LBR_FWD_ENA(x)              (((x) << 1) & GENMASK(1, 1))
#define MEP_FWD_CTRL_LBR_FWD_ENA_M               GENMASK(1, 1)
#define MEP_FWD_CTRL_LBR_FWD_ENA_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define MEP_FWD_CTRL_CCM_FWD_ENA(x)              ((x) & GENMASK(0, 0))
#define MEP_FWD_CTRL_CCM_FWD_ENA_M               GENMASK(0, 0)
#define MEP_FWD_CTRL_CCM_FWD_ENA_X(x)            ((x) & GENMASK(0, 0))

/*      MEP:VOE:CNT_OAM_CTRL */
#define MEP_CNT_OAM_CTRL(g)       __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 16, 0, 1, 4)

#define MEP_CNT_OAM_CTRL_GEN_OAM_CNT_MASK(x)     (((x) << 6) & GENMASK(13, 6))
#define MEP_CNT_OAM_CTRL_GEN_OAM_CNT_MASK_M      GENMASK(13, 6)
#define MEP_CNT_OAM_CTRL_GEN_OAM_CNT_MASK_X(x)   (((x) & GENMASK(13, 6)) >> 6)

#define MEP_CNT_OAM_CTRL_UNK_OPCODE_OAM_CNT(x)   (((x) << 5) & GENMASK(5, 5))
#define MEP_CNT_OAM_CTRL_UNK_OPCODE_OAM_CNT_M    GENMASK(5, 5)
#define MEP_CNT_OAM_CTRL_UNK_OPCODE_OAM_CNT_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define MEP_CNT_OAM_CTRL_LTM_OAM_CNT(x)          (((x) << 4) & GENMASK(4, 4))
#define MEP_CNT_OAM_CTRL_LTM_OAM_CNT_M           GENMASK(4, 4)
#define MEP_CNT_OAM_CTRL_LTM_OAM_CNT_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define MEP_CNT_OAM_CTRL_LTR_OAM_CNT(x)          (((x) << 3) & GENMASK(3, 3))
#define MEP_CNT_OAM_CTRL_LTR_OAM_CNT_M           GENMASK(3, 3)
#define MEP_CNT_OAM_CTRL_LTR_OAM_CNT_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define MEP_CNT_OAM_CTRL_LBM_OAM_CNT(x)          (((x) << 2) & GENMASK(2, 2))
#define MEP_CNT_OAM_CTRL_LBM_OAM_CNT_M           GENMASK(2, 2)
#define MEP_CNT_OAM_CTRL_LBM_OAM_CNT_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define MEP_CNT_OAM_CTRL_LBR_OAM_CNT(x)          (((x) << 1) & GENMASK(1, 1))
#define MEP_CNT_OAM_CTRL_LBR_OAM_CNT_M           GENMASK(1, 1)
#define MEP_CNT_OAM_CTRL_LBR_OAM_CNT_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define MEP_CNT_OAM_CTRL_CCM_OAM_CNT(x)          ((x) & GENMASK(0, 0))
#define MEP_CNT_OAM_CTRL_CCM_OAM_CNT_M           GENMASK(0, 0)
#define MEP_CNT_OAM_CTRL_CCM_OAM_CNT_X(x)        ((x) & GENMASK(0, 0))

/*      MEP:VOE:CNT_DATA_CTRL */
#define MEP_CNT_DATA_CTRL(g)      __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 20, 0, 1, 4)

#define MEP_CNT_DATA_CTRL_GEN_DATA_CNT_MASK(x)   (((x) << 6) & GENMASK(13, 6))
#define MEP_CNT_DATA_CTRL_GEN_DATA_CNT_MASK_M    GENMASK(13, 6)
#define MEP_CNT_DATA_CTRL_GEN_DATA_CNT_MASK_X(x) (((x) & GENMASK(13, 6)) >> 6)

#define MEP_CNT_DATA_CTRL_UNK_OPC_DATA_CNT(x)    (((x) << 5) & GENMASK(5, 5))
#define MEP_CNT_DATA_CTRL_UNK_OPC_DATA_CNT_M     GENMASK(5, 5)
#define MEP_CNT_DATA_CTRL_UNK_OPC_DATA_CNT_X(x)  (((x) & GENMASK(5, 5)) >> 5)

#define MEP_CNT_DATA_CTRL_LTM_DATA_CNT(x)        (((x) << 4) & GENMASK(4, 4))
#define MEP_CNT_DATA_CTRL_LTM_DATA_CNT_M         GENMASK(4, 4)
#define MEP_CNT_DATA_CTRL_LTM_DATA_CNT_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define MEP_CNT_DATA_CTRL_LTR_DATA_CNT(x)        (((x) << 3) & GENMASK(3, 3))
#define MEP_CNT_DATA_CTRL_LTR_DATA_CNT_M         GENMASK(3, 3)
#define MEP_CNT_DATA_CTRL_LTR_DATA_CNT_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define MEP_CNT_DATA_CTRL_LBM_DATA_CNT(x)        (((x) << 2) & GENMASK(2, 2))
#define MEP_CNT_DATA_CTRL_LBM_DATA_CNT_M         GENMASK(2, 2)
#define MEP_CNT_DATA_CTRL_LBM_DATA_CNT_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define MEP_CNT_DATA_CTRL_LBR_DATA_CNT(x)        (((x) << 1) & GENMASK(1, 1))
#define MEP_CNT_DATA_CTRL_LBR_DATA_CNT_M         GENMASK(1, 1)
#define MEP_CNT_DATA_CTRL_LBR_DATA_CNT_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define MEP_CNT_DATA_CTRL_CCM_DATA_CNT(x)        ((x) & GENMASK(0, 0))
#define MEP_CNT_DATA_CTRL_CCM_DATA_CNT_M         GENMASK(0, 0)
#define MEP_CNT_DATA_CTRL_CCM_DATA_CNT_X(x)      ((x) & GENMASK(0, 0))

/*      MEP:VOE:UC_MAC_LSB */
#define MEP_UC_MAC_LSB(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 24, 0, 1, 4)

/*      MEP:VOE:UC_MAC_MSB */
#define MEP_UC_MAC_MSB(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 28, 0, 1, 4)

#define MEP_UC_MAC_MSB_MEP_UC_MAC_MSB(x)         ((x) & GENMASK(15, 0))
#define MEP_UC_MAC_MSB_MEP_UC_MAC_MSB_M          GENMASK(15, 0)
#define MEP_UC_MAC_MSB_MEP_UC_MAC_MSB_X(x)       ((x) & GENMASK(15, 0))

/*      MEP:VOE:HW_CTRL */
#define MEP_HW_CTRL(g)            __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 32, 0, 1, 4)

#define MEP_HW_CTRL_CCM_ENA(x)                   ((x) & GENMASK(0, 0))
#define MEP_HW_CTRL_CCM_ENA_M                    GENMASK(0, 0)
#define MEP_HW_CTRL_CCM_ENA_X(x)                 ((x) & GENMASK(0, 0))

/*      MEP:VOE:CCM_CFG */
#define MEP_CCM_CFG(g)            __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 36, 0, 1, 4)

#define MEP_CCM_CFG_CCM_RX_SEQ_CHK_ENA(x)        (((x) << 19) & GENMASK(19, 19))
#define MEP_CCM_CFG_CCM_RX_SEQ_CHK_ENA_M         GENMASK(19, 19)
#define MEP_CCM_CFG_CCM_RX_SEQ_CHK_ENA_X(x)      (((x) & GENMASK(19, 19)) >> 19)

#define MEP_CCM_CFG_CCM_MISS_CNT(x)              (((x) << 16) & GENMASK(18, 16))
#define MEP_CCM_CFG_CCM_MISS_CNT_M               GENMASK(18, 16)
#define MEP_CCM_CFG_CCM_MISS_CNT_X(x)            (((x) & GENMASK(18, 16)) >> 16)

#define MEP_CCM_CFG_CCM_PRIO(x)                  (((x) << 13) & GENMASK(15, 13))
#define MEP_CCM_CFG_CCM_PRIO_M                   GENMASK(15, 13)
#define MEP_CCM_CFG_CCM_PRIO_X(x)                (((x) & GENMASK(15, 13)) >> 13)

#define MEP_CCM_CFG_CCM_PERIOD(x)                (((x) << 10) & GENMASK(12, 10))
#define MEP_CCM_CFG_CCM_PERIOD_M                 GENMASK(12, 10)
#define MEP_CCM_CFG_CCM_PERIOD_X(x)              (((x) & GENMASK(12, 10)) >> 10)

#define MEP_CCM_CFG_CCM_MEGID_CHK_ENA(x)         (((x) << 9) & GENMASK(9, 9))
#define MEP_CCM_CFG_CCM_MEGID_CHK_ENA_M          GENMASK(9, 9)
#define MEP_CCM_CFG_CCM_MEGID_CHK_ENA_X(x)       (((x) & GENMASK(9, 9)) >> 9)

#define MEP_CCM_CFG_CCM_MEPID_CHK_ENA(x)         (((x) << 8) & GENMASK(8, 8))
#define MEP_CCM_CFG_CCM_MEPID_CHK_ENA_M          GENMASK(8, 8)
#define MEP_CCM_CFG_CCM_MEPID_CHK_ENA_X(x)       (((x) & GENMASK(8, 8)) >> 8)

#define MEP_CCM_CFG_CCM_PERIOD_ERR(x)            (((x) << 7) & GENMASK(7, 7))
#define MEP_CCM_CFG_CCM_PERIOD_ERR_M             GENMASK(7, 7)
#define MEP_CCM_CFG_CCM_PERIOD_ERR_X(x)          (((x) & GENMASK(7, 7)) >> 7)

#define MEP_CCM_CFG_CCM_PRIO_ERR(x)              (((x) << 6) & GENMASK(6, 6))
#define MEP_CCM_CFG_CCM_PRIO_ERR_M               GENMASK(6, 6)
#define MEP_CCM_CFG_CCM_PRIO_ERR_X(x)            (((x) & GENMASK(6, 6)) >> 6)

#define MEP_CCM_CFG_CCM_ZERO_PERIOD_ERR(x)       (((x) << 5) & GENMASK(5, 5))
#define MEP_CCM_CFG_CCM_ZERO_PERIOD_ERR_M        GENMASK(5, 5)
#define MEP_CCM_CFG_CCM_ZERO_PERIOD_ERR_X(x)     (((x) & GENMASK(5, 5)) >> 5)

#define MEP_CCM_CFG_CCM_RX_RDI(x)                (((x) << 4) & GENMASK(4, 4))
#define MEP_CCM_CFG_CCM_RX_RDI_M                 GENMASK(4, 4)
#define MEP_CCM_CFG_CCM_RX_RDI_X(x)              (((x) & GENMASK(4, 4)) >> 4)

#define MEP_CCM_CFG_CCM_LOC_DEFECT(x)            (((x) << 3) & GENMASK(3, 3))
#define MEP_CCM_CFG_CCM_LOC_DEFECT_M             GENMASK(3, 3)
#define MEP_CCM_CFG_CCM_LOC_DEFECT_X(x)          (((x) & GENMASK(3, 3)) >> 3)

#define MEP_CCM_CFG_CCM_MEPID_ERR(x)             (((x) << 2) & GENMASK(2, 2))
#define MEP_CCM_CFG_CCM_MEPID_ERR_M              GENMASK(2, 2)
#define MEP_CCM_CFG_CCM_MEPID_ERR_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define MEP_CCM_CFG_CCM_MEGID_ERR(x)             (((x) << 1) & GENMASK(1, 1))
#define MEP_CCM_CFG_CCM_MEGID_ERR_M              GENMASK(1, 1)
#define MEP_CCM_CFG_CCM_MEGID_ERR_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define MEP_CCM_CFG_OAM_MEL_ERR(x)               ((x) & GENMASK(0, 0))
#define MEP_CCM_CFG_OAM_MEL_ERR_M                GENMASK(0, 0)
#define MEP_CCM_CFG_OAM_MEL_ERR_X(x)             ((x) & GENMASK(0, 0))

/*      MEP:VOE:CCM_RX_VL_FC_CNT */
#define MEP_CCM_RX_VL_FC_CNT(g)   __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 40, 0, 1, 4)

/*      MEP:VOE:CCM_RX_IV_FC_CNT */
#define MEP_CCM_RX_IV_FC_CNT(g)   __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 44, 0, 1, 4)

/*      MEP:VOE:CCM_RX_SEQ_CFG */
#define MEP_CCM_RX_SEQ_CFG(g)     __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 48, 0, 1, 4)

/*      MEP:VOE:CCM_MEPID_CFG */
#define MEP_CCM_MEPID_CFG(g)      __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 52, 0, 1, 4)

#define MEP_CCM_MEPID_CFG_CCM_MEPID(x)           ((x) & GENMASK(15, 0))
#define MEP_CCM_MEPID_CFG_CCM_MEPID_M            GENMASK(15, 0)
#define MEP_CCM_MEPID_CFG_CCM_MEPID_X(x)         ((x) & GENMASK(15, 0))

/*      MEP:VOE:CCM_MEGID_CFG */
#define MEP_CCM_MEGID_CFG(g, r)   __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 56, r, 12, 4)

/*      MEP:VOE:RX_STICKY */
#define MEP_RX_STICKY(g)          __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 104, 0, 1, 4)

#define MEP_RX_STICKY_GENERIC_RX_MASK(x)         (((x) << 11) & GENMASK(18, 11))
#define MEP_RX_STICKY_GENERIC_RX_MASK_M          GENMASK(18, 11)
#define MEP_RX_STICKY_GENERIC_RX_MASK_X(x)       (((x) & GENMASK(18, 11)) >> 11)

#define MEP_RX_STICKY_UNK_OPCODE_RX_STICKY(x)    (((x) << 10) & GENMASK(10, 10))
#define MEP_RX_STICKY_UNK_OPCODE_RX_STICKY_M     GENMASK(10, 10)
#define MEP_RX_STICKY_UNK_OPCODE_RX_STICKY_X(x)  (((x) & GENMASK(10, 10)) >> 10)

#define MEP_RX_STICKY_LTM_RX_STICKY(x)           (((x) << 9) & GENMASK(9, 9))
#define MEP_RX_STICKY_LTM_RX_STICKY_M            GENMASK(9, 9)
#define MEP_RX_STICKY_LTM_RX_STICKY_X(x)         (((x) & GENMASK(9, 9)) >> 9)

#define MEP_RX_STICKY_LTR_RX_STICKY(x)           (((x) << 8) & GENMASK(8, 8))
#define MEP_RX_STICKY_LTR_RX_STICKY_M            GENMASK(8, 8)
#define MEP_RX_STICKY_LTR_RX_STICKY_X(x)         (((x) & GENMASK(8, 8)) >> 8)

#define MEP_RX_STICKY_LBM_RX_STICKY(x)           (((x) << 7) & GENMASK(7, 7))
#define MEP_RX_STICKY_LBM_RX_STICKY_M            GENMASK(7, 7)
#define MEP_RX_STICKY_LBM_RX_STICKY_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define MEP_RX_STICKY_LBR_RX_STICKY(x)           (((x) << 6) & GENMASK(6, 6))
#define MEP_RX_STICKY_LBR_RX_STICKY_M            GENMASK(6, 6)
#define MEP_RX_STICKY_LBR_RX_STICKY_X(x)         (((x) & GENMASK(6, 6)) >> 6)

#define MEP_RX_STICKY_CCM_RX_STICKY(x)           (((x) << 5) & GENMASK(5, 5))
#define MEP_RX_STICKY_CCM_RX_STICKY_M            GENMASK(5, 5)
#define MEP_RX_STICKY_CCM_RX_STICKY_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define MEP_RX_STICKY_CCM_LM_RX_STICKY(x)        (((x) << 4) & GENMASK(4, 4))
#define MEP_RX_STICKY_CCM_LM_RX_STICKY_M         GENMASK(4, 4)
#define MEP_RX_STICKY_CCM_LM_RX_STICKY_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define MEP_RX_STICKY_CCM_RX_SEQ_ERR_STICKY(x)   (((x) << 3) & GENMASK(3, 3))
#define MEP_RX_STICKY_CCM_RX_SEQ_ERR_STICKY_M    GENMASK(3, 3)
#define MEP_RX_STICKY_CCM_RX_SEQ_ERR_STICKY_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define MEP_RX_STICKY_OAM_AS_DATA_STICKY(x)      (((x) << 2) & GENMASK(2, 2))
#define MEP_RX_STICKY_OAM_AS_DATA_STICKY_M       GENMASK(2, 2)
#define MEP_RX_STICKY_OAM_AS_DATA_STICKY_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define MEP_RX_STICKY_MEP_EGR_BLOCK_STICKY(x)    (((x) << 1) & GENMASK(1, 1))
#define MEP_RX_STICKY_MEP_EGR_BLOCK_STICKY_M     GENMASK(1, 1)
#define MEP_RX_STICKY_MEP_EGR_BLOCK_STICKY_X(x)  (((x) & GENMASK(1, 1)) >> 1)

#define MEP_RX_STICKY_MAC_ADDR_ERR_STICKY(x)     ((x) & GENMASK(0, 0))
#define MEP_RX_STICKY_MAC_ADDR_ERR_STICKY_M      GENMASK(0, 0)
#define MEP_RX_STICKY_MAC_ADDR_ERR_STICKY_X(x)   ((x) & GENMASK(0, 0))

/*      MEP:VOE:STICKY */
#define MEP_STICKY(g)             __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 108, 0, 1, 4)

#define MEP_STICKY_CCM_PERIOD_STICKY(x)          (((x) << 7) & GENMASK(7, 7))
#define MEP_STICKY_CCM_PERIOD_STICKY_M           GENMASK(7, 7)
#define MEP_STICKY_CCM_PERIOD_STICKY_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define MEP_STICKY_CCM_PRIO_STICKY(x)            (((x) << 6) & GENMASK(6, 6))
#define MEP_STICKY_CCM_PRIO_STICKY_M             GENMASK(6, 6)
#define MEP_STICKY_CCM_PRIO_STICKY_X(x)          (((x) & GENMASK(6, 6)) >> 6)

#define MEP_STICKY_CCM_ZERO_PERIOD_STICKY(x)     (((x) << 5) & GENMASK(5, 5))
#define MEP_STICKY_CCM_ZERO_PERIOD_STICKY_M      GENMASK(5, 5)
#define MEP_STICKY_CCM_ZERO_PERIOD_STICKY_X(x)   (((x) & GENMASK(5, 5)) >> 5)

#define MEP_STICKY_CCM_RX_RDI_STICKY(x)          (((x) << 4) & GENMASK(4, 4))
#define MEP_STICKY_CCM_RX_RDI_STICKY_M           GENMASK(4, 4)
#define MEP_STICKY_CCM_RX_RDI_STICKY_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define MEP_STICKY_CCM_LOC_STICKY(x)             (((x) << 3) & GENMASK(3, 3))
#define MEP_STICKY_CCM_LOC_STICKY_M              GENMASK(3, 3)
#define MEP_STICKY_CCM_LOC_STICKY_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define MEP_STICKY_CCM_MEPID_STICKY(x)           (((x) << 2) & GENMASK(2, 2))
#define MEP_STICKY_CCM_MEPID_STICKY_M            GENMASK(2, 2)
#define MEP_STICKY_CCM_MEPID_STICKY_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define MEP_STICKY_CCM_MEGID_STICKY(x)           (((x) << 1) & GENMASK(1, 1))
#define MEP_STICKY_CCM_MEGID_STICKY_M            GENMASK(1, 1)
#define MEP_STICKY_CCM_MEGID_STICKY_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define MEP_STICKY_OAM_MEL_STICKY(x)             ((x) & GENMASK(0, 0))
#define MEP_STICKY_OAM_MEL_STICKY_M              GENMASK(0, 0)
#define MEP_STICKY_OAM_MEL_STICKY_X(x)           ((x) & GENMASK(0, 0))

/*      MEP:VOE:INTR_ENA */
#define MEP_INTR_ENA(g)           __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 112, 0, 1, 4)

#define MEP_INTR_ENA_CCM_PER_INTR_ENA(x)         (((x) << 7) & GENMASK(7, 7))
#define MEP_INTR_ENA_CCM_PER_INTR_ENA_M          GENMASK(7, 7)
#define MEP_INTR_ENA_CCM_PER_INTR_ENA_X(x)       (((x) & GENMASK(7, 7)) >> 7)

#define MEP_INTR_ENA_CCM_PRIO_INTR_ENA(x)        (((x) << 6) & GENMASK(6, 6))
#define MEP_INTR_ENA_CCM_PRIO_INTR_ENA_M         GENMASK(6, 6)
#define MEP_INTR_ENA_CCM_PRIO_INTR_ENA_X(x)      (((x) & GENMASK(6, 6)) >> 6)

#define MEP_INTR_ENA_CCM_ZERO_PER_INTR_ENA(x)    (((x) << 5) & GENMASK(5, 5))
#define MEP_INTR_ENA_CCM_ZERO_PER_INTR_ENA_M     GENMASK(5, 5)
#define MEP_INTR_ENA_CCM_ZERO_PER_INTR_ENA_X(x)  (((x) & GENMASK(5, 5)) >> 5)

#define MEP_INTR_ENA_CCM_RX_RDI_INTR_ENA(x)      (((x) << 4) & GENMASK(4, 4))
#define MEP_INTR_ENA_CCM_RX_RDI_INTR_ENA_M       GENMASK(4, 4)
#define MEP_INTR_ENA_CCM_RX_RDI_INTR_ENA_X(x)    (((x) & GENMASK(4, 4)) >> 4)

#define MEP_INTR_ENA_CCM_LOC_INTR_ENA(x)         (((x) << 3) & GENMASK(3, 3))
#define MEP_INTR_ENA_CCM_LOC_INTR_ENA_M          GENMASK(3, 3)
#define MEP_INTR_ENA_CCM_LOC_INTR_ENA_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define MEP_INTR_ENA_CCM_MEPID_INTR_ENA(x)       (((x) << 2) & GENMASK(2, 2))
#define MEP_INTR_ENA_CCM_MEPID_INTR_ENA_M        GENMASK(2, 2)
#define MEP_INTR_ENA_CCM_MEPID_INTR_ENA_X(x)     (((x) & GENMASK(2, 2)) >> 2)

#define MEP_INTR_ENA_CCM_MEGID_INTR_ENA(x)       (((x) << 1) & GENMASK(1, 1))
#define MEP_INTR_ENA_CCM_MEGID_INTR_ENA_M        GENMASK(1, 1)
#define MEP_INTR_ENA_CCM_MEGID_INTR_ENA_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define MEP_INTR_ENA_OAM_MEL_INTR_ENA(x)         ((x) & GENMASK(0, 0))
#define MEP_INTR_ENA_OAM_MEL_INTR_ENA_M          GENMASK(0, 0)
#define MEP_INTR_ENA_OAM_MEL_INTR_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      MEP:VOE:RX_SEL_CNT */
#define MEP_RX_SEL_CNT(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 116, 0, 1, 4)

/*      MEP:VOE:RX_FRM_CNT */
#define MEP_RX_FRM_CNT(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 120, 0, 1, 4)

/*      MEP:PORT_PM:PORT_RX_FRM_CNT */
#define MEP_PORT_RX_FRM_CNT(g)    __REG(TARGET_MEP,\
					0, 1, 3072, g, 64, 4, 0, 0, 1, 4)

/*      MEP:MRP:MRP_CTRL */
#define MEP_MRP_CTRL(g)           __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 0, 0, 1, 4)

#define MEP_MRP_CTRL_ITST_CHK_SEQ_ENA(x)         (((x) << 11) & GENMASK(11, 11))
#define MEP_MRP_CTRL_ITST_CHK_SEQ_ENA_M          GENMASK(11, 11)
#define MEP_MRP_CTRL_ITST_CHK_SEQ_ENA_X(x)       (((x) & GENMASK(11, 11)) >> 11)

#define MEP_MRP_CTRL_TST_CHK_SEQ_ENA(x)          (((x) << 10) & GENMASK(10, 10))
#define MEP_MRP_CTRL_TST_CHK_SEQ_ENA_M           GENMASK(10, 10)
#define MEP_MRP_CTRL_TST_CHK_SEQ_ENA_X(x)        (((x) & GENMASK(10, 10)) >> 10)

#define MEP_MRP_CTRL_CHK_DMAC_ENA(x)             (((x) << 9) & GENMASK(9, 9))
#define MEP_MRP_CTRL_CHK_DMAC_ENA_M              GENMASK(9, 9)
#define MEP_MRP_CTRL_CHK_DMAC_ENA_X(x)           (((x) & GENMASK(9, 9)) >> 9)

#define MEP_MRP_CTRL_ALLOW_MRP_OUIS_ENA(x)       (((x) << 8) & GENMASK(8, 8))
#define MEP_MRP_CTRL_ALLOW_MRP_OUIS_ENA_M        GENMASK(8, 8)
#define MEP_MRP_CTRL_ALLOW_MRP_OUIS_ENA_X(x)     (((x) & GENMASK(8, 8)) >> 8)

#define MEP_MRP_CTRL_CHK_VERSION_ENA(x)          (((x) << 7) & GENMASK(7, 7))
#define MEP_MRP_CTRL_CHK_VERSION_ENA_M           GENMASK(7, 7)
#define MEP_MRP_CTRL_CHK_VERSION_ENA_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define MEP_MRP_CTRL_MRP_VERSION(x)              (((x) << 3) & GENMASK(6, 3))
#define MEP_MRP_CTRL_MRP_VERSION_M               GENMASK(6, 3)
#define MEP_MRP_CTRL_MRP_VERSION_X(x)            (((x) & GENMASK(6, 3)) >> 3)

#define MEP_MRP_CTRL_MRP_TST_ENA(x)              (((x) << 2) & GENMASK(2, 2))
#define MEP_MRP_CTRL_MRP_TST_ENA_M               GENMASK(2, 2)
#define MEP_MRP_CTRL_MRP_TST_ENA_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define MEP_MRP_CTRL_MRP_ITST_ENA(x)             (((x) << 1) & GENMASK(1, 1))
#define MEP_MRP_CTRL_MRP_ITST_ENA_M              GENMASK(1, 1)
#define MEP_MRP_CTRL_MRP_ITST_ENA_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MRP_CTRL_MRP_ENA(x)                  ((x) & GENMASK(0, 0))
#define MEP_MRP_CTRL_MRP_ENA_M                   GENMASK(0, 0)
#define MEP_MRP_CTRL_MRP_ENA_X(x)                ((x) & GENMASK(0, 0))

/*      MEP:MRP:MRP_FWD_CTRL */
#define MEP_MRP_FWD_CTRL(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 4, 0, 1, 4)

#define MEP_MRP_FWD_CTRL_ICON_MASK_ENA(x)        (((x) << 25) & GENMASK(25, 25))
#define MEP_MRP_FWD_CTRL_ICON_MASK_ENA_M         GENMASK(25, 25)
#define MEP_MRP_FWD_CTRL_ICON_MASK_ENA_X(x)      (((x) & GENMASK(25, 25)) >> 25)

#define MEP_MRP_FWD_CTRL_RING_MASK_ENA(x)        (((x) << 24) & GENMASK(24, 24))
#define MEP_MRP_FWD_CTRL_RING_MASK_ENA_M         GENMASK(24, 24)
#define MEP_MRP_FWD_CTRL_RING_MASK_ENA_X(x)      (((x) & GENMASK(24, 24)) >> 24)

#define MEP_MRP_FWD_CTRL_ERR_FWD_SEL(x)          (((x) << 22) & GENMASK(23, 22))
#define MEP_MRP_FWD_CTRL_ERR_FWD_SEL_M           GENMASK(23, 22)
#define MEP_MRP_FWD_CTRL_ERR_FWD_SEL_X(x)        (((x) & GENMASK(23, 22)) >> 22)

#define MEP_MRP_FWD_CTRL_MRP_TST_FWD_SEL(x)      (((x) << 20) & GENMASK(21, 20))
#define MEP_MRP_FWD_CTRL_MRP_TST_FWD_SEL_M       GENMASK(21, 20)
#define MEP_MRP_FWD_CTRL_MRP_TST_FWD_SEL_X(x)    (((x) & GENMASK(21, 20)) >> 20)

#define MEP_MRP_FWD_CTRL_MRP_TPM_FWD_SEL(x)      (((x) << 18) & GENMASK(19, 18))
#define MEP_MRP_FWD_CTRL_MRP_TPM_FWD_SEL_M       GENMASK(19, 18)
#define MEP_MRP_FWD_CTRL_MRP_TPM_FWD_SEL_X(x)    (((x) & GENMASK(19, 18)) >> 18)

#define MEP_MRP_FWD_CTRL_MRP_LD_FWD_SEL(x)       (((x) << 16) & GENMASK(17, 16))
#define MEP_MRP_FWD_CTRL_MRP_LD_FWD_SEL_M        GENMASK(17, 16)
#define MEP_MRP_FWD_CTRL_MRP_LD_FWD_SEL_X(x)     (((x) & GENMASK(17, 16)) >> 16)

#define MEP_MRP_FWD_CTRL_MRP_LU_FWD_SEL(x)       (((x) << 14) & GENMASK(15, 14))
#define MEP_MRP_FWD_CTRL_MRP_LU_FWD_SEL_M        GENMASK(15, 14)
#define MEP_MRP_FWD_CTRL_MRP_LU_FWD_SEL_X(x)     (((x) & GENMASK(15, 14)) >> 14)

#define MEP_MRP_FWD_CTRL_MRP_TC_FWD_SEL(x)       (((x) << 12) & GENMASK(13, 12))
#define MEP_MRP_FWD_CTRL_MRP_TC_FWD_SEL_M        GENMASK(13, 12)
#define MEP_MRP_FWD_CTRL_MRP_TC_FWD_SEL_X(x)     (((x) & GENMASK(13, 12)) >> 12)

#define MEP_MRP_FWD_CTRL_MRP_ITST_FWD_SEL(x)     (((x) << 10) & GENMASK(11, 10))
#define MEP_MRP_FWD_CTRL_MRP_ITST_FWD_SEL_M      GENMASK(11, 10)
#define MEP_MRP_FWD_CTRL_MRP_ITST_FWD_SEL_X(x)   (((x) & GENMASK(11, 10)) >> 10)

#define MEP_MRP_FWD_CTRL_MRP_ITC_FWD_SEL(x)      (((x) << 8) & GENMASK(9, 8))
#define MEP_MRP_FWD_CTRL_MRP_ITC_FWD_SEL_M       GENMASK(9, 8)
#define MEP_MRP_FWD_CTRL_MRP_ITC_FWD_SEL_X(x)    (((x) & GENMASK(9, 8)) >> 8)

#define MEP_MRP_FWD_CTRL_MRP_ILD_FWD_SEL(x)      (((x) << 6) & GENMASK(7, 6))
#define MEP_MRP_FWD_CTRL_MRP_ILD_FWD_SEL_M       GENMASK(7, 6)
#define MEP_MRP_FWD_CTRL_MRP_ILD_FWD_SEL_X(x)    (((x) & GENMASK(7, 6)) >> 6)

#define MEP_MRP_FWD_CTRL_MRP_ILU_FWD_SEL(x)      (((x) << 4) & GENMASK(5, 4))
#define MEP_MRP_FWD_CTRL_MRP_ILU_FWD_SEL_M       GENMASK(5, 4)
#define MEP_MRP_FWD_CTRL_MRP_ILU_FWD_SEL_X(x)    (((x) & GENMASK(5, 4)) >> 4)

#define MEP_MRP_FWD_CTRL_MRP_ILSP_FWD_SEL(x)     (((x) << 2) & GENMASK(3, 2))
#define MEP_MRP_FWD_CTRL_MRP_ILSP_FWD_SEL_M      GENMASK(3, 2)
#define MEP_MRP_FWD_CTRL_MRP_ILSP_FWD_SEL_X(x)   (((x) & GENMASK(3, 2)) >> 2)

#define MEP_MRP_FWD_CTRL_OTHER_FWD_SEL(x)        ((x) & GENMASK(1, 0))
#define MEP_MRP_FWD_CTRL_OTHER_FWD_SEL_M         GENMASK(1, 0)
#define MEP_MRP_FWD_CTRL_OTHER_FWD_SEL_X(x)      ((x) & GENMASK(1, 0))

/*      MEP:MRP:RING_MASK_CFG */
#define MEP_RING_MASK_CFG(g)      __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 8, 0, 1, 4)

#define MEP_RING_MASK_CFG_RING_PORTMASK(x)       ((x) & GENMASK(7, 0))
#define MEP_RING_MASK_CFG_RING_PORTMASK_M        GENMASK(7, 0)
#define MEP_RING_MASK_CFG_RING_PORTMASK_X(x)     ((x) & GENMASK(7, 0))

/*      MEP:MRP:ICON_MASK_CFG */
#define MEP_ICON_MASK_CFG(g)      __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 12, 0, 1, 4)

#define MEP_ICON_MASK_CFG_ICON_PORTMASK(x)       ((x) & GENMASK(7, 0))
#define MEP_ICON_MASK_CFG_ICON_PORTMASK_M        GENMASK(7, 0)
#define MEP_ICON_MASK_CFG_ICON_PORTMASK_X(x)     ((x) & GENMASK(7, 0))

/*      MEP:MRP:TST_FWD_CTRL */
#define MEP_TST_FWD_CTRL(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 16, 0, 1, 4)

#define MEP_TST_FWD_CTRL_NXT_LOC_CPU_HITME(x)    (((x) << 8) & GENMASK(8, 8))
#define MEP_TST_FWD_CTRL_NXT_LOC_CPU_HITME_M     GENMASK(8, 8)
#define MEP_TST_FWD_CTRL_NXT_LOC_CPU_HITME_X(x)  (((x) & GENMASK(8, 8)) >> 8)

#define MEP_TST_FWD_CTRL_HI_PRIO_FWD_SEL(x)      (((x) << 6) & GENMASK(7, 6))
#define MEP_TST_FWD_CTRL_HI_PRIO_FWD_SEL_M       GENMASK(7, 6)
#define MEP_TST_FWD_CTRL_HI_PRIO_FWD_SEL_X(x)    (((x) & GENMASK(7, 6)) >> 6)

#define MEP_TST_FWD_CTRL_LO_PRIO_FWD_SEL(x)      (((x) << 4) & GENMASK(5, 4))
#define MEP_TST_FWD_CTRL_LO_PRIO_FWD_SEL_M       GENMASK(5, 4)
#define MEP_TST_FWD_CTRL_LO_PRIO_FWD_SEL_X(x)    (((x) & GENMASK(5, 4)) >> 4)

#define MEP_TST_FWD_CTRL_REM_FWD_SEL(x)          (((x) << 2) & GENMASK(3, 2))
#define MEP_TST_FWD_CTRL_REM_FWD_SEL_M           GENMASK(3, 2)
#define MEP_TST_FWD_CTRL_REM_FWD_SEL_X(x)        (((x) & GENMASK(3, 2)) >> 2)

#define MEP_TST_FWD_CTRL_OWN_FWD_SEL(x)          ((x) & GENMASK(1, 0))
#define MEP_TST_FWD_CTRL_OWN_FWD_SEL_M           GENMASK(1, 0)
#define MEP_TST_FWD_CTRL_OWN_FWD_SEL_X(x)        ((x) & GENMASK(1, 0))

/*      MEP:MRP:TST_CFG */
#define MEP_TST_CFG(g)            __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 20, 0, 1, 4)

#define MEP_TST_CFG_SAMPLE_LO_PRIO_ENA(x)        (((x) << 16) & GENMASK(16, 16))
#define MEP_TST_CFG_SAMPLE_LO_PRIO_ENA_M         GENMASK(16, 16)
#define MEP_TST_CFG_SAMPLE_LO_PRIO_ENA_X(x)      (((x) & GENMASK(16, 16)) >> 16)

#define MEP_TST_CFG_SAMPLE_HI_PRIO_ENA(x)        (((x) << 15) & GENMASK(15, 15))
#define MEP_TST_CFG_SAMPLE_HI_PRIO_ENA_M         GENMASK(15, 15)
#define MEP_TST_CFG_SAMPLE_HI_PRIO_ENA_X(x)      (((x) & GENMASK(15, 15)) >> 15)

#define MEP_TST_CFG_CHK_REM_PRIO_ENA(x)          (((x) << 14) & GENMASK(14, 14))
#define MEP_TST_CFG_CHK_REM_PRIO_ENA_M           GENMASK(14, 14)
#define MEP_TST_CFG_CHK_REM_PRIO_ENA_X(x)        (((x) & GENMASK(14, 14)) >> 14)

#define MEP_TST_CFG_CHK_BEST_MRM_ENA(x)          (((x) << 13) & GENMASK(13, 13))
#define MEP_TST_CFG_CHK_BEST_MRM_ENA_M           GENMASK(13, 13)
#define MEP_TST_CFG_CHK_BEST_MRM_ENA_X(x)        (((x) & GENMASK(13, 13)) >> 13)

#define MEP_TST_CFG_CLR_MISS_CNT_ENA(x)          (((x) << 12) & GENMASK(12, 12))
#define MEP_TST_CFG_CLR_MISS_CNT_ENA_M           GENMASK(12, 12)
#define MEP_TST_CFG_CLR_MISS_CNT_ENA_X(x)        (((x) & GENMASK(12, 12)) >> 12)

#define MEP_TST_CFG_MAX_MISS_CNT(x)              (((x) << 8) & GENMASK(11, 8))
#define MEP_TST_CFG_MAX_MISS_CNT_M               GENMASK(11, 8)
#define MEP_TST_CFG_MAX_MISS_CNT_X(x)            (((x) & GENMASK(11, 8)) >> 8)

#define MEP_TST_CFG_MISS_CNT(x)                  (((x) << 4) & GENMASK(7, 4))
#define MEP_TST_CFG_MISS_CNT_M                   GENMASK(7, 4)
#define MEP_TST_CFG_MISS_CNT_X(x)                (((x) & GENMASK(7, 4)) >> 4)

#define MEP_TST_CFG_LOC_PERIOD(x)                ((x) & GENMASK(3, 0))
#define MEP_TST_CFG_LOC_PERIOD_M                 GENMASK(3, 0)
#define MEP_TST_CFG_LOC_PERIOD_X(x)              ((x) & GENMASK(3, 0))

/*      MEP:MRP:TST_PRIO_CFG */
#define MEP_TST_PRIO_CFG(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 24, 0, 1, 4)

#define MEP_TST_PRIO_CFG_OWN_PRIO(x)             (((x) << 16) & GENMASK(31, 16))
#define MEP_TST_PRIO_CFG_OWN_PRIO_M              GENMASK(31, 16)
#define MEP_TST_PRIO_CFG_OWN_PRIO_X(x)           (((x) & GENMASK(31, 16)) >> 16)

#define MEP_TST_PRIO_CFG_BEST_PRIO(x)            ((x) & GENMASK(15, 0))
#define MEP_TST_PRIO_CFG_BEST_PRIO_M             GENMASK(15, 0)
#define MEP_TST_PRIO_CFG_BEST_PRIO_X(x)          ((x) & GENMASK(15, 0))

/*      MEP:MRP:ITST_FWD_CTRL */
#define MEP_ITST_FWD_CTRL(g)      __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 28, 0, 1, 4)

#define MEP_ITST_FWD_CTRL_NXT_LOC_CPU_HITME(x)   (((x) << 4) & GENMASK(4, 4))
#define MEP_ITST_FWD_CTRL_NXT_LOC_CPU_HITME_M    GENMASK(4, 4)
#define MEP_ITST_FWD_CTRL_NXT_LOC_CPU_HITME_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define MEP_ITST_FWD_CTRL_REM_FWD_SEL(x)         (((x) << 2) & GENMASK(3, 2))
#define MEP_ITST_FWD_CTRL_REM_FWD_SEL_M          GENMASK(3, 2)
#define MEP_ITST_FWD_CTRL_REM_FWD_SEL_X(x)       (((x) & GENMASK(3, 2)) >> 2)

#define MEP_ITST_FWD_CTRL_OWN_FWD_SEL(x)         ((x) & GENMASK(1, 0))
#define MEP_ITST_FWD_CTRL_OWN_FWD_SEL_M          GENMASK(1, 0)
#define MEP_ITST_FWD_CTRL_OWN_FWD_SEL_X(x)       ((x) & GENMASK(1, 0))

/*      MEP:MRP:ITST_CFG */
#define MEP_ITST_CFG(g)           __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 32, 0, 1, 4)

#define MEP_ITST_CFG_ITST_CLR_MISS_CNT_ENA(x)    (((x) << 12) & GENMASK(12, 12))
#define MEP_ITST_CFG_ITST_CLR_MISS_CNT_ENA_M     GENMASK(12, 12)
#define MEP_ITST_CFG_ITST_CLR_MISS_CNT_ENA_X(x)  (((x) & GENMASK(12, 12)) >> 12)

#define MEP_ITST_CFG_ITST_MAX_MISS_CNT(x)        (((x) << 8) & GENMASK(11, 8))
#define MEP_ITST_CFG_ITST_MAX_MISS_CNT_M         GENMASK(11, 8)
#define MEP_ITST_CFG_ITST_MAX_MISS_CNT_X(x)      (((x) & GENMASK(11, 8)) >> 8)

#define MEP_ITST_CFG_ITST_MISS_CNT(x)            (((x) << 4) & GENMASK(7, 4))
#define MEP_ITST_CFG_ITST_MISS_CNT_M             GENMASK(7, 4)
#define MEP_ITST_CFG_ITST_MISS_CNT_X(x)          (((x) & GENMASK(7, 4)) >> 4)

#define MEP_ITST_CFG_ITST_LOC_PERIOD(x)          ((x) & GENMASK(3, 0))
#define MEP_ITST_CFG_ITST_LOC_PERIOD_M           GENMASK(3, 0)
#define MEP_ITST_CFG_ITST_LOC_PERIOD_X(x)        ((x) & GENMASK(3, 0))

/*      MEP:MRP:MRP_RX_SEQ_CFG */
#define MEP_MRP_RX_SEQ_CFG(g)     __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 36, 0, 1, 4)

#define MEP_MRP_RX_SEQ_CFG_RX_SEQ(x)             ((x) & GENMASK(15, 0))
#define MEP_MRP_RX_SEQ_CFG_RX_SEQ_M              GENMASK(15, 0)
#define MEP_MRP_RX_SEQ_CFG_RX_SEQ_X(x)           ((x) & GENMASK(15, 0))

/*      MEP:MRP:MRP_MAC_LSB */
#define MEP_MRP_MAC_LSB(g)        __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 40, 0, 1, 4)

/*      MEP:MRP:MRP_MAC_MSB */
#define MEP_MRP_MAC_MSB(g)        __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 44, 0, 1, 4)

#define MEP_MRP_MAC_MSB_MRP_MAC_MSB(x)           ((x) & GENMASK(15, 0))
#define MEP_MRP_MAC_MSB_MRP_MAC_MSB_M            GENMASK(15, 0)
#define MEP_MRP_MAC_MSB_MRP_MAC_MSB_X(x)         ((x) & GENMASK(15, 0))

/*      MEP:MRP:BEST_MAC_LSB */
#define MEP_BEST_MAC_LSB(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 48, 0, 1, 4)

/*      MEP:MRP:BEST_MAC_MSB */
#define MEP_BEST_MAC_MSB(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 52, 0, 1, 4)

#define MEP_BEST_MAC_MSB_BEST_MAC_MSB(x)         ((x) & GENMASK(15, 0))
#define MEP_BEST_MAC_MSB_BEST_MAC_MSB_M          GENMASK(15, 0)
#define MEP_BEST_MAC_MSB_BEST_MAC_MSB_X(x)       ((x) & GENMASK(15, 0))

/*      MEP:MRP:TST_RX_CNT */
#define MEP_TST_RX_CNT(g)         __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 56, 0, 1, 4)

/*      MEP:MRP:TST_RX_LOC_CNT */
#define MEP_TST_RX_LOC_CNT(g)     __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 60, 0, 1, 4)

/*      MEP:MRP:ITST_RX_CNT */
#define MEP_ITST_RX_CNT(g)        __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 64, 0, 1, 4)

/*      MEP:MRP:ITST_RX_LOC_CNT */
#define MEP_ITST_RX_LOC_CNT(g)    __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 68, 0, 1, 4)

/*      MEP:MRP:TST_DELTA_TS */
#define MEP_TST_DELTA_TS(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 72, 0, 1, 4)

/*      MEP:MRP:ITST_DELTA_TS */
#define MEP_ITST_DELTA_TS(g)      __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 76, 0, 1, 4)

/*      MEP:MRP:TST_RX_TS */
#define MEP_TST_RX_TS(g)          __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 80, 0, 1, 4)

/*      MEP:MRP:TST_TX_TS */
#define MEP_TST_TX_TS(g)          __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 84, 0, 1, 4)

/*      MEP:MRP:ITST_RX_TS */
#define MEP_ITST_RX_TS(g)         __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 88, 0, 1, 4)

/*      MEP:MRP:ITST_TX_TS */
#define MEP_ITST_TX_TS(g)         __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 92, 0, 1, 4)

/*      MEP:MRP:MRP_STICKY */
#define MEP_MRP_STICKY(g)         __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 96, 0, 1, 4)

#define MEP_MRP_STICKY_MRP_RX_STICKY(x)          (((x) << 6) & GENMASK(6, 6))
#define MEP_MRP_STICKY_MRP_RX_STICKY_M           GENMASK(6, 6)
#define MEP_MRP_STICKY_MRP_RX_STICKY_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define MEP_MRP_STICKY_MRP_RX_PROC_STICKY(x)     (((x) << 5) & GENMASK(5, 5))
#define MEP_MRP_STICKY_MRP_RX_PROC_STICKY_M      GENMASK(5, 5)
#define MEP_MRP_STICKY_MRP_RX_PROC_STICKY_X(x)   (((x) & GENMASK(5, 5)) >> 5)

#define MEP_MRP_STICKY_DMAC_ERR_STICKY(x)        (((x) << 4) & GENMASK(4, 4))
#define MEP_MRP_STICKY_DMAC_ERR_STICKY_M         GENMASK(4, 4)
#define MEP_MRP_STICKY_DMAC_ERR_STICKY_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define MEP_MRP_STICKY_VERSION_ERR_STICKY(x)     (((x) << 3) & GENMASK(3, 3))
#define MEP_MRP_STICKY_VERSION_ERR_STICKY_M      GENMASK(3, 3)
#define MEP_MRP_STICKY_VERSION_ERR_STICKY_X(x)   (((x) & GENMASK(3, 3)) >> 3)

#define MEP_MRP_STICKY_RX_SEQ_ERR_STICKY(x)      (((x) << 2) & GENMASK(2, 2))
#define MEP_MRP_STICKY_RX_SEQ_ERR_STICKY_M       GENMASK(2, 2)
#define MEP_MRP_STICKY_RX_SEQ_ERR_STICKY_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define MEP_MRP_STICKY_ITST_LOC_STICKY(x)        (((x) << 1) & GENMASK(1, 1))
#define MEP_MRP_STICKY_ITST_LOC_STICKY_M         GENMASK(1, 1)
#define MEP_MRP_STICKY_ITST_LOC_STICKY_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MRP_STICKY_TST_LOC_STICKY(x)         ((x) & GENMASK(0, 0))
#define MEP_MRP_STICKY_TST_LOC_STICKY_M          GENMASK(0, 0)
#define MEP_MRP_STICKY_TST_LOC_STICKY_X(x)       ((x) & GENMASK(0, 0))

/*      MEP:MRP:MRP_INTR_ENA */
#define MEP_MRP_INTR_ENA(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 100, 0, 1, 4)

#define MEP_MRP_INTR_ENA_ITST_LOC_INTR_ENA(x)    (((x) << 1) & GENMASK(1, 1))
#define MEP_MRP_INTR_ENA_ITST_LOC_INTR_ENA_M     GENMASK(1, 1)
#define MEP_MRP_INTR_ENA_ITST_LOC_INTR_ENA_X(x)  (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MRP_INTR_ENA_TST_LOC_INTR_ENA(x)     ((x) & GENMASK(0, 0))
#define MEP_MRP_INTR_ENA_TST_LOC_INTR_ENA_M      GENMASK(0, 0)
#define MEP_MRP_INTR_ENA_TST_LOC_INTR_ENA_X(x)   ((x) & GENMASK(0, 0))

/*      MEP:DLR:DLR_CTRL */
#define MEP_DLR_CTRL(g)           __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 0, 0, 1, 4)

#define MEP_DLR_CTRL_ADV_CHK_SEQ_ENA(x)          (((x) << 14) & GENMASK(14, 14))
#define MEP_DLR_CTRL_ADV_CHK_SEQ_ENA_M           GENMASK(14, 14)
#define MEP_DLR_CTRL_ADV_CHK_SEQ_ENA_X(x)        (((x) & GENMASK(14, 14)) >> 14)

#define MEP_DLR_CTRL_BCN_CHK_SEQ_ENA(x)          (((x) << 13) & GENMASK(13, 13))
#define MEP_DLR_CTRL_BCN_CHK_SEQ_ENA_M           GENMASK(13, 13)
#define MEP_DLR_CTRL_BCN_CHK_SEQ_ENA_X(x)        (((x) & GENMASK(13, 13)) >> 13)

#define MEP_DLR_CTRL_CHK_DMAC_ENA(x)             (((x) << 12) & GENMASK(12, 12))
#define MEP_DLR_CTRL_CHK_DMAC_ENA_M              GENMASK(12, 12)
#define MEP_DLR_CTRL_CHK_DMAC_ENA_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define MEP_DLR_CTRL_CHK_VERSION_ENA(x)          (((x) << 11) & GENMASK(11, 11))
#define MEP_DLR_CTRL_CHK_VERSION_ENA_M           GENMASK(11, 11)
#define MEP_DLR_CTRL_CHK_VERSION_ENA_X(x)        (((x) & GENMASK(11, 11)) >> 11)

#define MEP_DLR_CTRL_DLR_VERSION(x)              (((x) << 3) & GENMASK(10, 3))
#define MEP_DLR_CTRL_DLR_VERSION_M               GENMASK(10, 3)
#define MEP_DLR_CTRL_DLR_VERSION_X(x)            (((x) & GENMASK(10, 3)) >> 3)

#define MEP_DLR_CTRL_DLR_ADV_ENA(x)              (((x) << 2) & GENMASK(2, 2))
#define MEP_DLR_CTRL_DLR_ADV_ENA_M               GENMASK(2, 2)
#define MEP_DLR_CTRL_DLR_ADV_ENA_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define MEP_DLR_CTRL_DLR_BCN_ENA(x)              (((x) << 1) & GENMASK(1, 1))
#define MEP_DLR_CTRL_DLR_BCN_ENA_M               GENMASK(1, 1)
#define MEP_DLR_CTRL_DLR_BCN_ENA_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define MEP_DLR_CTRL_DLR_ENA(x)                  ((x) & GENMASK(0, 0))
#define MEP_DLR_CTRL_DLR_ENA_M                   GENMASK(0, 0)
#define MEP_DLR_CTRL_DLR_ENA_X(x)                ((x) & GENMASK(0, 0))

/*      MEP:DLR:DLR_FWD_CTRL */
#define MEP_DLR_FWD_CTRL(g)       __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 4, 0, 1, 4)

#define MEP_DLR_FWD_CTRL_DLR_MASK_ENA(x)         (((x) << 24) & GENMASK(24, 24))
#define MEP_DLR_FWD_CTRL_DLR_MASK_ENA_M          GENMASK(24, 24)
#define MEP_DLR_FWD_CTRL_DLR_MASK_ENA_X(x)       (((x) & GENMASK(24, 24)) >> 24)

#define MEP_DLR_FWD_CTRL_ERR_FWD_SEL(x)          (((x) << 22) & GENMASK(23, 22))
#define MEP_DLR_FWD_CTRL_ERR_FWD_SEL_M           GENMASK(23, 22)
#define MEP_DLR_FWD_CTRL_ERR_FWD_SEL_X(x)        (((x) & GENMASK(23, 22)) >> 22)

#define MEP_DLR_FWD_CTRL_DLR_BCN_FWD_SEL(x)      (((x) << 20) & GENMASK(21, 20))
#define MEP_DLR_FWD_CTRL_DLR_BCN_FWD_SEL_M       GENMASK(21, 20)
#define MEP_DLR_FWD_CTRL_DLR_BCN_FWD_SEL_X(x)    (((x) & GENMASK(21, 20)) >> 20)

#define MEP_DLR_FWD_CTRL_DLR_NCREQ_FWD_SEL(x)    (((x) << 18) & GENMASK(19, 18))
#define MEP_DLR_FWD_CTRL_DLR_NCREQ_FWD_SEL_M     GENMASK(19, 18)
#define MEP_DLR_FWD_CTRL_DLR_NCREQ_FWD_SEL_X(x)  (((x) & GENMASK(19, 18)) >> 18)

#define MEP_DLR_FWD_CTRL_DLR_NCRSP_FWD_SEL(x)    (((x) << 16) & GENMASK(17, 16))
#define MEP_DLR_FWD_CTRL_DLR_NCRSP_FWD_SEL_M     GENMASK(17, 16)
#define MEP_DLR_FWD_CTRL_DLR_NCRSP_FWD_SEL_X(x)  (((x) & GENMASK(17, 16)) >> 16)

#define MEP_DLR_FWD_CTRL_DLR_LINK_FWD_SEL(x)     (((x) << 14) & GENMASK(15, 14))
#define MEP_DLR_FWD_CTRL_DLR_LINK_FWD_SEL_M      GENMASK(15, 14)
#define MEP_DLR_FWD_CTRL_DLR_LINK_FWD_SEL_X(x)   (((x) & GENMASK(15, 14)) >> 14)

#define MEP_DLR_FWD_CTRL_DLR_LOC_FWD_SEL(x)      (((x) << 12) & GENMASK(13, 12))
#define MEP_DLR_FWD_CTRL_DLR_LOC_FWD_SEL_M       GENMASK(13, 12)
#define MEP_DLR_FWD_CTRL_DLR_LOC_FWD_SEL_X(x)    (((x) & GENMASK(13, 12)) >> 12)

#define MEP_DLR_FWD_CTRL_DLR_ANN_FWD_SEL(x)      (((x) << 10) & GENMASK(11, 10))
#define MEP_DLR_FWD_CTRL_DLR_ANN_FWD_SEL_M       GENMASK(11, 10)
#define MEP_DLR_FWD_CTRL_DLR_ANN_FWD_SEL_X(x)    (((x) & GENMASK(11, 10)) >> 10)

#define MEP_DLR_FWD_CTRL_DLR_SIGN_FWD_SEL(x)     (((x) << 8) & GENMASK(9, 8))
#define MEP_DLR_FWD_CTRL_DLR_SIGN_FWD_SEL_M      GENMASK(9, 8)
#define MEP_DLR_FWD_CTRL_DLR_SIGN_FWD_SEL_X(x)   (((x) & GENMASK(9, 8)) >> 8)

#define MEP_DLR_FWD_CTRL_DLR_ADV_FWD_SEL(x)      (((x) << 6) & GENMASK(7, 6))
#define MEP_DLR_FWD_CTRL_DLR_ADV_FWD_SEL_M       GENMASK(7, 6)
#define MEP_DLR_FWD_CTRL_DLR_ADV_FWD_SEL_X(x)    (((x) & GENMASK(7, 6)) >> 6)

#define MEP_DLR_FWD_CTRL_DLR_FLSH_FWD_SEL(x)     (((x) << 4) & GENMASK(5, 4))
#define MEP_DLR_FWD_CTRL_DLR_FLSH_FWD_SEL_M      GENMASK(5, 4)
#define MEP_DLR_FWD_CTRL_DLR_FLSH_FWD_SEL_X(x)   (((x) & GENMASK(5, 4)) >> 4)

#define MEP_DLR_FWD_CTRL_DLR_LRN_FWD_SEL(x)      (((x) << 2) & GENMASK(3, 2))
#define MEP_DLR_FWD_CTRL_DLR_LRN_FWD_SEL_M       GENMASK(3, 2)
#define MEP_DLR_FWD_CTRL_DLR_LRN_FWD_SEL_X(x)    (((x) & GENMASK(3, 2)) >> 2)

#define MEP_DLR_FWD_CTRL_OTHER_FWD_SEL(x)        ((x) & GENMASK(1, 0))
#define MEP_DLR_FWD_CTRL_OTHER_FWD_SEL_M         GENMASK(1, 0)
#define MEP_DLR_FWD_CTRL_OTHER_FWD_SEL_X(x)      ((x) & GENMASK(1, 0))

/*      MEP:DLR:DLR_MASK_CFG */
#define MEP_DLR_MASK_CFG(g)       __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 8, 0, 1, 4)

#define MEP_DLR_MASK_CFG_PORTMASK(x)             ((x) & GENMASK(7, 0))
#define MEP_DLR_MASK_CFG_PORTMASK_M              GENMASK(7, 0)
#define MEP_DLR_MASK_CFG_PORTMASK_X(x)           ((x) & GENMASK(7, 0))

/*      MEP:DLR:BCN_FWD_CTRL */
#define MEP_BCN_FWD_CTRL(g)       __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 12, 0, 1, 4)

#define MEP_BCN_FWD_CTRL_NXT_FAULT_CPU_ONCE(x)   (((x) << 9) & GENMASK(9, 9))
#define MEP_BCN_FWD_CTRL_NXT_FAULT_CPU_ONCE_M    GENMASK(9, 9)
#define MEP_BCN_FWD_CTRL_NXT_FAULT_CPU_ONCE_X(x) (((x) & GENMASK(9, 9)) >> 9)

#define MEP_BCN_FWD_CTRL_NXT_LOC_CPU_ONCE(x)     (((x) << 8) & GENMASK(8, 8))
#define MEP_BCN_FWD_CTRL_NXT_LOC_CPU_ONCE_M      GENMASK(8, 8)
#define MEP_BCN_FWD_CTRL_NXT_LOC_CPU_ONCE_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define MEP_BCN_FWD_CTRL_HI_PRIO_FWD_SEL(x)      (((x) << 6) & GENMASK(7, 6))
#define MEP_BCN_FWD_CTRL_HI_PRIO_FWD_SEL_M       GENMASK(7, 6)
#define MEP_BCN_FWD_CTRL_HI_PRIO_FWD_SEL_X(x)    (((x) & GENMASK(7, 6)) >> 6)

#define MEP_BCN_FWD_CTRL_LO_PRIO_FWD_SEL(x)      (((x) << 4) & GENMASK(5, 4))
#define MEP_BCN_FWD_CTRL_LO_PRIO_FWD_SEL_M       GENMASK(5, 4)
#define MEP_BCN_FWD_CTRL_LO_PRIO_FWD_SEL_X(x)    (((x) & GENMASK(5, 4)) >> 4)

#define MEP_BCN_FWD_CTRL_ACT_FWD_SEL(x)          (((x) << 2) & GENMASK(3, 2))
#define MEP_BCN_FWD_CTRL_ACT_FWD_SEL_M           GENMASK(3, 2)
#define MEP_BCN_FWD_CTRL_ACT_FWD_SEL_X(x)        (((x) & GENMASK(3, 2)) >> 2)

#define MEP_BCN_FWD_CTRL_ACT_FAULT_FWD_SEL(x)    ((x) & GENMASK(1, 0))
#define MEP_BCN_FWD_CTRL_ACT_FAULT_FWD_SEL_M     GENMASK(1, 0)
#define MEP_BCN_FWD_CTRL_ACT_FAULT_FWD_SEL_X(x)  ((x) & GENMASK(1, 0))

/*      MEP:DLR:BCN_CFG */
#define MEP_BCN_CFG(g)            __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 16, 0, 1, 4)

#define MEP_BCN_CFG_FAULT_ENA(x)                 (((x) << 13) & GENMASK(13, 13))
#define MEP_BCN_CFG_FAULT_ENA_M                  GENMASK(13, 13)
#define MEP_BCN_CFG_FAULT_ENA_X(x)               (((x) & GENMASK(13, 13)) >> 13)

#define MEP_BCN_CFG_CLR_MISS_CNT_ENA(x)          (((x) << 12) & GENMASK(12, 12))
#define MEP_BCN_CFG_CLR_MISS_CNT_ENA_M           GENMASK(12, 12)
#define MEP_BCN_CFG_CLR_MISS_CNT_ENA_X(x)        (((x) & GENMASK(12, 12)) >> 12)

#define MEP_BCN_CFG_MAX_MISS_CNT(x)              (((x) << 8) & GENMASK(11, 8))
#define MEP_BCN_CFG_MAX_MISS_CNT_M               GENMASK(11, 8)
#define MEP_BCN_CFG_MAX_MISS_CNT_X(x)            (((x) & GENMASK(11, 8)) >> 8)

#define MEP_BCN_CFG_MISS_CNT(x)                  (((x) << 4) & GENMASK(7, 4))
#define MEP_BCN_CFG_MISS_CNT_M                   GENMASK(7, 4)
#define MEP_BCN_CFG_MISS_CNT_X(x)                (((x) & GENMASK(7, 4)) >> 4)

#define MEP_BCN_CFG_LOC_PERIOD(x)                ((x) & GENMASK(3, 0))
#define MEP_BCN_CFG_LOC_PERIOD_M                 GENMASK(3, 0)
#define MEP_BCN_CFG_LOC_PERIOD_X(x)              ((x) & GENMASK(3, 0))

/*      MEP:DLR:ADV_FWD_CTRL */
#define MEP_ADV_FWD_CTRL(g)       __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 20, 0, 1, 4)

#define MEP_ADV_FWD_CTRL_NXT_ADV_LOC_CPU_ONCE(x) (((x) << 6) & GENMASK(6, 6))
#define MEP_ADV_FWD_CTRL_NXT_ADV_LOC_CPU_ONCE_M  GENMASK(6, 6)
#define MEP_ADV_FWD_CTRL_NXT_ADV_LOC_CPU_ONCE_X(x) (((x) & GENMASK(6, 6)) >> 6)

#define MEP_ADV_FWD_CTRL_GW_HI_PRIO_FWD_SEL(x)   (((x) << 4) & GENMASK(5, 4))
#define MEP_ADV_FWD_CTRL_GW_HI_PRIO_FWD_SEL_M    GENMASK(5, 4)
#define MEP_ADV_FWD_CTRL_GW_HI_PRIO_FWD_SEL_X(x) (((x) & GENMASK(5, 4)) >> 4)

#define MEP_ADV_FWD_CTRL_GW_LO_PRIO_FWD_SEL(x)   (((x) << 2) & GENMASK(3, 2))
#define MEP_ADV_FWD_CTRL_GW_LO_PRIO_FWD_SEL_M    GENMASK(3, 2)
#define MEP_ADV_FWD_CTRL_GW_LO_PRIO_FWD_SEL_X(x) (((x) & GENMASK(3, 2)) >> 2)

#define MEP_ADV_FWD_CTRL_GW_FWD_SEL(x)           ((x) & GENMASK(1, 0))
#define MEP_ADV_FWD_CTRL_GW_FWD_SEL_M            GENMASK(1, 0)
#define MEP_ADV_FWD_CTRL_GW_FWD_SEL_X(x)         ((x) & GENMASK(1, 0))

/*      MEP:DLR:ADV_CFG */
#define MEP_ADV_CFG(g)            __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 24, 0, 1, 4)

#define MEP_ADV_CFG_ADV_CLR_MISS_CNT_ENA(x)      (((x) << 12) & GENMASK(12, 12))
#define MEP_ADV_CFG_ADV_CLR_MISS_CNT_ENA_M       GENMASK(12, 12)
#define MEP_ADV_CFG_ADV_CLR_MISS_CNT_ENA_X(x)    (((x) & GENMASK(12, 12)) >> 12)

#define MEP_ADV_CFG_ADV_MAX_MISS_CNT(x)          (((x) << 8) & GENMASK(11, 8))
#define MEP_ADV_CFG_ADV_MAX_MISS_CNT_M           GENMASK(11, 8)
#define MEP_ADV_CFG_ADV_MAX_MISS_CNT_X(x)        (((x) & GENMASK(11, 8)) >> 8)

#define MEP_ADV_CFG_ADV_MISS_CNT(x)              (((x) << 4) & GENMASK(7, 4))
#define MEP_ADV_CFG_ADV_MISS_CNT_M               GENMASK(7, 4)
#define MEP_ADV_CFG_ADV_MISS_CNT_X(x)            (((x) & GENMASK(7, 4)) >> 4)

#define MEP_ADV_CFG_ADV_LOC_PERIOD(x)            ((x) & GENMASK(3, 0))
#define MEP_ADV_CFG_ADV_LOC_PERIOD_M             GENMASK(3, 0)
#define MEP_ADV_CFG_ADV_LOC_PERIOD_X(x)          ((x) & GENMASK(3, 0))

/*      MEP:DLR:DLR_RX_SEQ_CFG */
#define MEP_DLR_RX_SEQ_CFG(g)     __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 28, 0, 1, 4)

/*      MEP:DLR:DLR_PREC_CFG */
#define MEP_DLR_PREC_CFG(g)       __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 32, 0, 1, 4)

#define MEP_DLR_PREC_CFG_GW_PREC(x)              (((x) << 8) & GENMASK(15, 8))
#define MEP_DLR_PREC_CFG_GW_PREC_M               GENMASK(15, 8)
#define MEP_DLR_PREC_CFG_GW_PREC_X(x)            (((x) & GENMASK(15, 8)) >> 8)

#define MEP_DLR_PREC_CFG_ACT_PREC(x)             ((x) & GENMASK(7, 0))
#define MEP_DLR_PREC_CFG_ACT_PREC_M              GENMASK(7, 0)
#define MEP_DLR_PREC_CFG_ACT_PREC_X(x)           ((x) & GENMASK(7, 0))

/*      MEP:DLR:DLR_MAC_LSB */
#define MEP_DLR_MAC_LSB(g)        __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 36, 0, 1, 4)

/*      MEP:DLR:DLR_MAC_MSB */
#define MEP_DLR_MAC_MSB(g)        __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 40, 0, 1, 4)

#define MEP_DLR_MAC_MSB_DLR_MAC_MSB(x)           ((x) & GENMASK(15, 0))
#define MEP_DLR_MAC_MSB_DLR_MAC_MSB_M            GENMASK(15, 0)
#define MEP_DLR_MAC_MSB_DLR_MAC_MSB_X(x)         ((x) & GENMASK(15, 0))

/*      MEP:DLR:GW_MAC_LSB */
#define MEP_GW_MAC_LSB(g)         __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 44, 0, 1, 4)

/*      MEP:DLR:GW_MAC_MSB */
#define MEP_GW_MAC_MSB(g)         __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 48, 0, 1, 4)

#define MEP_GW_MAC_MSB_GW_MAC_MSB(x)             ((x) & GENMASK(15, 0))
#define MEP_GW_MAC_MSB_GW_MAC_MSB_M              GENMASK(15, 0)
#define MEP_GW_MAC_MSB_GW_MAC_MSB_X(x)           ((x) & GENMASK(15, 0))

/*      MEP:DLR:BCN_RX_CNT */
#define MEP_BCN_RX_CNT(g)         __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 52, 0, 1, 4)

/*      MEP:DLR:BCN_RX_LOC_CNT */
#define MEP_BCN_RX_LOC_CNT(g)     __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 56, 0, 1, 4)

/*      MEP:DLR:ADV_RX_CNT */
#define MEP_ADV_RX_CNT(g)         __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 60, 0, 1, 4)

/*      MEP:DLR:ADV_RX_LOC_CNT */
#define MEP_ADV_RX_LOC_CNT(g)     __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 64, 0, 1, 4)

/*      MEP:DLR:DLR_STICKY */
#define MEP_DLR_STICKY(g)         __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 68, 0, 1, 4)

#define MEP_DLR_STICKY_DLR_RX_STICKY(x)          (((x) << 6) & GENMASK(6, 6))
#define MEP_DLR_STICKY_DLR_RX_STICKY_M           GENMASK(6, 6)
#define MEP_DLR_STICKY_DLR_RX_STICKY_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define MEP_DLR_STICKY_DLR_RX_PROC_STICKY(x)     (((x) << 5) & GENMASK(5, 5))
#define MEP_DLR_STICKY_DLR_RX_PROC_STICKY_M      GENMASK(5, 5)
#define MEP_DLR_STICKY_DLR_RX_PROC_STICKY_X(x)   (((x) & GENMASK(5, 5)) >> 5)

#define MEP_DLR_STICKY_DMAC_ERR_STICKY(x)        (((x) << 4) & GENMASK(4, 4))
#define MEP_DLR_STICKY_DMAC_ERR_STICKY_M         GENMASK(4, 4)
#define MEP_DLR_STICKY_DMAC_ERR_STICKY_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define MEP_DLR_STICKY_VERSION_ERR_STICKY(x)     (((x) << 3) & GENMASK(3, 3))
#define MEP_DLR_STICKY_VERSION_ERR_STICKY_M      GENMASK(3, 3)
#define MEP_DLR_STICKY_VERSION_ERR_STICKY_X(x)   (((x) & GENMASK(3, 3)) >> 3)

#define MEP_DLR_STICKY_RX_SEQ_ERR_STICKY(x)      (((x) << 2) & GENMASK(2, 2))
#define MEP_DLR_STICKY_RX_SEQ_ERR_STICKY_M       GENMASK(2, 2)
#define MEP_DLR_STICKY_RX_SEQ_ERR_STICKY_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define MEP_DLR_STICKY_ADV_LOC_STICKY(x)         (((x) << 1) & GENMASK(1, 1))
#define MEP_DLR_STICKY_ADV_LOC_STICKY_M          GENMASK(1, 1)
#define MEP_DLR_STICKY_ADV_LOC_STICKY_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define MEP_DLR_STICKY_BCN_LOC_STICKY(x)         ((x) & GENMASK(0, 0))
#define MEP_DLR_STICKY_BCN_LOC_STICKY_M          GENMASK(0, 0)
#define MEP_DLR_STICKY_BCN_LOC_STICKY_X(x)       ((x) & GENMASK(0, 0))

/*      MEP:DLR:DLR_INTR_ENA */
#define MEP_DLR_INTR_ENA(g)       __REG(TARGET_MEP,\
					0, 1, 2048, g, 8, 128, 72, 0, 1, 4)

#define MEP_DLR_INTR_ENA_ADV_LOC_INTR_ENA(x)     (((x) << 1) & GENMASK(1, 1))
#define MEP_DLR_INTR_ENA_ADV_LOC_INTR_ENA_M      GENMASK(1, 1)
#define MEP_DLR_INTR_ENA_ADV_LOC_INTR_ENA_X(x)   (((x) & GENMASK(1, 1)) >> 1)

#define MEP_DLR_INTR_ENA_BCN_LOC_INTR_ENA(x)     ((x) & GENMASK(0, 0))
#define MEP_DLR_INTR_ENA_BCN_LOC_INTR_ENA_M      GENMASK(0, 0)
#define MEP_DLR_INTR_ENA_BCN_LOC_INTR_ENA_X(x)   ((x) & GENMASK(0, 0))

/*      ORG:ORG:IF_CTRL */
#define ORG_IF_CTRL(t)            __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 0, 0, 1, 4)

#define ORG_IF_CTRL_IF_CTRL(x)                   ((x) & GENMASK(3, 0))
#define ORG_IF_CTRL_IF_CTRL_M                    GENMASK(3, 0)
#define ORG_IF_CTRL_IF_CTRL_X(x)                 ((x) & GENMASK(3, 0))

/*      ORG:ORG:IF_CFGSTAT */
#define ORG_IF_CFGSTAT(t)         __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 4, 0, 1, 4)

#define ORG_IF_CFGSTAT_IF_NUM(x)                 (((x) << 24) & GENMASK(31, 24))
#define ORG_IF_CFGSTAT_IF_NUM_M                  GENMASK(31, 24)
#define ORG_IF_CFGSTAT_IF_NUM_X(x)               (((x) & GENMASK(31, 24)) >> 24)

#define ORG_IF_CFGSTAT_IF_STAT(x)                (((x) << 16) & GENMASK(16, 16))
#define ORG_IF_CFGSTAT_IF_STAT_M                 GENMASK(16, 16)
#define ORG_IF_CFGSTAT_IF_STAT_X(x)              (((x) & GENMASK(16, 16)) >> 16)

#define ORG_IF_CFGSTAT_IF_CFG(x)                 ((x) & GENMASK(3, 0))
#define ORG_IF_CFGSTAT_IF_CFG_M                  GENMASK(3, 0)
#define ORG_IF_CFGSTAT_IF_CFG_X(x)               ((x) & GENMASK(3, 0))

/*      ORG:ORG:ORG_CFG */
#define ORG_ORG_CFG(t)            __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 8, 0, 1, 4)

#define ORG_ORG_CFG_BLOCKING_ENA(x)              (((x) << 2) & GENMASK(2, 2))
#define ORG_ORG_CFG_BLOCKING_ENA_M               GENMASK(2, 2)
#define ORG_ORG_CFG_BLOCKING_ENA_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define ORG_ORG_CFG_DROP_MODE_ENA(x)             (((x) << 1) & GENMASK(1, 1))
#define ORG_ORG_CFG_DROP_MODE_ENA_M              GENMASK(1, 1)
#define ORG_ORG_CFG_DROP_MODE_ENA_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define ORG_ORG_CFG_FAST_WR(x)                   ((x) & GENMASK(0, 0))
#define ORG_ORG_CFG_FAST_WR_M                    GENMASK(0, 0)
#define ORG_ORG_CFG_FAST_WR_X(x)                 ((x) & GENMASK(0, 0))

/*      ORG:ORG:ERR_CNTS */
#define ORG_ERR_CNTS(t)           __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 12, 0, 1, 4)

#define ORG_ERR_CNTS_ERR_TGT_BUSY(x)             (((x) << 16) & GENMASK(19, 16))
#define ORG_ERR_CNTS_ERR_TGT_BUSY_M              GENMASK(19, 16)
#define ORG_ERR_CNTS_ERR_TGT_BUSY_X(x)           (((x) & GENMASK(19, 16)) >> 16)

#define ORG_ERR_CNTS_ERR_WD_DROP_ORG(x)          (((x) << 12) & GENMASK(15, 12))
#define ORG_ERR_CNTS_ERR_WD_DROP_ORG_M           GENMASK(15, 12)
#define ORG_ERR_CNTS_ERR_WD_DROP_ORG_X(x)        (((x) & GENMASK(15, 12)) >> 12)

#define ORG_ERR_CNTS_ERR_WD_DROP(x)              (((x) << 8) & GENMASK(11, 8))
#define ORG_ERR_CNTS_ERR_WD_DROP_M               GENMASK(11, 8)
#define ORG_ERR_CNTS_ERR_WD_DROP_X(x)            (((x) & GENMASK(11, 8)) >> 8)

#define ORG_ERR_CNTS_ERR_NO_ACTION(x)            (((x) << 4) & GENMASK(7, 4))
#define ORG_ERR_CNTS_ERR_NO_ACTION_M             GENMASK(7, 4)
#define ORG_ERR_CNTS_ERR_NO_ACTION_X(x)          (((x) & GENMASK(7, 4)) >> 4)

#define ORG_ERR_CNTS_ERR_UTM(x)                  ((x) & GENMASK(3, 0))
#define ORG_ERR_CNTS_ERR_UTM_M                   GENMASK(3, 0)
#define ORG_ERR_CNTS_ERR_UTM_X(x)                ((x) & GENMASK(3, 0))

/*      ORG:ORG:TIMEOUT_CFG */
#define ORG_TIMEOUT_CFG(t)        __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 16, 0, 1, 4)

#define ORG_TIMEOUT_CFG_TIMEOUT_CFG(x)           ((x) & GENMASK(11, 0))
#define ORG_TIMEOUT_CFG_TIMEOUT_CFG_M            GENMASK(11, 0)
#define ORG_TIMEOUT_CFG_TIMEOUT_CFG_X(x)         ((x) & GENMASK(11, 0))

/*      ORG:ORG:GPR */
#define ORG_GPR(t)                __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 20, 0, 1, 4)

/*      ORG:ORG:MAILBOX_SET */
#define ORG_MAILBOX_SET(t)        __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 24, 0, 1, 4)

/*      ORG:ORG:MAILBOX_CLR */
#define ORG_MAILBOX_CLR(t)        __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 28, 0, 1, 4)

/*      ORG:ORG:MAILBOX */
#define ORG_MAILBOX(t)            __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 32, 0, 1, 4)

/*      ORG:ORG:SEMA_CFG */
#define ORG_SEMA_CFG(t)           __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 36, 0, 1, 4)

#define ORG_SEMA_CFG_SEMA_INTR_POL(x)            ((x) & GENMASK(7, 0))
#define ORG_SEMA_CFG_SEMA_INTR_POL_M             GENMASK(7, 0)
#define ORG_SEMA_CFG_SEMA_INTR_POL_X(x)          ((x) & GENMASK(7, 0))

/*      ORG:ORG:SEMA */
#define ORG_SEMA(t, r)            __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 40, r, 8, 4)

#define ORG_SEMA_SEMA(x)                         ((x) & GENMASK(0, 0))
#define ORG_SEMA_SEMA_M                          GENMASK(0, 0)
#define ORG_SEMA_SEMA_X(x)                       ((x) & GENMASK(0, 0))

/*      PTP:PTP_CFG:PIN_INTR */
#define PTP_PIN_INTR              __REG(TARGET_PTP,\
					0, 1, 512, 0, 1, 16, 0, 0, 1, 4)

#define PTP_PIN_INTR_INTR_PTP(x)                 ((x) & GENMASK(7, 0))
#define PTP_PIN_INTR_INTR_PTP_M                  GENMASK(7, 0)
#define PTP_PIN_INTR_INTR_PTP_X(x)               ((x) & GENMASK(7, 0))

/*      PTP:PTP_CFG:PIN_INTR_ENA */
#define PTP_PIN_INTR_ENA          __REG(TARGET_PTP,\
					0, 1, 512, 0, 1, 16, 4, 0, 1, 4)

#define PTP_PIN_INTR_ENA_INTR_ENA(x)             ((x) & GENMASK(7, 0))
#define PTP_PIN_INTR_ENA_INTR_ENA_M              GENMASK(7, 0)
#define PTP_PIN_INTR_ENA_INTR_ENA_X(x)           ((x) & GENMASK(7, 0))

/*      PTP:PTP_CFG:INTR_IDENT */
#define PTP_INTR_IDENT            __REG(TARGET_PTP,\
					0, 1, 512, 0, 1, 16, 8, 0, 1, 4)

#define PTP_INTR_IDENT_INTR_IDENT(x)             ((x) & GENMASK(7, 0))
#define PTP_INTR_IDENT_INTR_IDENT_M              GENMASK(7, 0)
#define PTP_INTR_IDENT_INTR_IDENT_X(x)           ((x) & GENMASK(7, 0))

/*      PTP:PTP_CFG:DOM_CFG */
#define PTP_DOM_CFG               __REG(TARGET_PTP,\
					0, 1, 512, 0, 1, 16, 12, 0, 1, 4)

#define PTP_DOM_CFG_ENA(x)                       (((x) << 9) & GENMASK(11, 9))
#define PTP_DOM_CFG_ENA_M                        GENMASK(11, 9)
#define PTP_DOM_CFG_ENA_X(x)                     (((x) & GENMASK(11, 9)) >> 9)

#define PTP_DOM_CFG_HOLD(x)                      (((x) << 6) & GENMASK(8, 6))
#define PTP_DOM_CFG_HOLD_M                       GENMASK(8, 6)
#define PTP_DOM_CFG_HOLD_X(x)                    (((x) & GENMASK(8, 6)) >> 6)

#define PTP_DOM_CFG_TOD_FREEZE(x)                (((x) << 3) & GENMASK(5, 3))
#define PTP_DOM_CFG_TOD_FREEZE_M                 GENMASK(5, 3)
#define PTP_DOM_CFG_TOD_FREEZE_X(x)              (((x) & GENMASK(5, 3)) >> 3)

#define PTP_DOM_CFG_CLKCFG_DIS(x)                ((x) & GENMASK(2, 0))
#define PTP_DOM_CFG_CLKCFG_DIS_M                 GENMASK(2, 0)
#define PTP_DOM_CFG_CLKCFG_DIS_X(x)              ((x) & GENMASK(2, 0))

/*      PTP:PTP_TOD_DOMAINS:CLK_PER_CFG */
#define PTP_CLK_PER_CFG(g, r)     __REG(TARGET_PTP,\
					0, 1, 528, g, 3, 28, 0, r, 2, 4)

/*      PTP:PTP_TOD_DOMAINS:CUR_NSEC */
#define PTP_CUR_NSEC(g)           __REG(TARGET_PTP,\
					0, 1, 528, g, 3, 28, 8, 0, 1, 4)

#define PTP_CUR_NSEC_CUR_NSEC(x)                 ((x) & GENMASK(29, 0))
#define PTP_CUR_NSEC_CUR_NSEC_M                  GENMASK(29, 0)
#define PTP_CUR_NSEC_CUR_NSEC_X(x)               ((x) & GENMASK(29, 0))

/*      PTP:PTP_TOD_DOMAINS:CUR_NSEC_FRAC */
#define PTP_CUR_NSEC_FRAC(g)      __REG(TARGET_PTP,\
					0, 1, 528, g, 3, 28, 12, 0, 1, 4)

#define PTP_CUR_NSEC_FRAC_CUR_NSEC_FRAC(x)       ((x) & GENMASK(7, 0))
#define PTP_CUR_NSEC_FRAC_CUR_NSEC_FRAC_M        GENMASK(7, 0)
#define PTP_CUR_NSEC_FRAC_CUR_NSEC_FRAC_X(x)     ((x) & GENMASK(7, 0))

/*      PTP:PTP_TOD_DOMAINS:CUR_SEC_LSB */
#define PTP_CUR_SEC_LSB(g)        __REG(TARGET_PTP,\
					0, 1, 528, g, 3, 28, 16, 0, 1, 4)

/*      PTP:PTP_TOD_DOMAINS:CUR_SEC_MSB */
#define PTP_CUR_SEC_MSB(g)        __REG(TARGET_PTP,\
					0, 1, 528, g, 3, 28, 20, 0, 1, 4)

#define PTP_CUR_SEC_MSB_CUR_SEC_MSB(x)           ((x) & GENMASK(15, 0))
#define PTP_CUR_SEC_MSB_CUR_SEC_MSB_M            GENMASK(15, 0)
#define PTP_CUR_SEC_MSB_CUR_SEC_MSB_X(x)         ((x) & GENMASK(15, 0))

/*      PTP:PTP_TOD_DOMAINS:NTP_CUR_NSEC */
#define PTP_NTP_CUR_NSEC(g)       __REG(TARGET_PTP,\
					0, 1, 528, g, 3, 28, 24, 0, 1, 4)

/*      PTP:PTP_PINS:PIN_CFG */
#define PTP_PIN_CFG(g)            __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 0, 0, 1, 4)

#define PTP_PIN_CFG_PIN_ACTION(x)                (((x) << 27) & GENMASK(29, 27))
#define PTP_PIN_CFG_PIN_ACTION_M                 GENMASK(29, 27)
#define PTP_PIN_CFG_PIN_ACTION_X(x)              (((x) & GENMASK(29, 27)) >> 27)

#define PTP_PIN_CFG_PIN_SYNC(x)                  (((x) << 25) & GENMASK(26, 25))
#define PTP_PIN_CFG_PIN_SYNC_M                   GENMASK(26, 25)
#define PTP_PIN_CFG_PIN_SYNC_X(x)                (((x) & GENMASK(26, 25)) >> 25)

#define PTP_PIN_CFG_PIN_INV_POL(x)               (((x) << 24) & GENMASK(24, 24))
#define PTP_PIN_CFG_PIN_INV_POL_M                GENMASK(24, 24)
#define PTP_PIN_CFG_PIN_INV_POL_X(x)             (((x) & GENMASK(24, 24)) >> 24)

#define PTP_PIN_CFG_PIN_SELECT(x)                (((x) << 21) & GENMASK(23, 21))
#define PTP_PIN_CFG_PIN_SELECT_M                 GENMASK(23, 21)
#define PTP_PIN_CFG_PIN_SELECT_X(x)              (((x) & GENMASK(23, 21)) >> 21)

#define PTP_PIN_CFG_CLK_SELECT(x)                (((x) << 18) & GENMASK(20, 18))
#define PTP_PIN_CFG_CLK_SELECT_M                 GENMASK(20, 18)
#define PTP_PIN_CFG_CLK_SELECT_X(x)              (((x) & GENMASK(20, 18)) >> 18)

#define PTP_PIN_CFG_PIN_DOM(x)                   (((x) << 16) & GENMASK(17, 16))
#define PTP_PIN_CFG_PIN_DOM_M                    GENMASK(17, 16)
#define PTP_PIN_CFG_PIN_DOM_X(x)                 (((x) & GENMASK(17, 16)) >> 16)

#define PTP_PIN_CFG_PIN_OPT(x)                   (((x) << 14) & GENMASK(15, 14))
#define PTP_PIN_CFG_PIN_OPT_M                    GENMASK(15, 14)
#define PTP_PIN_CFG_PIN_OPT_X(x)                 (((x) & GENMASK(15, 14)) >> 14)

#define PTP_PIN_CFG_PIN_EMBEDDED_CLK(x)          (((x) << 13) & GENMASK(13, 13))
#define PTP_PIN_CFG_PIN_EMBEDDED_CLK_M           GENMASK(13, 13)
#define PTP_PIN_CFG_PIN_EMBEDDED_CLK_X(x)        (((x) & GENMASK(13, 13)) >> 13)

#define PTP_PIN_CFG_PIN_OUTP_OFS(x)              ((x) & GENMASK(12, 0))
#define PTP_PIN_CFG_PIN_OUTP_OFS_M               GENMASK(12, 0)
#define PTP_PIN_CFG_PIN_OUTP_OFS_X(x)            ((x) & GENMASK(12, 0))

/*      PTP:PTP_PINS:TOD_SEC_MSB */
#define PTP_TOD_SEC_MSB(g)        __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 4, 0, 1, 4)

#define PTP_TOD_SEC_MSB_TOD_SEC_MSB(x)           ((x) & GENMASK(15, 0))
#define PTP_TOD_SEC_MSB_TOD_SEC_MSB_M            GENMASK(15, 0)
#define PTP_TOD_SEC_MSB_TOD_SEC_MSB_X(x)         ((x) & GENMASK(15, 0))

/*      PTP:PTP_PINS:TOD_SEC_LSB */
#define PTP_TOD_SEC_LSB(g)        __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 8, 0, 1, 4)

/*      PTP:PTP_PINS:TOD_NSEC */
#define PTP_TOD_NSEC(g)           __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 12, 0, 1, 4)

#define PTP_TOD_NSEC_TOD_NSEC(x)                 ((x) & GENMASK(29, 0))
#define PTP_TOD_NSEC_TOD_NSEC_M                  GENMASK(29, 0)
#define PTP_TOD_NSEC_TOD_NSEC_X(x)               ((x) & GENMASK(29, 0))

/*      PTP:PTP_PINS:TOD_NSEC_FRAC */
#define PTP_TOD_NSEC_FRAC(g)      __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 16, 0, 1, 4)

#define PTP_TOD_NSEC_FRAC_TOD_NSEC_FRAC(x)       ((x) & GENMASK(7, 0))
#define PTP_TOD_NSEC_FRAC_TOD_NSEC_FRAC_M        GENMASK(7, 0)
#define PTP_TOD_NSEC_FRAC_TOD_NSEC_FRAC_X(x)     ((x) & GENMASK(7, 0))

/*      PTP:PTP_PINS:NTP_NSEC */
#define PTP_NTP_NSEC(g)           __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 20, 0, 1, 4)

/*      PTP:PTP_PINS:WF_HIGH_PERIOD */
#define PTP_WF_HIGH_PERIOD(g)     __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 24, 0, 1, 4)

#define PTP_WF_HIGH_PERIOD_PIN_WFH(x)            ((x) & GENMASK(29, 0))
#define PTP_WF_HIGH_PERIOD_PIN_WFH_M             GENMASK(29, 0)
#define PTP_WF_HIGH_PERIOD_PIN_WFH_X(x)          ((x) & GENMASK(29, 0))

/*      PTP:PTP_PINS:WF_LOW_PERIOD */
#define PTP_WF_LOW_PERIOD(g)      __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 28, 0, 1, 4)

#define PTP_WF_LOW_PERIOD_PIN_WFL(x)             ((x) & GENMASK(29, 0))
#define PTP_WF_LOW_PERIOD_PIN_WFL_M              GENMASK(29, 0)
#define PTP_WF_LOW_PERIOD_PIN_WFL_X(x)           ((x) & GENMASK(29, 0))

/*      PTP:PTP_PINS:PIN_IO_DELAY */
#define PTP_PIN_IO_DELAY(g)       __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 32, 0, 1, 4)

#define PTP_PIN_IO_DELAY_PIN_IOBOUNCH_VAL(x)     (((x) << 3) & GENMASK(18, 3))
#define PTP_PIN_IO_DELAY_PIN_IOBOUNCH_VAL_M      GENMASK(18, 3)
#define PTP_PIN_IO_DELAY_PIN_IOBOUNCH_VAL_X(x)   (((x) & GENMASK(18, 3)) >> 3)

#define PTP_PIN_IO_DELAY_PIN_IOBOUNCH_CFG(x)     ((x) & GENMASK(2, 0))
#define PTP_PIN_IO_DELAY_PIN_IOBOUNCH_CFG_M      GENMASK(2, 0)
#define PTP_PIN_IO_DELAY_PIN_IOBOUNCH_CFG_X(x)   ((x) & GENMASK(2, 0))

/*      PTP:PTP_TS_FIFO:TWOSTEP_CTRL */
#define PTP_TWOSTEP_CTRL          __REG(TARGET_PTP,\
					0, 1, 612, 0, 1, 12, 0, 0, 1, 4)

#define PTP_TWOSTEP_CTRL_OVWR_ENA(x)             (((x) << 12) & GENMASK(12, 12))
#define PTP_TWOSTEP_CTRL_OVWR_ENA_M              GENMASK(12, 12)
#define PTP_TWOSTEP_CTRL_OVWR_ENA_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define PTP_TWOSTEP_CTRL_NXT(x)                  (((x) << 11) & GENMASK(11, 11))
#define PTP_TWOSTEP_CTRL_NXT_M                   GENMASK(11, 11)
#define PTP_TWOSTEP_CTRL_NXT_X(x)                (((x) & GENMASK(11, 11)) >> 11)

#define PTP_TWOSTEP_CTRL_VLD(x)                  (((x) << 10) & GENMASK(10, 10))
#define PTP_TWOSTEP_CTRL_VLD_M                   GENMASK(10, 10)
#define PTP_TWOSTEP_CTRL_VLD_X(x)                (((x) & GENMASK(10, 10)) >> 10)

#define PTP_TWOSTEP_CTRL_STAMP_TX(x)             (((x) << 9) & GENMASK(9, 9))
#define PTP_TWOSTEP_CTRL_STAMP_TX_M              GENMASK(9, 9)
#define PTP_TWOSTEP_CTRL_STAMP_TX_X(x)           (((x) & GENMASK(9, 9)) >> 9)

#define PTP_TWOSTEP_CTRL_STAMP_PORT(x)           (((x) << 1) & GENMASK(8, 1))
#define PTP_TWOSTEP_CTRL_STAMP_PORT_M            GENMASK(8, 1)
#define PTP_TWOSTEP_CTRL_STAMP_PORT_X(x)         (((x) & GENMASK(8, 1)) >> 1)

#define PTP_TWOSTEP_CTRL_OVFL(x)                 ((x) & GENMASK(0, 0))
#define PTP_TWOSTEP_CTRL_OVFL_M                  GENMASK(0, 0)
#define PTP_TWOSTEP_CTRL_OVFL_X(x)               ((x) & GENMASK(0, 0))

/*      PTP:PTP_TS_FIFO:TWOSTEP_STAMP */
#define PTP_TWOSTEP_STAMP         __REG(TARGET_PTP,\
					0, 1, 612, 0, 1, 12, 4, 0, 1, 4)

#define PTP_TWOSTEP_STAMP_STAMP_NSEC(x)          (((x) << 2) & GENMASK(31, 2))
#define PTP_TWOSTEP_STAMP_STAMP_NSEC_M           GENMASK(31, 2)
#define PTP_TWOSTEP_STAMP_STAMP_NSEC_X(x)        (((x) & GENMASK(31, 2)) >> 2)

#define PTP_TWOSTEP_STAMP_STAMP_SUB_NSEC(x)      ((x) & GENMASK(1, 0))
#define PTP_TWOSTEP_STAMP_STAMP_SUB_NSEC_M       GENMASK(1, 0)
#define PTP_TWOSTEP_STAMP_STAMP_SUB_NSEC_X(x)    ((x) & GENMASK(1, 0))

/*      PTP:PTP_TS_FIFO:WRP */
#define PTP_WRP                   __REG(TARGET_PTP,\
					0, 1, 612, 0, 1, 12, 8, 0, 1, 4)

#define PTP_WRP_WRP(x)                           ((x) & GENMASK(15, 0))
#define PTP_WRP_WRP_M                            GENMASK(15, 0)
#define PTP_WRP_WRP_X(x)                         ((x) & GENMASK(15, 0))

/*      PTP:PHASE_DETECTOR_CTRL:PHAD_CTRL */
#define PTP_PHAD_CTRL(g)          __REG(TARGET_PTP,\
					0, 1, 624, g, 8, 12, 0, 0, 1, 4)

#define PTP_PHAD_CTRL_PHAD_LOCK(x)               (((x) << 17) & GENMASK(17, 17))
#define PTP_PHAD_CTRL_PHAD_LOCK_M                GENMASK(17, 17)
#define PTP_PHAD_CTRL_PHAD_LOCK_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define PTP_PHAD_CTRL_DIV4_ACT(x)                (((x) << 16) & GENMASK(16, 16))
#define PTP_PHAD_CTRL_DIV4_ACT_M                 GENMASK(16, 16)
#define PTP_PHAD_CTRL_DIV4_ACT_X(x)              (((x) & GENMASK(16, 16)) >> 16)

#define PTP_PHAD_CTRL_PHAD_ENA(x)                (((x) << 15) & GENMASK(15, 15))
#define PTP_PHAD_CTRL_PHAD_ENA_M                 GENMASK(15, 15)
#define PTP_PHAD_CTRL_PHAD_ENA_X(x)              (((x) & GENMASK(15, 15)) >> 15)

#define PTP_PHAD_CTRL_PHAD_FAILED(x)             (((x) << 14) & GENMASK(14, 14))
#define PTP_PHAD_CTRL_PHAD_FAILED_M              GENMASK(14, 14)
#define PTP_PHAD_CTRL_PHAD_FAILED_X(x)           (((x) & GENMASK(14, 14)) >> 14)

#define PTP_PHAD_CTRL_PHAD_ADJ(x)                (((x) << 12) & GENMASK(13, 12))
#define PTP_PHAD_CTRL_PHAD_ADJ_M                 GENMASK(13, 12)
#define PTP_PHAD_CTRL_PHAD_ADJ_X(x)              (((x) & GENMASK(13, 12)) >> 12)

#define PTP_PHAD_CTRL_ERR_MAX_ENA(x)             (((x) << 11) & GENMASK(11, 11))
#define PTP_PHAD_CTRL_ERR_MAX_ENA_M              GENMASK(11, 11)
#define PTP_PHAD_CTRL_ERR_MAX_ENA_X(x)           (((x) & GENMASK(11, 11)) >> 11)

#define PTP_PHAD_CTRL_LOCK_ACC(x)                (((x) << 8) & GENMASK(10, 8))
#define PTP_PHAD_CTRL_LOCK_ACC_M                 GENMASK(10, 8)
#define PTP_PHAD_CTRL_LOCK_ACC_X(x)              (((x) & GENMASK(10, 8)) >> 8)

#define PTP_PHAD_CTRL_REALIGN_OFS(x)             (((x) << 5) & GENMASK(7, 5))
#define PTP_PHAD_CTRL_REALIGN_OFS_M              GENMASK(7, 5)
#define PTP_PHAD_CTRL_REALIGN_OFS_X(x)           (((x) & GENMASK(7, 5)) >> 5)

#define PTP_PHAD_CTRL_TWEAKS(x)                  (((x) << 2) & GENMASK(4, 2))
#define PTP_PHAD_CTRL_TWEAKS_M                   GENMASK(4, 2)
#define PTP_PHAD_CTRL_TWEAKS_X(x)                (((x) & GENMASK(4, 2)) >> 2)

#define PTP_PHAD_CTRL_DIV_CFG(x)                 ((x) & GENMASK(1, 0))
#define PTP_PHAD_CTRL_DIV_CFG_M                  GENMASK(1, 0)
#define PTP_PHAD_CTRL_DIV_CFG_X(x)               ((x) & GENMASK(1, 0))

/*      PTP:PHASE_DETECTOR_CTRL:PHAD_CYC_STAT */
#define PTP_PHAD_CYC_STAT(g)      __REG(TARGET_PTP,\
					0, 1, 624, g, 8, 12, 4, 0, 1, 4)

/*      PTP:PHASE_DETECTOR_CTRL:PHAD_ERR_STAT */
#define PTP_PHAD_ERR_STAT(g)      __REG(TARGET_PTP,\
					0, 1, 624, g, 8, 12, 8, 0, 1, 4)

#define PTP_PHAD_ERR_STAT_PHAD_ERR_STAT(x)       ((x) & GENMASK(18, 0))
#define PTP_PHAD_ERR_STAT_PHAD_ERR_STAT_M        GENMASK(18, 0)
#define PTP_PHAD_ERR_STAT_PHAD_ERR_STAT_X(x)     ((x) & GENMASK(18, 0))

/*      QS:XTR:XTR_GRP_CFG */
#define QS_XTR_GRP_CFG(r)         __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 0, r, 2, 4)

#define QS_XTR_GRP_CFG_MODE(x)                   (((x) << 2) & GENMASK(3, 2))
#define QS_XTR_GRP_CFG_MODE_M                    GENMASK(3, 2)
#define QS_XTR_GRP_CFG_MODE_X(x)                 (((x) & GENMASK(3, 2)) >> 2)

#define QS_XTR_GRP_CFG_STATUS_WORD_POS(x)        (((x) << 1) & GENMASK(1, 1))
#define QS_XTR_GRP_CFG_STATUS_WORD_POS_M         GENMASK(1, 1)
#define QS_XTR_GRP_CFG_STATUS_WORD_POS_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define QS_XTR_GRP_CFG_BYTE_SWAP(x)              ((x) & GENMASK(0, 0))
#define QS_XTR_GRP_CFG_BYTE_SWAP_M               GENMASK(0, 0)
#define QS_XTR_GRP_CFG_BYTE_SWAP_X(x)            ((x) & GENMASK(0, 0))

/*      QS:XTR:XTR_RD */
#define QS_XTR_RD(r)              __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 8, r, 2, 4)

/*      QS:XTR:XTR_FRM_PRUNING */
#define QS_XTR_FRM_PRUNING(r)     __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 16, r, 2, 4)

#define QS_XTR_FRM_PRUNING_PRUNE_SIZE(x)         ((x) & GENMASK(7, 0))
#define QS_XTR_FRM_PRUNING_PRUNE_SIZE_M          GENMASK(7, 0)
#define QS_XTR_FRM_PRUNING_PRUNE_SIZE_X(x)       ((x) & GENMASK(7, 0))

/*      QS:XTR:XTR_FLUSH */
#define QS_XTR_FLUSH              __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 24, 0, 1, 4)

#define QS_XTR_FLUSH_FLUSH(x)                    ((x) & GENMASK(1, 0))
#define QS_XTR_FLUSH_FLUSH_M                     GENMASK(1, 0)
#define QS_XTR_FLUSH_FLUSH_X(x)                  ((x) & GENMASK(1, 0))

/*      QS:XTR:XTR_DATA_PRESENT */
#define QS_XTR_DATA_PRESENT       __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 28, 0, 1, 4)

#define QS_XTR_DATA_PRESENT_DATA_PRESENT(x)      ((x) & GENMASK(1, 0))
#define QS_XTR_DATA_PRESENT_DATA_PRESENT_M       GENMASK(1, 0)
#define QS_XTR_DATA_PRESENT_DATA_PRESENT_X(x)    ((x) & GENMASK(1, 0))

/*      QS:XTR:XTR_CFG */
#define QS_XTR_CFG                __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 32, 0, 1, 4)

#define QS_XTR_CFG_DP_WM(x)                      (((x) << 5) & GENMASK(7, 5))
#define QS_XTR_CFG_DP_WM_M                       GENMASK(7, 5)
#define QS_XTR_CFG_DP_WM_X(x)                    (((x) & GENMASK(7, 5)) >> 5)

#define QS_XTR_CFG_SCH_WM(x)                     (((x) << 2) & GENMASK(4, 2))
#define QS_XTR_CFG_SCH_WM_M                      GENMASK(4, 2)
#define QS_XTR_CFG_SCH_WM_X(x)                   (((x) & GENMASK(4, 2)) >> 2)

#define QS_XTR_CFG_OFLW_ERR_STICKY(x)            ((x) & GENMASK(1, 0))
#define QS_XTR_CFG_OFLW_ERR_STICKY_M             GENMASK(1, 0)
#define QS_XTR_CFG_OFLW_ERR_STICKY_X(x)          ((x) & GENMASK(1, 0))

/*      QS:INJ:INJ_GRP_CFG */
#define QS_INJ_GRP_CFG(r)         __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 0, r, 2, 4)

#define QS_INJ_GRP_CFG_MODE(x)                   (((x) << 2) & GENMASK(3, 2))
#define QS_INJ_GRP_CFG_MODE_M                    GENMASK(3, 2)
#define QS_INJ_GRP_CFG_MODE_X(x)                 (((x) & GENMASK(3, 2)) >> 2)

#define QS_INJ_GRP_CFG_BYTE_SWAP(x)              ((x) & GENMASK(0, 0))
#define QS_INJ_GRP_CFG_BYTE_SWAP_M               GENMASK(0, 0)
#define QS_INJ_GRP_CFG_BYTE_SWAP_X(x)            ((x) & GENMASK(0, 0))

/*      QS:INJ:INJ_WR */
#define QS_INJ_WR(r)              __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 8, r, 2, 4)

/*      QS:INJ:INJ_CTRL */
#define QS_INJ_CTRL(r)            __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 16, r, 2, 4)

#define QS_INJ_CTRL_GAP_SIZE(x)                  (((x) << 21) & GENMASK(24, 21))
#define QS_INJ_CTRL_GAP_SIZE_M                   GENMASK(24, 21)
#define QS_INJ_CTRL_GAP_SIZE_X(x)                (((x) & GENMASK(24, 21)) >> 21)

#define QS_INJ_CTRL_ABORT(x)                     (((x) << 20) & GENMASK(20, 20))
#define QS_INJ_CTRL_ABORT_M                      GENMASK(20, 20)
#define QS_INJ_CTRL_ABORT_X(x)                   (((x) & GENMASK(20, 20)) >> 20)

#define QS_INJ_CTRL_EOF(x)                       (((x) << 19) & GENMASK(19, 19))
#define QS_INJ_CTRL_EOF_M                        GENMASK(19, 19)
#define QS_INJ_CTRL_EOF_X(x)                     (((x) & GENMASK(19, 19)) >> 19)

#define QS_INJ_CTRL_SOF(x)                       (((x) << 18) & GENMASK(18, 18))
#define QS_INJ_CTRL_SOF_M                        GENMASK(18, 18)
#define QS_INJ_CTRL_SOF_X(x)                     (((x) & GENMASK(18, 18)) >> 18)

#define QS_INJ_CTRL_VLD_BYTES(x)                 (((x) << 16) & GENMASK(17, 16))
#define QS_INJ_CTRL_VLD_BYTES_M                  GENMASK(17, 16)
#define QS_INJ_CTRL_VLD_BYTES_X(x)               (((x) & GENMASK(17, 16)) >> 16)

/*      QS:INJ:INJ_STATUS */
#define QS_INJ_STATUS             __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 24, 0, 1, 4)

#define QS_INJ_STATUS_WMARK_REACHED(x)           (((x) << 4) & GENMASK(5, 4))
#define QS_INJ_STATUS_WMARK_REACHED_M            GENMASK(5, 4)
#define QS_INJ_STATUS_WMARK_REACHED_X(x)         (((x) & GENMASK(5, 4)) >> 4)

#define QS_INJ_STATUS_FIFO_RDY(x)                (((x) << 2) & GENMASK(3, 2))
#define QS_INJ_STATUS_FIFO_RDY_M                 GENMASK(3, 2)
#define QS_INJ_STATUS_FIFO_RDY_X(x)              (((x) & GENMASK(3, 2)) >> 2)

#define QS_INJ_STATUS_INJ_IN_PROGRESS(x)         ((x) & GENMASK(1, 0))
#define QS_INJ_STATUS_INJ_IN_PROGRESS_M          GENMASK(1, 0)
#define QS_INJ_STATUS_INJ_IN_PROGRESS_X(x)       ((x) & GENMASK(1, 0))

/*      QS:INJ:INJ_ERR */
#define QS_INJ_ERR(r)             __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 28, r, 2, 4)

#define QS_INJ_ERR_ABORT_ERR_STICKY(x)           (((x) << 1) & GENMASK(1, 1))
#define QS_INJ_ERR_ABORT_ERR_STICKY_M            GENMASK(1, 1)
#define QS_INJ_ERR_ABORT_ERR_STICKY_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define QS_INJ_ERR_WR_ERR_STICKY(x)              ((x) & GENMASK(0, 0))
#define QS_INJ_ERR_WR_ERR_STICKY_M               GENMASK(0, 0)
#define QS_INJ_ERR_WR_ERR_STICKY_X(x)            ((x) & GENMASK(0, 0))

/*      QS:INJ:VTSS_DBG */
#define QS_VTSS_DBG               __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 36, 0, 1, 4)

#define QS_VTSS_DBG_FRM_CNT(x)                   ((x) & GENMASK(3, 0))
#define QS_VTSS_DBG_FRM_CNT_M                    GENMASK(3, 0)
#define QS_VTSS_DBG_FRM_CNT_X(x)                 ((x) & GENMASK(3, 0))

/*      QSYS:SYSTEM:PORT_MODE */
#define QSYS_PORT_MODE(r)         __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 0, r, 10, 4)

#define QSYS_PORT_MODE_DEQUEUE_DIS(x)            (((x) << 1) & GENMASK(1, 1))
#define QSYS_PORT_MODE_DEQUEUE_DIS_M             GENMASK(1, 1)
#define QSYS_PORT_MODE_DEQUEUE_DIS_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_PORT_MODE_DEQUEUE_LATE(x)           ((x) & GENMASK(0, 0))
#define QSYS_PORT_MODE_DEQUEUE_LATE_M            GENMASK(0, 0)
#define QSYS_PORT_MODE_DEQUEUE_LATE_X(x)         ((x) & GENMASK(0, 0))

/*      QSYS:SYSTEM:PORT_DBG */
#define QSYS_PORT_DBG(r)          __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 40, r, 10, 4)

#define QSYS_PORT_DBG_DBG_HOOKS(x)               ((x) & GENMASK(3, 0))
#define QSYS_PORT_DBG_DBG_HOOKS_M                GENMASK(3, 0)
#define QSYS_PORT_DBG_DBG_HOOKS_X(x)             ((x) & GENMASK(3, 0))

/*      QSYS:SYSTEM:SW_PORT_MODE */
#define QSYS_SW_PORT_MODE(r)      __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 80, r, 9, 4)

#define QSYS_SW_PORT_MODE_PORT_ENA(x)            (((x) << 18) & GENMASK(18, 18))
#define QSYS_SW_PORT_MODE_PORT_ENA_M             GENMASK(18, 18)
#define QSYS_SW_PORT_MODE_PORT_ENA_X(x)          (((x) & GENMASK(18, 18)) >> 18)

#define QSYS_SW_PORT_MODE_IDEQ_DIS(x)            (((x) << 17) & GENMASK(17, 17))
#define QSYS_SW_PORT_MODE_IDEQ_DIS_M             GENMASK(17, 17)
#define QSYS_SW_PORT_MODE_IDEQ_DIS_X(x)          (((x) & GENMASK(17, 17)) >> 17)

#define QSYS_SW_PORT_MODE_SCH_NEXT_CFG(x)        (((x) << 14) & GENMASK(16, 14))
#define QSYS_SW_PORT_MODE_SCH_NEXT_CFG_M         GENMASK(16, 14)
#define QSYS_SW_PORT_MODE_SCH_NEXT_CFG_X(x)      (((x) & GENMASK(16, 14)) >> 14)

#define QSYS_SW_PORT_MODE_YEL_RSRVD(x)           (((x) << 13) & GENMASK(13, 13))
#define QSYS_SW_PORT_MODE_YEL_RSRVD_M            GENMASK(13, 13)
#define QSYS_SW_PORT_MODE_YEL_RSRVD_X(x)         (((x) & GENMASK(13, 13)) >> 13)

#define QSYS_SW_PORT_MODE_INGRESS_DROP_MODE(x)   (((x) << 12) & GENMASK(12, 12))
#define QSYS_SW_PORT_MODE_INGRESS_DROP_MODE_M    GENMASK(12, 12)
#define QSYS_SW_PORT_MODE_INGRESS_DROP_MODE_X(x) (((x) & GENMASK(12, 12)) >> 12)

#define QSYS_SW_PORT_MODE_TX_PFC_ENA(x)          (((x) << 4) & GENMASK(11, 4))
#define QSYS_SW_PORT_MODE_TX_PFC_ENA_M           GENMASK(11, 4)
#define QSYS_SW_PORT_MODE_TX_PFC_ENA_X(x)        (((x) & GENMASK(11, 4)) >> 4)

#define QSYS_SW_PORT_MODE_TX_PFC_MODE(x)         (((x) << 3) & GENMASK(3, 3))
#define QSYS_SW_PORT_MODE_TX_PFC_MODE_M          GENMASK(3, 3)
#define QSYS_SW_PORT_MODE_TX_PFC_MODE_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define QSYS_SW_PORT_MODE_FWD_TWOCYCLE_MODE(x)   (((x) << 2) & GENMASK(2, 2))
#define QSYS_SW_PORT_MODE_FWD_TWOCYCLE_MODE_M    GENMASK(2, 2)
#define QSYS_SW_PORT_MODE_FWD_TWOCYCLE_MODE_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define QSYS_SW_PORT_MODE_AGING_MODE(x)          ((x) & GENMASK(1, 0))
#define QSYS_SW_PORT_MODE_AGING_MODE_M           GENMASK(1, 0)
#define QSYS_SW_PORT_MODE_AGING_MODE_X(x)        ((x) & GENMASK(1, 0))

/*      QSYS:SYSTEM:STAT_CFG */
#define QSYS_STAT_CFG             __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 116, 0, 1, 4)

#define QSYS_STAT_CFG_TX_LLCT_CNT_ENA(x)         (((x) << 8) & GENMASK(8, 8))
#define QSYS_STAT_CFG_TX_LLCT_CNT_ENA_M          GENMASK(8, 8)
#define QSYS_STAT_CFG_TX_LLCT_CNT_ENA_X(x)       (((x) & GENMASK(8, 8)) >> 8)

#define QSYS_STAT_CFG_TX_CT_CNT_ENA(x)           (((x) << 7) & GENMASK(7, 7))
#define QSYS_STAT_CFG_TX_CT_CNT_ENA_M            GENMASK(7, 7)
#define QSYS_STAT_CFG_TX_CT_CNT_ENA_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define QSYS_STAT_CFG_TX_GREEN_CNT_MODE(x)       (((x) << 6) & GENMASK(6, 6))
#define QSYS_STAT_CFG_TX_GREEN_CNT_MODE_M        GENMASK(6, 6)
#define QSYS_STAT_CFG_TX_GREEN_CNT_MODE_X(x)     (((x) & GENMASK(6, 6)) >> 6)

#define QSYS_STAT_CFG_TX_YELLOW_CNT_MODE(x)      (((x) << 5) & GENMASK(5, 5))
#define QSYS_STAT_CFG_TX_YELLOW_CNT_MODE_M       GENMASK(5, 5)
#define QSYS_STAT_CFG_TX_YELLOW_CNT_MODE_X(x)    (((x) & GENMASK(5, 5)) >> 5)

#define QSYS_STAT_CFG_DROP_GREEN_CNT_MODE(x)     (((x) << 4) & GENMASK(4, 4))
#define QSYS_STAT_CFG_DROP_GREEN_CNT_MODE_M      GENMASK(4, 4)
#define QSYS_STAT_CFG_DROP_GREEN_CNT_MODE_X(x)   (((x) & GENMASK(4, 4)) >> 4)

#define QSYS_STAT_CFG_DROP_YELLOW_CNT_MODE(x)    (((x) << 3) & GENMASK(3, 3))
#define QSYS_STAT_CFG_DROP_YELLOW_CNT_MODE_M     GENMASK(3, 3)
#define QSYS_STAT_CFG_DROP_YELLOW_CNT_MODE_X(x)  (((x) & GENMASK(3, 3)) >> 3)

#define QSYS_STAT_CFG_DROP_COUNT_ONCE(x)         (((x) << 2) & GENMASK(2, 2))
#define QSYS_STAT_CFG_DROP_COUNT_ONCE_M          GENMASK(2, 2)
#define QSYS_STAT_CFG_DROP_COUNT_ONCE_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define QSYS_STAT_CFG_DROP_COUNT_EGRESS(x)       (((x) << 1) & GENMASK(1, 1))
#define QSYS_STAT_CFG_DROP_COUNT_EGRESS_M        GENMASK(1, 1)
#define QSYS_STAT_CFG_DROP_COUNT_EGRESS_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_STAT_CFG_DROP_COUNT_DISAB(x)        ((x) & GENMASK(0, 0))
#define QSYS_STAT_CFG_DROP_COUNT_DISAB_M         GENMASK(0, 0)
#define QSYS_STAT_CFG_DROP_COUNT_DISAB_X(x)      ((x) & GENMASK(0, 0))

/*      QSYS:SYSTEM:EEE_CFG */
#define QSYS_EEE_CFG(r)           __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 120, r, 8, 4)

#define QSYS_EEE_CFG_EEE_FAST_QUEUES(x)          ((x) & GENMASK(7, 0))
#define QSYS_EEE_CFG_EEE_FAST_QUEUES_M           GENMASK(7, 0)
#define QSYS_EEE_CFG_EEE_FAST_QUEUES_X(x)        ((x) & GENMASK(7, 0))

/*      QSYS:SYSTEM:EEE_THRES */
#define QSYS_EEE_THRES            __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 152, 0, 1, 4)

#define QSYS_EEE_THRES_EEE_HIGH_BYTES(x)         (((x) << 8) & GENMASK(15, 8))
#define QSYS_EEE_THRES_EEE_HIGH_BYTES_M          GENMASK(15, 8)
#define QSYS_EEE_THRES_EEE_HIGH_BYTES_X(x)       (((x) & GENMASK(15, 8)) >> 8)

#define QSYS_EEE_THRES_EEE_HIGH_FRAMES(x)        ((x) & GENMASK(7, 0))
#define QSYS_EEE_THRES_EEE_HIGH_FRAMES_M         GENMASK(7, 0)
#define QSYS_EEE_THRES_EEE_HIGH_FRAMES_X(x)      ((x) & GENMASK(7, 0))

/*      QSYS:SYSTEM:IGR_NO_SHARING */
#define QSYS_IGR_NO_SHARING       __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 156, 0, 1, 4)

#define QSYS_IGR_NO_SHARING_IGR_NO_SHARING(x)    ((x) & GENMASK(8, 0))
#define QSYS_IGR_NO_SHARING_IGR_NO_SHARING_M     GENMASK(8, 0)
#define QSYS_IGR_NO_SHARING_IGR_NO_SHARING_X(x)  ((x) & GENMASK(8, 0))

/*      QSYS:SYSTEM:EGR_NO_SHARING */
#define QSYS_EGR_NO_SHARING       __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 160, 0, 1, 4)

#define QSYS_EGR_NO_SHARING_EGR_NO_SHARING(x)    ((x) & GENMASK(8, 0))
#define QSYS_EGR_NO_SHARING_EGR_NO_SHARING_M     GENMASK(8, 0)
#define QSYS_EGR_NO_SHARING_EGR_NO_SHARING_X(x)  ((x) & GENMASK(8, 0))

/*      QSYS:SYSTEM:SW_STATUS */
#define QSYS_SW_STATUS(r)         __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 164, r, 9, 4)

#define QSYS_SW_STATUS_EQ_AVAIL(x)               ((x) & GENMASK(7, 0))
#define QSYS_SW_STATUS_EQ_AVAIL_M                GENMASK(7, 0)
#define QSYS_SW_STATUS_EQ_AVAIL_X(x)             ((x) & GENMASK(7, 0))

/*      QSYS:SYSTEM:EXT_CPU_CFG */
#define QSYS_EXT_CPU_CFG          __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 200, 0, 1, 4)

#define QSYS_EXT_CPU_CFG_EXT_CPU_KILL_ENA(x)     (((x) << 14) & GENMASK(14, 14))
#define QSYS_EXT_CPU_CFG_EXT_CPU_KILL_ENA_M      GENMASK(14, 14)
#define QSYS_EXT_CPU_CFG_EXT_CPU_KILL_ENA_X(x)   (((x) & GENMASK(14, 14)) >> 14)

#define QSYS_EXT_CPU_CFG_INT_CPU_KILL_ENA(x)     (((x) << 13) & GENMASK(13, 13))
#define QSYS_EXT_CPU_CFG_INT_CPU_KILL_ENA_M      GENMASK(13, 13)
#define QSYS_EXT_CPU_CFG_INT_CPU_KILL_ENA_X(x)   (((x) & GENMASK(13, 13)) >> 13)

#define QSYS_EXT_CPU_CFG_EXT_CPU_PORT(x)         (((x) << 8) & GENMASK(12, 8))
#define QSYS_EXT_CPU_CFG_EXT_CPU_PORT_M          GENMASK(12, 8)
#define QSYS_EXT_CPU_CFG_EXT_CPU_PORT_X(x)       (((x) & GENMASK(12, 8)) >> 8)

#define QSYS_EXT_CPU_CFG_EXT_CPUQ_MSK(x)         ((x) & GENMASK(7, 0))
#define QSYS_EXT_CPU_CFG_EXT_CPUQ_MSK_M          GENMASK(7, 0)
#define QSYS_EXT_CPU_CFG_EXT_CPUQ_MSK_X(x)       ((x) & GENMASK(7, 0))

/*      QSYS:SYSTEM:CPU_GROUP_MAP */
#define QSYS_CPU_GROUP_MAP        __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 204, 0, 1, 4)

#define QSYS_CPU_GROUP_MAP_CPU_GROUP_MAP(x)      ((x) & GENMASK(7, 0))
#define QSYS_CPU_GROUP_MAP_CPU_GROUP_MAP_M       GENMASK(7, 0)
#define QSYS_CPU_GROUP_MAP_CPU_GROUP_MAP_X(x)    ((x) & GENMASK(7, 0))

/*      QSYS:SYSTEM:PTP_DOMAIN_CFG */
#define QSYS_PTP_DOMAIN_CFG       __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 208, 0, 1, 4)

#define QSYS_PTP_DOMAIN_CFG_PTP_DOMAIN(x)        ((x) & GENMASK(1, 0))
#define QSYS_PTP_DOMAIN_CFG_PTP_DOMAIN_M         GENMASK(1, 0)
#define QSYS_PTP_DOMAIN_CFG_PTP_DOMAIN_X(x)      ((x) & GENMASK(1, 0))

/*      QSYS:SYSTEM:PTP_CYCLE_CNT_VAL */
#define QSYS_PTP_CYCLE_CNT_VAL    __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 212, 0, 1, 4)

#define QSYS_PTP_CYCLE_CNT_VAL_PTP_CYCLE_CNT_VAL(x) ((x) & GENMASK(15, 0))
#define QSYS_PTP_CYCLE_CNT_VAL_PTP_CYCLE_CNT_VAL_M GENMASK(15, 0)
#define QSYS_PTP_CYCLE_CNT_VAL_PTP_CYCLE_CNT_VAL_X(x) ((x) & GENMASK(15, 0))

/*      QSYS:QMAP:QMAP */
#define QSYS_QMAP(g)              __REG(TARGET_QSYS,\
					0, 1, 28224, g, 10, 4, 0, 0, 1, 4)

#define QSYS_QMAP_SE_BASE(x)                     (((x) << 5) & GENMASK(12, 5))
#define QSYS_QMAP_SE_BASE_M                      GENMASK(12, 5)
#define QSYS_QMAP_SE_BASE_X(x)                   (((x) & GENMASK(12, 5)) >> 5)

#define QSYS_QMAP_SE_IDX_SEL(x)                  (((x) << 2) & GENMASK(4, 2))
#define QSYS_QMAP_SE_IDX_SEL_M                   GENMASK(4, 2)
#define QSYS_QMAP_SE_IDX_SEL_X(x)                (((x) & GENMASK(4, 2)) >> 2)

#define QSYS_QMAP_SE_INP_SEL(x)                  ((x) & GENMASK(1, 0))
#define QSYS_QMAP_SE_INP_SEL_M                   GENMASK(1, 0)
#define QSYS_QMAP_SE_INP_SEL_X(x)                ((x) & GENMASK(1, 0))

/*      QSYS:SGRP:FLOW_QUEUE_GRP */
#define QSYS_FLOW_QUEUE_GRP       __REG(TARGET_QSYS,\
					0, 1, 28000, 0, 1, 4, 0, 0, 1, 4)

#define QSYS_FLOW_QUEUE_GRP_FLOW_QGRP(x)         ((x) & GENMASK(6, 0))
#define QSYS_FLOW_QUEUE_GRP_FLOW_QGRP_M          GENMASK(6, 0)
#define QSYS_FLOW_QUEUE_GRP_FLOW_QGRP_X(x)       ((x) & GENMASK(6, 0))

/*      QSYS:RES_QOS_ADV:RED_PROFILE */
#define QSYS_RED_PROFILE(r)       __REG(TARGET_QSYS,\
					0, 1, 28264, 0, 1, 68, 0, r, 16, 4)

#define QSYS_RED_PROFILE_WM_RED_LOW(x)           (((x) << 8) & GENMASK(15, 8))
#define QSYS_RED_PROFILE_WM_RED_LOW_M            GENMASK(15, 8)
#define QSYS_RED_PROFILE_WM_RED_LOW_X(x)         (((x) & GENMASK(15, 8)) >> 8)

#define QSYS_RED_PROFILE_WM_RED_HIGH(x)          ((x) & GENMASK(7, 0))
#define QSYS_RED_PROFILE_WM_RED_HIGH_M           GENMASK(7, 0)
#define QSYS_RED_PROFILE_WM_RED_HIGH_X(x)        ((x) & GENMASK(7, 0))

/*      QSYS:RES_QOS_ADV:RES_QOS_MODE */
#define QSYS_RES_QOS_MODE         __REG(TARGET_QSYS,\
					0, 1, 28264, 0, 1, 68, 64, 0, 1, 4)

#define QSYS_RES_QOS_MODE_RES_QOS_RSRVD(x)       ((x) & GENMASK(7, 0))
#define QSYS_RES_QOS_MODE_RES_QOS_RSRVD_M        GENMASK(7, 0)
#define QSYS_RES_QOS_MODE_RES_QOS_RSRVD_X(x)     ((x) & GENMASK(7, 0))

/*      QSYS:RES_CTRL:RES_CFG */
#define QSYS_RES_CFG(g)           __REG(TARGET_QSYS,\
					0, 1, 32768, g, 1024, 8, 0, 0, 1, 4)

#define QSYS_RES_CFG_WM_HIGH(x)                  ((x) & GENMASK(8, 0))
#define QSYS_RES_CFG_WM_HIGH_M                   GENMASK(8, 0)
#define QSYS_RES_CFG_WM_HIGH_X(x)                ((x) & GENMASK(8, 0))

/*      QSYS:RES_CTRL:RES_STAT */
#define QSYS_RES_STAT(g)          __REG(TARGET_QSYS,\
					0, 1, 32768, g, 1024, 8, 4, 0, 1, 4)

#define QSYS_RES_STAT_INUSE(x)                   (((x) << 12) & GENMASK(23, 12))
#define QSYS_RES_STAT_INUSE_M                    GENMASK(23, 12)
#define QSYS_RES_STAT_INUSE_X(x)                 (((x) & GENMASK(23, 12)) >> 12)

#define QSYS_RES_STAT_MAXUSE(x)                  ((x) & GENMASK(11, 0))
#define QSYS_RES_STAT_MAXUSE_M                   GENMASK(11, 0)
#define QSYS_RES_STAT_MAXUSE_X(x)                ((x) & GENMASK(11, 0))

/*      QSYS:DROP_CFG:EGR_DROP_MODE */
#define QSYS_EGR_DROP_MODE        __REG(TARGET_QSYS,\
					0, 1, 28332, 0, 1, 8, 0, 0, 1, 4)

#define QSYS_EGR_DROP_MODE_EGRESS_DROP_MODE(x)   ((x) & GENMASK(8, 0))
#define QSYS_EGR_DROP_MODE_EGRESS_DROP_MODE_M    GENMASK(8, 0)
#define QSYS_EGR_DROP_MODE_EGRESS_DROP_MODE_X(x) ((x) & GENMASK(8, 0))

/*      QSYS:DROP_CFG:MISC_DROP_CFG */
#define QSYS_MISC_DROP_CFG        __REG(TARGET_QSYS,\
					0, 1, 28332, 0, 1, 8, 4, 0, 1, 4)

#define QSYS_MISC_DROP_CFG_FRER_ENA(x)           ((x) & GENMASK(0, 0))
#define QSYS_MISC_DROP_CFG_FRER_ENA_M            GENMASK(0, 0)
#define QSYS_MISC_DROP_CFG_FRER_ENA_X(x)         ((x) & GENMASK(0, 0))

/*      QSYS:MMGT:EQ_CTRL */
#define QSYS_EQ_CTRL              __REG(TARGET_QSYS,\
					0, 1, 28340, 0, 1, 4, 0, 0, 1, 4)

#define QSYS_EQ_CTRL_FP_FREE_CNT(x)              ((x) & GENMASK(15, 0))
#define QSYS_EQ_CTRL_FP_FREE_CNT_M               GENMASK(15, 0)
#define QSYS_EQ_CTRL_FP_FREE_CNT_X(x)            ((x) & GENMASK(15, 0))

/*      QSYS:MISC:EVENTS_CORE */
#define QSYS_EVENTS_CORE          __REG(TARGET_QSYS,\
					0, 1, 28344, 0, 1, 4, 0, 0, 1, 4)

#define QSYS_EVENTS_CORE_EV_FDC(x)               (((x) << 2) & GENMASK(4, 2))
#define QSYS_EVENTS_CORE_EV_FDC_M                GENMASK(4, 2)
#define QSYS_EVENTS_CORE_EV_FDC_X(x)             (((x) & GENMASK(4, 2)) >> 2)

#define QSYS_EVENTS_CORE_EV_FRD(x)               ((x) & GENMASK(1, 0))
#define QSYS_EVENTS_CORE_EV_FRD_M                GENMASK(1, 0)
#define QSYS_EVENTS_CORE_EV_FRD_X(x)             ((x) & GENMASK(1, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_0 */
#define QSYS_QMAXSDU_CFG_0(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 0, r, 9, 4)

#define QSYS_QMAXSDU_CFG_0_QMAXSDU_0(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_0_QMAXSDU_0_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_0_QMAXSDU_0_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_1 */
#define QSYS_QMAXSDU_CFG_1(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 36, r, 9, 4)

#define QSYS_QMAXSDU_CFG_1_QMAXSDU_1(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_1_QMAXSDU_1_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_1_QMAXSDU_1_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_2 */
#define QSYS_QMAXSDU_CFG_2(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 72, r, 9, 4)

#define QSYS_QMAXSDU_CFG_2_QMAXSDU_2(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_2_QMAXSDU_2_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_2_QMAXSDU_2_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_3 */
#define QSYS_QMAXSDU_CFG_3(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 108, r, 9, 4)

#define QSYS_QMAXSDU_CFG_3_QMAXSDU_3(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_3_QMAXSDU_3_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_3_QMAXSDU_3_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_4 */
#define QSYS_QMAXSDU_CFG_4(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 144, r, 9, 4)

#define QSYS_QMAXSDU_CFG_4_QMAXSDU_4(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_4_QMAXSDU_4_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_4_QMAXSDU_4_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_5 */
#define QSYS_QMAXSDU_CFG_5(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 180, r, 9, 4)

#define QSYS_QMAXSDU_CFG_5_QMAXSDU_5(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_5_QMAXSDU_5_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_5_QMAXSDU_5_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_6 */
#define QSYS_QMAXSDU_CFG_6(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 216, r, 9, 4)

#define QSYS_QMAXSDU_CFG_6_QMAXSDU_6(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_6_QMAXSDU_6_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_6_QMAXSDU_6_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_7 */
#define QSYS_QMAXSDU_CFG_7(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 252, r, 9, 4)

#define QSYS_QMAXSDU_CFG_7_QMAXSDU_7(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_7_QMAXSDU_7_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_7_QMAXSDU_7_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:PREEMPTION:PREEMPT_CFG */
#define QSYS_PREEMPT_CFG(r)       __REG(TARGET_QSYS,\
					0, 1, 28636, 0, 1, 32, 0, r, 8, 4)

#define QSYS_PREEMPT_CFG_STRICT_IPG(x)           (((x) << 12) & GENMASK(13, 12))
#define QSYS_PREEMPT_CFG_STRICT_IPG_M            GENMASK(13, 12)
#define QSYS_PREEMPT_CFG_STRICT_IPG_X(x)         (((x) & GENMASK(13, 12)) >> 12)

#define QSYS_PREEMPT_CFG_P_QUEUES(x)             ((x) & GENMASK(7, 0))
#define QSYS_PREEMPT_CFG_P_QUEUES_M              GENMASK(7, 0)
#define QSYS_PREEMPT_CFG_P_QUEUES_X(x)           ((x) & GENMASK(7, 0))

/*      QSYS:STORM_POLICE:STORMLIM_BURST */
#define QSYS_STORMLIM_BURST       __REG(TARGET_QSYS,\
					0, 1, 57344, 0, 1, 28, 0, 0, 1, 4)

#define QSYS_STORMLIM_BURST_STORM_BURST(x)       ((x) & GENMASK(3, 0))
#define QSYS_STORMLIM_BURST_STORM_BURST_M        GENMASK(3, 0)
#define QSYS_STORMLIM_BURST_STORM_BURST_X(x)     ((x) & GENMASK(3, 0))

/*      QSYS:STORM_POLICE:STORMLIM_CFG */
#define QSYS_STORMLIM_CFG(r)      __REG(TARGET_QSYS,\
					0, 1, 57344, 0, 1, 28, 4, r, 3, 4)

#define QSYS_STORMLIM_CFG_STORM_CPU_REDIR(x)     (((x) << 7) & GENMASK(7, 7))
#define QSYS_STORMLIM_CFG_STORM_CPU_REDIR_M      GENMASK(7, 7)
#define QSYS_STORMLIM_CFG_STORM_CPU_REDIR_X(x)   (((x) & GENMASK(7, 7)) >> 7)

#define QSYS_STORMLIM_CFG_STORM_RATE(x)          (((x) << 3) & GENMASK(6, 3))
#define QSYS_STORMLIM_CFG_STORM_RATE_M           GENMASK(6, 3)
#define QSYS_STORMLIM_CFG_STORM_RATE_X(x)        (((x) & GENMASK(6, 3)) >> 3)

#define QSYS_STORMLIM_CFG_STORM_UNIT(x)          (((x) << 2) & GENMASK(2, 2))
#define QSYS_STORMLIM_CFG_STORM_UNIT_M           GENMASK(2, 2)
#define QSYS_STORMLIM_CFG_STORM_UNIT_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define QSYS_STORMLIM_CFG_STORM_MODE(x)          ((x) & GENMASK(1, 0))
#define QSYS_STORMLIM_CFG_STORM_MODE_M           GENMASK(1, 0)
#define QSYS_STORMLIM_CFG_STORM_MODE_X(x)        ((x) & GENMASK(1, 0))

/*      QSYS:STORM_POLICE:STORMLIM_STAT */
#define QSYS_STORMLIM_STAT(r)     __REG(TARGET_QSYS,\
					0, 1, 57344, 0, 1, 28, 16, r, 3, 4)

/*      QSYS:HSCH:CIR_CFG */
#define QSYS_CIR_CFG(g)           __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 0, 0, 1, 4)

#define QSYS_CIR_CFG_CIR_RATE(x)                 (((x) << 6) & GENMASK(20, 6))
#define QSYS_CIR_CFG_CIR_RATE_M                  GENMASK(20, 6)
#define QSYS_CIR_CFG_CIR_RATE_X(x)               (((x) & GENMASK(20, 6)) >> 6)

#define QSYS_CIR_CFG_CIR_BURST(x)                ((x) & GENMASK(5, 0))
#define QSYS_CIR_CFG_CIR_BURST_M                 GENMASK(5, 0)
#define QSYS_CIR_CFG_CIR_BURST_X(x)              ((x) & GENMASK(5, 0))

/*      QSYS:HSCH:EIR_CFG */
#define QSYS_EIR_CFG(g)           __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 4, 0, 1, 4)

#define QSYS_EIR_CFG_EIR_RATE(x)                 (((x) << 7) & GENMASK(21, 7))
#define QSYS_EIR_CFG_EIR_RATE_M                  GENMASK(21, 7)
#define QSYS_EIR_CFG_EIR_RATE_X(x)               (((x) & GENMASK(21, 7)) >> 7)

#define QSYS_EIR_CFG_EIR_BURST(x)                (((x) << 1) & GENMASK(6, 1))
#define QSYS_EIR_CFG_EIR_BURST_M                 GENMASK(6, 1)
#define QSYS_EIR_CFG_EIR_BURST_X(x)              (((x) & GENMASK(6, 1)) >> 1)

#define QSYS_EIR_CFG_EIR_MARK_ENA(x)             ((x) & GENMASK(0, 0))
#define QSYS_EIR_CFG_EIR_MARK_ENA_M              GENMASK(0, 0)
#define QSYS_EIR_CFG_EIR_MARK_ENA_X(x)           ((x) & GENMASK(0, 0))

/*      QSYS:HSCH:SE_CFG */
#define QSYS_SE_CFG(g)            __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 8, 0, 1, 4)

#define QSYS_SE_CFG_SE_DWRR_CNT(x)               (((x) << 6) & GENMASK(9, 6))
#define QSYS_SE_CFG_SE_DWRR_CNT_M                GENMASK(9, 6)
#define QSYS_SE_CFG_SE_DWRR_CNT_X(x)             (((x) & GENMASK(9, 6)) >> 6)

#define QSYS_SE_CFG_SE_RR_ENA(x)                 (((x) << 5) & GENMASK(5, 5))
#define QSYS_SE_CFG_SE_RR_ENA_M                  GENMASK(5, 5)
#define QSYS_SE_CFG_SE_RR_ENA_X(x)               (((x) & GENMASK(5, 5)) >> 5)

#define QSYS_SE_CFG_SE_AVB_ENA(x)                (((x) << 4) & GENMASK(4, 4))
#define QSYS_SE_CFG_SE_AVB_ENA_M                 GENMASK(4, 4)
#define QSYS_SE_CFG_SE_AVB_ENA_X(x)              (((x) & GENMASK(4, 4)) >> 4)

#define QSYS_SE_CFG_SE_FRM_MODE(x)               (((x) << 2) & GENMASK(3, 2))
#define QSYS_SE_CFG_SE_FRM_MODE_M                GENMASK(3, 2)
#define QSYS_SE_CFG_SE_FRM_MODE_X(x)             (((x) & GENMASK(3, 2)) >> 2)

#define QSYS_SE_CFG_SE_EXC_ENA(x)                (((x) << 1) & GENMASK(1, 1))
#define QSYS_SE_CFG_SE_EXC_ENA_M                 GENMASK(1, 1)
#define QSYS_SE_CFG_SE_EXC_ENA_X(x)              (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_SE_CFG_SE_EXC_FWD(x)                ((x) & GENMASK(0, 0))
#define QSYS_SE_CFG_SE_EXC_FWD_M                 GENMASK(0, 0)
#define QSYS_SE_CFG_SE_EXC_FWD_X(x)              ((x) & GENMASK(0, 0))

/*      QSYS:HSCH:SE_DWRR_CFG */
#define QSYS_SE_DWRR_CFG(g, r)    __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 12, r, 12, 4)

#define QSYS_SE_DWRR_CFG_DWRR_COST(x)            ((x) & GENMASK(4, 0))
#define QSYS_SE_DWRR_CFG_DWRR_COST_M             GENMASK(4, 0)
#define QSYS_SE_DWRR_CFG_DWRR_COST_X(x)          ((x) & GENMASK(4, 0))

/*      QSYS:HSCH:SE_CONNECT */
#define QSYS_SE_CONNECT(g)        __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 60, 0, 1, 4)

#define QSYS_SE_CONNECT_SE_OUTP_IDX(x)           (((x) << 17) & GENMASK(24, 17))
#define QSYS_SE_CONNECT_SE_OUTP_IDX_M            GENMASK(24, 17)
#define QSYS_SE_CONNECT_SE_OUTP_IDX_X(x)         (((x) & GENMASK(24, 17)) >> 17)

#define QSYS_SE_CONNECT_SE_INP_IDX(x)            (((x) << 9) & GENMASK(16, 9))
#define QSYS_SE_CONNECT_SE_INP_IDX_M             GENMASK(16, 9)
#define QSYS_SE_CONNECT_SE_INP_IDX_X(x)          (((x) & GENMASK(16, 9)) >> 9)

#define QSYS_SE_CONNECT_SE_OUTP_CON(x)           (((x) << 5) & GENMASK(8, 5))
#define QSYS_SE_CONNECT_SE_OUTP_CON_M            GENMASK(8, 5)
#define QSYS_SE_CONNECT_SE_OUTP_CON_X(x)         (((x) & GENMASK(8, 5)) >> 5)

#define QSYS_SE_CONNECT_SE_INP_CNT(x)            (((x) << 1) & GENMASK(4, 1))
#define QSYS_SE_CONNECT_SE_INP_CNT_M             GENMASK(4, 1)
#define QSYS_SE_CONNECT_SE_INP_CNT_X(x)          (((x) & GENMASK(4, 1)) >> 1)

#define QSYS_SE_CONNECT_SE_TERMINAL(x)           ((x) & GENMASK(0, 0))
#define QSYS_SE_CONNECT_SE_TERMINAL_M            GENMASK(0, 0)
#define QSYS_SE_CONNECT_SE_TERMINAL_X(x)         ((x) & GENMASK(0, 0))

/*      QSYS:HSCH:SE_DLB_SENSE */
#define QSYS_SE_DLB_SENSE(g)      __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 64, 0, 1, 4)

#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO(x)         (((x) << 11) & GENMASK(13, 11))
#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_M          GENMASK(13, 11)
#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_X(x)       (((x) & GENMASK(13, 11)) >> 11)

#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT(x)        (((x) << 7) & GENMASK(10, 7))
#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_M         GENMASK(10, 7)
#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_X(x)      (((x) & GENMASK(10, 7)) >> 7)

#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT(x)        (((x) << 3) & GENMASK(6, 3))
#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_M         GENMASK(6, 3)
#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_X(x)      (((x) & GENMASK(6, 3)) >> 3)

#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_ENA(x)     (((x) << 2) & GENMASK(2, 2))
#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_ENA_M      GENMASK(2, 2)
#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_ENA_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_ENA(x)    (((x) << 1) & GENMASK(1, 1))
#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_ENA_M     GENMASK(1, 1)
#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_ENA_X(x)  (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_ENA(x)    ((x) & GENMASK(0, 0))
#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_ENA_M     GENMASK(0, 0)
#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_ENA_X(x)  ((x) & GENMASK(0, 0))

/*      QSYS:HSCH:CIR_STATE */
#define QSYS_CIR_STATE(g)         __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 68, 0, 1, 4)

#define QSYS_CIR_STATE_CIR_LVL(x)                (((x) << 4) & GENMASK(25, 4))
#define QSYS_CIR_STATE_CIR_LVL_M                 GENMASK(25, 4)
#define QSYS_CIR_STATE_CIR_LVL_X(x)              (((x) & GENMASK(25, 4)) >> 4)

#define QSYS_CIR_STATE_SHP_TIME(x)               ((x) & GENMASK(3, 0))
#define QSYS_CIR_STATE_SHP_TIME_M                GENMASK(3, 0)
#define QSYS_CIR_STATE_SHP_TIME_X(x)             ((x) & GENMASK(3, 0))

/*      QSYS:HSCH:EIR_STATE */
#define QSYS_EIR_STATE(g)         __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 72, 0, 1, 4)

#define QSYS_EIR_STATE_EIR_LVL(x)                ((x) & GENMASK(21, 0))
#define QSYS_EIR_STATE_EIR_LVL_M                 GENMASK(21, 0)
#define QSYS_EIR_STATE_EIR_LVL_X(x)              ((x) & GENMASK(21, 0))

/*      QSYS:HSCH:SE_STATE */
#define QSYS_SE_STATE(g)          __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 76, 0, 1, 4)

#define QSYS_SE_STATE_SE_OUTP_LVL(x)             (((x) << 1) & GENMASK(2, 1))
#define QSYS_SE_STATE_SE_OUTP_LVL_M              GENMASK(2, 1)
#define QSYS_SE_STATE_SE_OUTP_LVL_X(x)           (((x) & GENMASK(2, 1)) >> 1)

#define QSYS_SE_STATE_SE_WAS_YEL(x)              ((x) & GENMASK(0, 0))
#define QSYS_SE_STATE_SE_WAS_YEL_M               GENMASK(0, 0)
#define QSYS_SE_STATE_SE_WAS_YEL_X(x)            ((x) & GENMASK(0, 0))

/*      QSYS:HSCH_MISC:HSCH_MISC_CFG */
#define QSYS_HSCH_MISC_CFG        __REG(TARGET_QSYS,\
					0, 1, 28668, 0, 1, 4, 0, 0, 1, 4)

#define QSYS_HSCH_MISC_CFG_SE_CONNECT_VLD(x)     (((x) << 7) & GENMASK(7, 7))
#define QSYS_HSCH_MISC_CFG_SE_CONNECT_VLD_M      GENMASK(7, 7)
#define QSYS_HSCH_MISC_CFG_SE_CONNECT_VLD_X(x)   (((x) & GENMASK(7, 7)) >> 7)

#define QSYS_HSCH_MISC_CFG_FRM_ADJ(x)            (((x) << 2) & GENMASK(6, 2))
#define QSYS_HSCH_MISC_CFG_FRM_ADJ_M             GENMASK(6, 2)
#define QSYS_HSCH_MISC_CFG_FRM_ADJ_X(x)          (((x) & GENMASK(6, 2)) >> 2)

#define QSYS_HSCH_MISC_CFG_LEAK_DIS(x)           (((x) << 1) & GENMASK(1, 1))
#define QSYS_HSCH_MISC_CFG_LEAK_DIS_M            GENMASK(1, 1)
#define QSYS_HSCH_MISC_CFG_LEAK_DIS_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_HSCH_MISC_CFG_PFC_BYP_UPD(x)        ((x) & GENMASK(0, 0))
#define QSYS_HSCH_MISC_CFG_PFC_BYP_UPD_M         GENMASK(0, 0)
#define QSYS_HSCH_MISC_CFG_PFC_BYP_UPD_X(x)      ((x) & GENMASK(0, 0))

/*      QSYS:TAS_CONFIG:TAS_CFG_CTRL */
#define QSYS_TAS_CFG_CTRL         __REG(TARGET_QSYS,\
					0, 1, 57372, 0, 1, 12, 0, 0, 1, 4)

#define QSYS_TAS_CFG_CTRL_LIST_NUM_MAX(x)        (((x) << 23) & GENMASK(27, 23))
#define QSYS_TAS_CFG_CTRL_LIST_NUM_MAX_M         GENMASK(27, 23)
#define QSYS_TAS_CFG_CTRL_LIST_NUM_MAX_X(x)      (((x) & GENMASK(27, 23)) >> 23)

#define QSYS_TAS_CFG_CTRL_LIST_NUM(x)            (((x) << 18) & GENMASK(22, 18))
#define QSYS_TAS_CFG_CTRL_LIST_NUM_M             GENMASK(22, 18)
#define QSYS_TAS_CFG_CTRL_LIST_NUM_X(x)          (((x) & GENMASK(22, 18)) >> 18)

#define QSYS_TAS_CFG_CTRL_ALWAYS_GB_SCH_Q(x)     (((x) << 17) & GENMASK(17, 17))
#define QSYS_TAS_CFG_CTRL_ALWAYS_GB_SCH_Q_M      GENMASK(17, 17)
#define QSYS_TAS_CFG_CTRL_ALWAYS_GB_SCH_Q_X(x)   (((x) & GENMASK(17, 17)) >> 17)

#define QSYS_TAS_CFG_CTRL_GCL_ENTRY_NUM(x)       (((x) << 5) & GENMASK(16, 5))
#define QSYS_TAS_CFG_CTRL_GCL_ENTRY_NUM_M        GENMASK(16, 5)
#define QSYS_TAS_CFG_CTRL_GCL_ENTRY_NUM_X(x)     (((x) & GENMASK(16, 5)) >> 5)

#define QSYS_TAS_CFG_CTRL_MINIMUM_GB_VAL(x)      ((x) & GENMASK(4, 0))
#define QSYS_TAS_CFG_CTRL_MINIMUM_GB_VAL_M       GENMASK(4, 0)
#define QSYS_TAS_CFG_CTRL_MINIMUM_GB_VAL_X(x)    ((x) & GENMASK(4, 0))

/*      QSYS:TAS_CONFIG:TAS_GS_CTRL */
#define QSYS_TAS_GS_CTRL          __REG(TARGET_QSYS,\
					0, 1, 57372, 0, 1, 12, 4, 0, 1, 4)

#define QSYS_TAS_GS_CTRL_HSCH_POS(x)             ((x) & GENMASK(2, 0))
#define QSYS_TAS_GS_CTRL_HSCH_POS_M              GENMASK(2, 0)
#define QSYS_TAS_GS_CTRL_HSCH_POS_X(x)           ((x) & GENMASK(2, 0))

/*      QSYS:TAS_CONFIG:TAS_STM_CFG */
#define QSYS_TAS_STM_CFG          __REG(TARGET_QSYS,\
					0, 1, 57372, 0, 1, 12, 8, 0, 1, 4)

#define QSYS_TAS_STM_CFG_REVISIT_DLY(x)          ((x) & GENMASK(7, 0))
#define QSYS_TAS_STM_CFG_REVISIT_DLY_M           GENMASK(7, 0)
#define QSYS_TAS_STM_CFG_REVISIT_DLY_X(x)        ((x) & GENMASK(7, 0))

/*      QSYS:TAS_PROFILE_CFG:TAS_QMAXSDU_CFG */
#define QSYS_TAS_QMAXSDU_CFG(g, r) __REG(TARGET_QSYS,\
					0, 1, 30720, g, 16, 64, 0, r, 8, 4)

#define QSYS_TAS_QMAXSDU_CFG_QMAXSDU_VAL(x)      ((x) & GENMASK(7, 0))
#define QSYS_TAS_QMAXSDU_CFG_QMAXSDU_VAL_M       GENMASK(7, 0)
#define QSYS_TAS_QMAXSDU_CFG_QMAXSDU_VAL_X(x)    ((x) & GENMASK(7, 0))

/*      QSYS:TAS_PROFILE_CFG:TAS_PROFILE_CFG */
#define QSYS_TAS_PROFILE_CFG(g)   __REG(TARGET_QSYS,\
					0, 1, 30720, g, 16, 64, 32, 0, 1, 4)

#define QSYS_TAS_PROFILE_CFG_PORT_NUM(x)         (((x) << 19) & GENMASK(21, 19))
#define QSYS_TAS_PROFILE_CFG_PORT_NUM_M          GENMASK(21, 19)
#define QSYS_TAS_PROFILE_CFG_PORT_NUM_X(x)       (((x) & GENMASK(21, 19)) >> 19)

#define QSYS_TAS_PROFILE_CFG_LINK_SPEED(x)       (((x) << 16) & GENMASK(18, 16))
#define QSYS_TAS_PROFILE_CFG_LINK_SPEED_M        GENMASK(18, 16)
#define QSYS_TAS_PROFILE_CFG_LINK_SPEED_X(x)     (((x) & GENMASK(18, 16)) >> 16)

#define QSYS_TAS_PROFILE_CFG_SCH_QUEUES(x)       (((x) << 8) & GENMASK(15, 8))
#define QSYS_TAS_PROFILE_CFG_SCH_QUEUES_M        GENMASK(15, 8)
#define QSYS_TAS_PROFILE_CFG_SCH_QUEUES_X(x)     (((x) & GENMASK(15, 8)) >> 8)

#define QSYS_TAS_PROFILE_CFG_HOLDADVANCE(x)      ((x) & GENMASK(7, 0))
#define QSYS_TAS_PROFILE_CFG_HOLDADVANCE_M       GENMASK(7, 0)
#define QSYS_TAS_PROFILE_CFG_HOLDADVANCE_X(x)    ((x) & GENMASK(7, 0))

/*      QSYS:TAS_LIST_CFG:TAS_BT_NSEC */
#define QSYS_TAS_BT_NSEC          __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 0, 0, 1, 4)

#define QSYS_TAS_BT_NSEC_NSEC(x)                 ((x) & GENMASK(29, 0))
#define QSYS_TAS_BT_NSEC_NSEC_M                  GENMASK(29, 0)
#define QSYS_TAS_BT_NSEC_NSEC_X(x)               ((x) & GENMASK(29, 0))

/*      QSYS:TAS_LIST_CFG:TAS_BT_SEC_LSB */
#define QSYS_TAS_BT_SEC_LSB       __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 4, 0, 1, 4)

/*      QSYS:TAS_LIST_CFG:TAS_BT_SEC_MSB */
#define QSYS_TAS_BT_SEC_MSB       __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 8, 0, 1, 4)

#define QSYS_TAS_BT_SEC_MSB_SEC_MSB(x)           ((x) & GENMASK(15, 0))
#define QSYS_TAS_BT_SEC_MSB_SEC_MSB_M            GENMASK(15, 0)
#define QSYS_TAS_BT_SEC_MSB_SEC_MSB_X(x)         ((x) & GENMASK(15, 0))

/*      QSYS:TAS_LIST_CFG:TAS_NTM_NSEC */
#define QSYS_TAS_NTM_NSEC         __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 12, 0, 1, 4)

#define QSYS_TAS_NTM_NSEC_NSEC(x)                ((x) & GENMASK(29, 0))
#define QSYS_TAS_NTM_NSEC_NSEC_M                 GENMASK(29, 0)
#define QSYS_TAS_NTM_NSEC_NSEC_X(x)              ((x) & GENMASK(29, 0))

/*      QSYS:TAS_LIST_CFG:TAS_NTM_SEC_LSB */
#define QSYS_TAS_NTM_SEC_LSB      __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 16, 0, 1, 4)

/*      QSYS:TAS_LIST_CFG:TAS_NTM_SEC_MSB */
#define QSYS_TAS_NTM_SEC_MSB      __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 20, 0, 1, 4)

#define QSYS_TAS_NTM_SEC_MSB_SEC_MSB(x)          ((x) & GENMASK(15, 0))
#define QSYS_TAS_NTM_SEC_MSB_SEC_MSB_M           GENMASK(15, 0)
#define QSYS_TAS_NTM_SEC_MSB_SEC_MSB_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:TAS_LIST_CFG:TAS_CT_CFG */
#define QSYS_TAS_CT_CFG           __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 24, 0, 1, 4)

/*      QSYS:TAS_LIST_CFG:TAS_STARTUP_CFG */
#define QSYS_TAS_STARTUP_CFG      __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 28, 0, 1, 4)

#define QSYS_TAS_STARTUP_CFG_OBSOLETE_IDX(x)     (((x) << 23) & GENMASK(27, 23))
#define QSYS_TAS_STARTUP_CFG_OBSOLETE_IDX_M      GENMASK(27, 23)
#define QSYS_TAS_STARTUP_CFG_OBSOLETE_IDX_X(x)   (((x) & GENMASK(27, 23)) >> 23)

#define QSYS_TAS_STARTUP_CFG_STARTUP_ERROR(x)    (((x) << 22) & GENMASK(22, 22))
#define QSYS_TAS_STARTUP_CFG_STARTUP_ERROR_M     GENMASK(22, 22)
#define QSYS_TAS_STARTUP_CFG_STARTUP_ERROR_X(x)  (((x) & GENMASK(22, 22)) >> 22)

#define QSYS_TAS_STARTUP_CFG_STARTUP_TIME(x)     ((x) & GENMASK(21, 0))
#define QSYS_TAS_STARTUP_CFG_STARTUP_TIME_M      GENMASK(21, 0)
#define QSYS_TAS_STARTUP_CFG_STARTUP_TIME_X(x)   ((x) & GENMASK(21, 0))

/*      QSYS:TAS_LIST_CFG:TAS_LIST_CFG */
#define QSYS_TAS_LIST_CFG         __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 32, 0, 1, 4)

#define QSYS_TAS_LIST_CFG_LIST_BASE_ADDR(x)      ((x) & GENMASK(11, 0))
#define QSYS_TAS_LIST_CFG_LIST_BASE_ADDR_M       GENMASK(11, 0)
#define QSYS_TAS_LIST_CFG_LIST_BASE_ADDR_X(x)    ((x) & GENMASK(11, 0))

/*      QSYS:TAS_LIST_CFG:TAS_LST */
#define QSYS_TAS_LST              __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 36, 0, 1, 4)

#define QSYS_TAS_LST_LIST_STATE(x)               ((x) & GENMASK(2, 0))
#define QSYS_TAS_LST_LIST_STATE_M                GENMASK(2, 0)
#define QSYS_TAS_LST_LIST_STATE_X(x)             ((x) & GENMASK(2, 0))

/*      QSYS:TAS_LIST_CFG:TAS_LIST_PTR_STATE */
#define QSYS_TAS_LIST_PTR_STATE   __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 40, 0, 1, 4)

#define QSYS_TAS_LIST_PTR_STATE_CUR_PTR(x)       ((x) & GENMASK(11, 0))
#define QSYS_TAS_LIST_PTR_STATE_CUR_PTR_M        GENMASK(11, 0)
#define QSYS_TAS_LIST_PTR_STATE_CUR_PTR_X(x)     ((x) & GENMASK(11, 0))

/*      QSYS:TAS_LIST_CFG:TAS_LST_INT */
#define QSYS_TAS_LST_INT          __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 44, 0, 1, 4)

/*      QSYS:TAS_GCL_CFG:TAS_GCL_CT_CFG */
#define QSYS_TAS_GCL_CT_CFG       __REG(TARGET_QSYS,\
					0, 1, 27968, 0, 1, 16, 0, 0, 1, 4)

#define QSYS_TAS_GCL_CT_CFG_HSCH_POS(x)          (((x) << 10) & GENMASK(12, 10))
#define QSYS_TAS_GCL_CT_CFG_HSCH_POS_M           GENMASK(12, 10)
#define QSYS_TAS_GCL_CT_CFG_HSCH_POS_X(x)        (((x) & GENMASK(12, 10)) >> 10)

#define QSYS_TAS_GCL_CT_CFG_GATE_STATE(x)        (((x) << 2) & GENMASK(9, 2))
#define QSYS_TAS_GCL_CT_CFG_GATE_STATE_M         GENMASK(9, 2)
#define QSYS_TAS_GCL_CT_CFG_GATE_STATE_X(x)      (((x) & GENMASK(9, 2)) >> 2)

#define QSYS_TAS_GCL_CT_CFG_OP_TYPE(x)           ((x) & GENMASK(1, 0))
#define QSYS_TAS_GCL_CT_CFG_OP_TYPE_M            GENMASK(1, 0)
#define QSYS_TAS_GCL_CT_CFG_OP_TYPE_X(x)         ((x) & GENMASK(1, 0))

/*      QSYS:TAS_GCL_CFG:TAS_GCL_CT_CFG2 */
#define QSYS_TAS_GCL_CT_CFG2      __REG(TARGET_QSYS,\
					0, 1, 27968, 0, 1, 16, 4, 0, 1, 4)

#define QSYS_TAS_GCL_CT_CFG2_PORT_PROFILE(x)     (((x) << 12) & GENMASK(15, 12))
#define QSYS_TAS_GCL_CT_CFG2_PORT_PROFILE_M      GENMASK(15, 12)
#define QSYS_TAS_GCL_CT_CFG2_PORT_PROFILE_X(x)   (((x) & GENMASK(15, 12)) >> 12)

#define QSYS_TAS_GCL_CT_CFG2_NEXT_GCL(x)         ((x) & GENMASK(11, 0))
#define QSYS_TAS_GCL_CT_CFG2_NEXT_GCL_M          GENMASK(11, 0)
#define QSYS_TAS_GCL_CT_CFG2_NEXT_GCL_X(x)       ((x) & GENMASK(11, 0))

/*      QSYS:TAS_GCL_CFG:TAS_GCL_TM_CFG */
#define QSYS_TAS_GCL_TM_CFG       __REG(TARGET_QSYS,\
					0, 1, 27968, 0, 1, 16, 8, 0, 1, 4)

/*      QSYS:HSCH_TAS_STATE:TAS_GATE_STATE */
#define QSYS_TAS_GATE_STATE       __REG(TARGET_QSYS,\
					0, 1, 28004, 0, 1, 4, 0, 0, 1, 4)

#define QSYS_TAS_GATE_STATE_TAS_GATE_STATE(x)    ((x) & GENMASK(7, 0))
#define QSYS_TAS_GATE_STATE_TAS_GATE_STATE_M     GENMASK(7, 0)
#define QSYS_TAS_GATE_STATE_TAS_GATE_STATE_X(x)  ((x) & GENMASK(7, 0))

/*      QSYS:FRER_MAP:FRER_FIRST */
#define QSYS_FRER_FIRST(g)        __REG(TARGET_QSYS,\
					0, 1, 40960, g, 256, 32, 0, 0, 1, 4)

#define QSYS_FRER_FIRST_FRER_FIRST_MEMBER(x)     ((x) & GENMASK(8, 0))
#define QSYS_FRER_FIRST_FRER_FIRST_MEMBER_M      GENMASK(8, 0)
#define QSYS_FRER_FIRST_FRER_FIRST_MEMBER_X(x)   ((x) & GENMASK(8, 0))

/*      QSYS:FRER_MAP:FRER_PORT */
#define QSYS_FRER_PORT(g, r)      __REG(TARGET_QSYS,\
					0, 1, 40960, g, 256, 32, 4, r, 4, 4)

#define QSYS_FRER_PORT_FRER_EGR_PORT(x)          ((x) & GENMASK(3, 0))
#define QSYS_FRER_PORT_FRER_EGR_PORT_M           GENMASK(3, 0)
#define QSYS_FRER_PORT_FRER_EGR_PORT_X(x)        ((x) & GENMASK(3, 0))

/*      QSYS:FRER_CFG:FRER_CFG */
#define QSYS_FRER_CFG             __REG(TARGET_QSYS,\
					0, 1, 57384, 0, 1, 4, 0, 0, 1, 4)

#define QSYS_FRER_CFG_WATCHDOG_PRESCALER(x)      (((x) << 9) & GENMASK(24, 9))
#define QSYS_FRER_CFG_WATCHDOG_PRESCALER_M       GENMASK(24, 9)
#define QSYS_FRER_CFG_WATCHDOG_PRESCALER_X(x)    (((x) & GENMASK(24, 9)) >> 9)

#define QSYS_FRER_CFG_ADDR(x)                    ((x) & GENMASK(8, 0))
#define QSYS_FRER_CFG_ADDR_M                     GENMASK(8, 0)
#define QSYS_FRER_CFG_ADDR_X(x)                  ((x) & GENMASK(8, 0))

/*      QSYS:FRER_CFG_COMPOUND:FRER_CFG_CMP */
#define QSYS_FRER_CFG_CMP(g)      __REG(TARGET_QSYS,\
					0, 1, 31744, g, 256, 4, 0, 0, 1, 4)

#define QSYS_FRER_CFG_CMP_TAKE_NO_SEQUENCE(x)    (((x) << 20) & GENMASK(20, 20))
#define QSYS_FRER_CFG_CMP_TAKE_NO_SEQUENCE_M     GENMASK(20, 20)
#define QSYS_FRER_CFG_CMP_TAKE_NO_SEQUENCE_X(x)  (((x) & GENMASK(20, 20)) >> 20)

#define QSYS_FRER_CFG_CMP_VECTOR_ALGORITHM(x)    (((x) << 19) & GENMASK(19, 19))
#define QSYS_FRER_CFG_CMP_VECTOR_ALGORITHM_M     GENMASK(19, 19)
#define QSYS_FRER_CFG_CMP_VECTOR_ALGORITHM_X(x)  (((x) & GENMASK(19, 19)) >> 19)

#define QSYS_FRER_CFG_CMP_HISTORY_LENGTH(x)      (((x) << 14) & GENMASK(18, 14))
#define QSYS_FRER_CFG_CMP_HISTORY_LENGTH_M       GENMASK(18, 14)
#define QSYS_FRER_CFG_CMP_HISTORY_LENGTH_X(x)    (((x) & GENMASK(18, 14)) >> 14)

#define QSYS_FRER_CFG_CMP_RESET_TICKS(x)         (((x) << 2) & GENMASK(13, 2))
#define QSYS_FRER_CFG_CMP_RESET_TICKS_M          GENMASK(13, 2)
#define QSYS_FRER_CFG_CMP_RESET_TICKS_X(x)       (((x) & GENMASK(13, 2)) >> 2)

#define QSYS_FRER_CFG_CMP_RESET(x)               (((x) << 1) & GENMASK(1, 1))
#define QSYS_FRER_CFG_CMP_RESET_M                GENMASK(1, 1)
#define QSYS_FRER_CFG_CMP_RESET_X(x)             (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_FRER_CFG_CMP_ENABLE(x)              ((x) & GENMASK(0, 0))
#define QSYS_FRER_CFG_CMP_ENABLE_M               GENMASK(0, 0)
#define QSYS_FRER_CFG_CMP_ENABLE_X(x)            ((x) & GENMASK(0, 0))

/*      QSYS:FRER_CFG_MEMBER:FRER_CFG_MBM */
#define QSYS_FRER_CFG_MBM(g)      __REG(TARGET_QSYS,\
					0, 1, 28672, g, 512, 4, 0, 0, 1, 4)

#define QSYS_FRER_CFG_MBM_TAKE_NO_SEQUENCE(x)    (((x) << 28) & GENMASK(28, 28))
#define QSYS_FRER_CFG_MBM_TAKE_NO_SEQUENCE_M     GENMASK(28, 28)
#define QSYS_FRER_CFG_MBM_TAKE_NO_SEQUENCE_X(x)  (((x) & GENMASK(28, 28)) >> 28)

#define QSYS_FRER_CFG_MBM_VECTOR_ALGORITHM(x)    (((x) << 27) & GENMASK(27, 27))
#define QSYS_FRER_CFG_MBM_VECTOR_ALGORITHM_M     GENMASK(27, 27)
#define QSYS_FRER_CFG_MBM_VECTOR_ALGORITHM_X(x)  (((x) & GENMASK(27, 27)) >> 27)

#define QSYS_FRER_CFG_MBM_HISTORY_LENGTH(x)      (((x) << 22) & GENMASK(26, 22))
#define QSYS_FRER_CFG_MBM_HISTORY_LENGTH_M       GENMASK(26, 22)
#define QSYS_FRER_CFG_MBM_HISTORY_LENGTH_X(x)    (((x) & GENMASK(26, 22)) >> 22)

#define QSYS_FRER_CFG_MBM_RESET_TICKS(x)         (((x) << 10) & GENMASK(21, 10))
#define QSYS_FRER_CFG_MBM_RESET_TICKS_M          GENMASK(21, 10)
#define QSYS_FRER_CFG_MBM_RESET_TICKS_X(x)       (((x) & GENMASK(21, 10)) >> 10)

#define QSYS_FRER_CFG_MBM_RESET(x)               (((x) << 9) & GENMASK(9, 9))
#define QSYS_FRER_CFG_MBM_RESET_M                GENMASK(9, 9)
#define QSYS_FRER_CFG_MBM_RESET_X(x)             (((x) & GENMASK(9, 9)) >> 9)

#define QSYS_FRER_CFG_MBM_ENABLE(x)              (((x) << 8) & GENMASK(8, 8))
#define QSYS_FRER_CFG_MBM_ENABLE_M               GENMASK(8, 8)
#define QSYS_FRER_CFG_MBM_ENABLE_X(x)            (((x) & GENMASK(8, 8)) >> 8)

#define QSYS_FRER_CFG_MBM_COMPOUND_HANDLE(x)     ((x) & GENMASK(7, 0))
#define QSYS_FRER_CFG_MBM_COMPOUND_HANDLE_M      GENMASK(7, 0)
#define QSYS_FRER_CFG_MBM_COMPOUND_HANDLE_X(x)   ((x) & GENMASK(7, 0))

/*      QSYS:FRER_STA_COMPOUND:FRER_STA_CMP */
#define QSYS_FRER_STA_CMP         __REG(TARGET_QSYS,\
					0, 1, 27984, 0, 1, 8, 0, 0, 1, 4)

#define QSYS_FRER_STA_CMP_SEQ_NO(x)              (((x) << 13) & GENMASK(28, 13))
#define QSYS_FRER_STA_CMP_SEQ_NO_M               GENMASK(28, 13)
#define QSYS_FRER_STA_CMP_SEQ_NO_X(x)            (((x) & GENMASK(28, 13)) >> 13)

#define QSYS_FRER_STA_CMP_TICKS(x)               (((x) << 1) & GENMASK(12, 1))
#define QSYS_FRER_STA_CMP_TICKS_M                GENMASK(12, 1)
#define QSYS_FRER_STA_CMP_TICKS_X(x)             (((x) & GENMASK(12, 1)) >> 1)

#define QSYS_FRER_STA_CMP_TAKE_ANY(x)            ((x) & GENMASK(0, 0))
#define QSYS_FRER_STA_CMP_TAKE_ANY_M             GENMASK(0, 0)
#define QSYS_FRER_STA_CMP_TAKE_ANY_X(x)          ((x) & GENMASK(0, 0))

/*      QSYS:FRER_STA_COMPOUND:FRER_HST_CMP */
#define QSYS_FRER_HST_CMP         __REG(TARGET_QSYS,\
					0, 1, 27984, 0, 1, 8, 4, 0, 1, 4)

/*      QSYS:FRER_STA_MEMBER:FRER_STA_MBM */
#define QSYS_FRER_STA_MBM         __REG(TARGET_QSYS,\
					0, 1, 27992, 0, 1, 8, 0, 0, 1, 4)

#define QSYS_FRER_STA_MBM_SEQ_NO(x)              (((x) << 13) & GENMASK(28, 13))
#define QSYS_FRER_STA_MBM_SEQ_NO_M               GENMASK(28, 13)
#define QSYS_FRER_STA_MBM_SEQ_NO_X(x)            (((x) & GENMASK(28, 13)) >> 13)

#define QSYS_FRER_STA_MBM_TICKS(x)               (((x) << 1) & GENMASK(12, 1))
#define QSYS_FRER_STA_MBM_TICKS_M                GENMASK(12, 1)
#define QSYS_FRER_STA_MBM_TICKS_X(x)             (((x) & GENMASK(12, 1)) >> 1)

#define QSYS_FRER_STA_MBM_TAKE_ANY(x)            ((x) & GENMASK(0, 0))
#define QSYS_FRER_STA_MBM_TAKE_ANY_M             GENMASK(0, 0)
#define QSYS_FRER_STA_MBM_TAKE_ANY_X(x)          ((x) & GENMASK(0, 0))

/*      QSYS:FRER_STA_MEMBER:FRER_HST_MBM */
#define QSYS_FRER_HST_MBM         __REG(TARGET_QSYS,\
					0, 1, 27992, 0, 1, 8, 4, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_RS */
#define QSYS_CNT_CMP_RS(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 0, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_TL */
#define QSYS_CNT_CMP_TL(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 4, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_PS */
#define QSYS_CNT_CMP_PS(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 8, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_DC */
#define QSYS_CNT_CMP_DC(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 12, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_OO */
#define QSYS_CNT_CMP_OO(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 16, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_RG */
#define QSYS_CNT_CMP_RG(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 20, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_LS */
#define QSYS_CNT_CMP_LS(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 24, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_RS */
#define QSYS_CNT_MBM_RS(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 0, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_TL */
#define QSYS_CNT_MBM_TL(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 4, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_PS */
#define QSYS_CNT_MBM_PS(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 8, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_DC */
#define QSYS_CNT_MBM_DC(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 12, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_OO */
#define QSYS_CNT_MBM_OO(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 16, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_RG */
#define QSYS_CNT_MBM_RG(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 20, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_LS */
#define QSYS_CNT_MBM_LS(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 24, 0, 1, 4)

/*      REW:PORT:PORT_VLAN_CFG */
#define REW_PORT_VLAN_CFG(g)      __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 0, 0, 1, 4)

#define REW_PORT_VLAN_CFG_PORT_TPID(x)           (((x) << 16) & GENMASK(31, 16))
#define REW_PORT_VLAN_CFG_PORT_TPID_M            GENMASK(31, 16)
#define REW_PORT_VLAN_CFG_PORT_TPID_X(x)         (((x) & GENMASK(31, 16)) >> 16)

#define REW_PORT_VLAN_CFG_PORT_DEI(x)            (((x) << 15) & GENMASK(15, 15))
#define REW_PORT_VLAN_CFG_PORT_DEI_M             GENMASK(15, 15)
#define REW_PORT_VLAN_CFG_PORT_DEI_X(x)          (((x) & GENMASK(15, 15)) >> 15)

#define REW_PORT_VLAN_CFG_PORT_PCP(x)            (((x) << 12) & GENMASK(14, 12))
#define REW_PORT_VLAN_CFG_PORT_PCP_M             GENMASK(14, 12)
#define REW_PORT_VLAN_CFG_PORT_PCP_X(x)          (((x) & GENMASK(14, 12)) >> 12)

#define REW_PORT_VLAN_CFG_PORT_VID(x)            ((x) & GENMASK(11, 0))
#define REW_PORT_VLAN_CFG_PORT_VID_M             GENMASK(11, 0)
#define REW_PORT_VLAN_CFG_PORT_VID_X(x)          ((x) & GENMASK(11, 0))

/*      REW:PORT:TAG_CFG */
#define REW_TAG_CFG(g)            __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 4, 0, 1, 4)

#define REW_TAG_CFG_TAG_CFG(x)                   (((x) << 7) & GENMASK(8, 7))
#define REW_TAG_CFG_TAG_CFG_M                    GENMASK(8, 7)
#define REW_TAG_CFG_TAG_CFG_X(x)                 (((x) & GENMASK(8, 7)) >> 7)

#define REW_TAG_CFG_TAG_TPID_CFG(x)              (((x) << 5) & GENMASK(6, 5))
#define REW_TAG_CFG_TAG_TPID_CFG_M               GENMASK(6, 5)
#define REW_TAG_CFG_TAG_TPID_CFG_X(x)            (((x) & GENMASK(6, 5)) >> 5)

#define REW_TAG_CFG_TAG_VID_CFG(x)               (((x) << 4) & GENMASK(4, 4))
#define REW_TAG_CFG_TAG_VID_CFG_M                GENMASK(4, 4)
#define REW_TAG_CFG_TAG_VID_CFG_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define REW_TAG_CFG_TAG_PCP_CFG(x)               (((x) << 2) & GENMASK(3, 2))
#define REW_TAG_CFG_TAG_PCP_CFG_M                GENMASK(3, 2)
#define REW_TAG_CFG_TAG_PCP_CFG_X(x)             (((x) & GENMASK(3, 2)) >> 2)

#define REW_TAG_CFG_TAG_DEI_CFG(x)               ((x) & GENMASK(1, 0))
#define REW_TAG_CFG_TAG_DEI_CFG_M                GENMASK(1, 0)
#define REW_TAG_CFG_TAG_DEI_CFG_X(x)             ((x) & GENMASK(1, 0))

/*      REW:PORT:PORT_CFG */
#define REW_PORT_CFG(g)           __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 8, 0, 1, 4)

#define REW_PORT_CFG_ES0_EN(x)                   (((x) << 4) & GENMASK(4, 4))
#define REW_PORT_CFG_ES0_EN_M                    GENMASK(4, 4)
#define REW_PORT_CFG_ES0_EN_X(x)                 (((x) & GENMASK(4, 4)) >> 4)

#define REW_PORT_CFG_FCS_UPDATE_NONCPU_CFG(x)    (((x) << 2) & GENMASK(3, 2))
#define REW_PORT_CFG_FCS_UPDATE_NONCPU_CFG_M     GENMASK(3, 2)
#define REW_PORT_CFG_FCS_UPDATE_NONCPU_CFG_X(x)  (((x) & GENMASK(3, 2)) >> 2)

#define REW_PORT_CFG_FCS_UPDATE_CPU_ENA(x)       (((x) << 1) & GENMASK(1, 1))
#define REW_PORT_CFG_FCS_UPDATE_CPU_ENA_M        GENMASK(1, 1)
#define REW_PORT_CFG_FCS_UPDATE_CPU_ENA_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define REW_PORT_CFG_NO_REWRITE(x)               ((x) & GENMASK(0, 0))
#define REW_PORT_CFG_NO_REWRITE_M                GENMASK(0, 0)
#define REW_PORT_CFG_NO_REWRITE_X(x)             ((x) & GENMASK(0, 0))

/*      REW:PORT:DSCP_CFG */
#define REW_DSCP_CFG(g)           __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 12, 0, 1, 4)

#define REW_DSCP_CFG_DSCP_REWR_CFG(x)            ((x) & GENMASK(1, 0))
#define REW_DSCP_CFG_DSCP_REWR_CFG_M             GENMASK(1, 0)
#define REW_DSCP_CFG_DSCP_REWR_CFG_X(x)          ((x) & GENMASK(1, 0))

/*      REW:PORT:PCP_DEI_CFG */
#define REW_PCP_DEI_CFG(g, r)     __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 16, r, 16, 4)

#define REW_PCP_DEI_CFG_DEI_QOS_VAL(x)           (((x) << 3) & GENMASK(3, 3))
#define REW_PCP_DEI_CFG_DEI_QOS_VAL_M            GENMASK(3, 3)
#define REW_PCP_DEI_CFG_DEI_QOS_VAL_X(x)         (((x) & GENMASK(3, 3)) >> 3)

#define REW_PCP_DEI_CFG_PCP_QOS_VAL(x)           ((x) & GENMASK(2, 0))
#define REW_PCP_DEI_CFG_PCP_QOS_VAL_M            GENMASK(2, 0)
#define REW_PCP_DEI_CFG_PCP_QOS_VAL_X(x)         ((x) & GENMASK(2, 0))

/*      REW:PORT:PTP_MISC_CFG */
#define REW_PTP_MISC_CFG(g)       __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 80, 0, 1, 4)

#define REW_PTP_MISC_CFG_PTP_RSRV_MOVEBACK(x)    (((x) << 2) & GENMASK(2, 2))
#define REW_PTP_MISC_CFG_PTP_RSRV_MOVEBACK_M     GENMASK(2, 2)
#define REW_PTP_MISC_CFG_PTP_RSRV_MOVEBACK_X(x)  (((x) & GENMASK(2, 2)) >> 2)

#define REW_PTP_MISC_CFG_PTP_SIGNATURE_SEL(x)    ((x) & GENMASK(1, 0))
#define REW_PTP_MISC_CFG_PTP_SIGNATURE_SEL_M     GENMASK(1, 0)
#define REW_PTP_MISC_CFG_PTP_SIGNATURE_SEL_X(x)  ((x) & GENMASK(1, 0))

/*      REW:PORT:PTP_EDLY_CFG */
#define REW_PTP_EDLY_CFG(g)       __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 84, 0, 1, 4)

/*      REW:PORT:PTP_IDLY1_CFG */
#define REW_PTP_IDLY1_CFG(g)      __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 88, 0, 1, 4)

/*      REW:PORT:PTP_IDLY2_CFG */
#define REW_PTP_IDLY2_CFG(g)      __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 92, 0, 1, 4)

/*      REW:PORT:PTP_SMAC_LOW */
#define REW_PTP_SMAC_LOW(g)       __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 96, 0, 1, 4)

/*      REW:PORT:PTP_SMAC_HIGH */
#define REW_PTP_SMAC_HIGH(g)      __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 100, 0, 1, 4)

#define REW_PTP_SMAC_HIGH_PTP_SMAC_HIGH(x)       ((x) & GENMASK(15, 0))
#define REW_PTP_SMAC_HIGH_PTP_SMAC_HIGH_M        GENMASK(15, 0)
#define REW_PTP_SMAC_HIGH_PTP_SMAC_HIGH_X(x)     ((x) & GENMASK(15, 0))

/*      REW:PORT:RED_TAG_CFG */
#define REW_RED_TAG_CFG(g)        __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 104, 0, 1, 4)

#define REW_RED_TAG_CFG_RED_TAG_CFG(x)           ((x) & GENMASK(0, 0))
#define REW_RED_TAG_CFG_RED_TAG_CFG_M            GENMASK(0, 0)
#define REW_RED_TAG_CFG_RED_TAG_CFG_X(x)         ((x) & GENMASK(0, 0))

/*      REW:PORT:CCM_TX_CFG */
#define REW_CCM_TX_CFG(g)         __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 108, 0, 1, 4)

#define REW_CCM_TX_CFG_CCM_SEQ_UPD_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define REW_CCM_TX_CFG_CCM_SEQ_UPD_ENA_M         GENMASK(1, 1)
#define REW_CCM_TX_CFG_CCM_SEQ_UPD_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define REW_CCM_TX_CFG_CCM_TX_RDI(x)             ((x) & GENMASK(0, 0))
#define REW_CCM_TX_CFG_CCM_TX_RDI_M              GENMASK(0, 0)
#define REW_CCM_TX_CFG_CCM_TX_RDI_X(x)           ((x) & GENMASK(0, 0))

/*      REW:PORT:MRP_TX_CFG */
#define REW_MRP_TX_CFG(g, r)      __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 112, r, 2, 4)

#define REW_MRP_TX_CFG_MRP_TIMESTAMP_UPD(x)      (((x) << 22) & GENMASK(22, 22))
#define REW_MRP_TX_CFG_MRP_TIMESTAMP_UPD_M       GENMASK(22, 22)
#define REW_MRP_TX_CFG_MRP_TIMESTAMP_UPD_X(x)    (((x) & GENMASK(22, 22)) >> 22)

#define REW_MRP_TX_CFG_MRP_SEQ_UPD(x)            (((x) << 21) & GENMASK(21, 21))
#define REW_MRP_TX_CFG_MRP_SEQ_UPD_M             GENMASK(21, 21)
#define REW_MRP_TX_CFG_MRP_SEQ_UPD_X(x)          (((x) & GENMASK(21, 21)) >> 21)

#define REW_MRP_TX_CFG_MRP_MISC_UPD(x)           (((x) << 20) & GENMASK(20, 20))
#define REW_MRP_TX_CFG_MRP_MISC_UPD_M            GENMASK(20, 20)
#define REW_MRP_TX_CFG_MRP_MISC_UPD_X(x)         (((x) & GENMASK(20, 20)) >> 20)

#define REW_MRP_TX_CFG_MRP_STATE(x)              (((x) << 18) & GENMASK(19, 18))
#define REW_MRP_TX_CFG_MRP_STATE_M               GENMASK(19, 18)
#define REW_MRP_TX_CFG_MRP_STATE_X(x)            (((x) & GENMASK(19, 18)) >> 18)

#define REW_MRP_TX_CFG_MRP_PORTROLE(x)           (((x) << 16) & GENMASK(17, 16))
#define REW_MRP_TX_CFG_MRP_PORTROLE_M            GENMASK(17, 16)
#define REW_MRP_TX_CFG_MRP_PORTROLE_X(x)         (((x) & GENMASK(17, 16)) >> 16)

#define REW_MRP_TX_CFG_MRP_TRANS(x)              ((x) & GENMASK(15, 0))
#define REW_MRP_TX_CFG_MRP_TRANS_M               GENMASK(15, 0)
#define REW_MRP_TX_CFG_MRP_TRANS_X(x)            ((x) & GENMASK(15, 0))

/*      REW:PORT:DLR_TX_CFG */
#define REW_DLR_TX_CFG(g, r)      __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 120, r, 2, 4)

#define REW_DLR_TX_CFG_DLR_SEQ_UPD_ENA(x)        (((x) << 5) & GENMASK(5, 5))
#define REW_DLR_TX_CFG_DLR_SEQ_UPD_ENA_M         GENMASK(5, 5)
#define REW_DLR_TX_CFG_DLR_SEQ_UPD_ENA_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define REW_DLR_TX_CFG_DLR_STATE_UPD_ENA(x)      (((x) << 4) & GENMASK(4, 4))
#define REW_DLR_TX_CFG_DLR_STATE_UPD_ENA_M       GENMASK(4, 4)
#define REW_DLR_TX_CFG_DLR_STATE_UPD_ENA_X(x)    (((x) & GENMASK(4, 4)) >> 4)

#define REW_DLR_TX_CFG_DLR_STATE(x)              ((x) & GENMASK(3, 0))
#define REW_DLR_TX_CFG_DLR_STATE_M               GENMASK(3, 0)
#define REW_DLR_TX_CFG_DLR_STATE_X(x)            ((x) & GENMASK(3, 0))

/*      REW:PTP_SEQ_NO:PTP_SEQ_NO */
#define REW_PTP_SEQ_NO(r)         __REG(TARGET_REW,\
					0, 1, 2048, 0, 1, 1024, 0, r, 256, 4)

#define REW_PTP_SEQ_NO_PTP_SEQ_NO_1(x)           (((x) << 16) & GENMASK(31, 16))
#define REW_PTP_SEQ_NO_PTP_SEQ_NO_1_M            GENMASK(31, 16)
#define REW_PTP_SEQ_NO_PTP_SEQ_NO_1_X(x)         (((x) & GENMASK(31, 16)) >> 16)

#define REW_PTP_SEQ_NO_PTP_SEQ_NO_0(x)           ((x) & GENMASK(15, 0))
#define REW_PTP_SEQ_NO_PTP_SEQ_NO_0_M            GENMASK(15, 0)
#define REW_PTP_SEQ_NO_PTP_SEQ_NO_0_X(x)         ((x) & GENMASK(15, 0))

/*      REW:COMMON:TICK_CFG */
#define REW_TICK_CFG              __REG(TARGET_REW,\
					0, 1, 3072, 0, 1, 528, 0, 0, 1, 4)

#define REW_TICK_CFG_TICK_CNT(x)                 ((x) & GENMASK(17, 0))
#define REW_TICK_CFG_TICK_CNT_M                  GENMASK(17, 0)
#define REW_TICK_CFG_TICK_CNT_X(x)               ((x) & GENMASK(17, 0))

/*      REW:COMMON:MRP_TX_TS_CFG */
#define REW_MRP_TX_TS_CFG         __REG(TARGET_REW,\
					0, 1, 3072, 0, 1, 528, 4, 0, 1, 4)

/*      REW:COMMON:DSCP_RM_DP1_CFG */
#define REW_DSCP_RM_DP1_CFG(r)    __REG(TARGET_REW,\
					0, 1, 3072, 0, 1, 528, 8, r, 64, 4)

#define REW_DSCP_RM_DP1_CFG_DP1_VAL(x)           ((x) & GENMASK(5, 0))
#define REW_DSCP_RM_DP1_CFG_DP1_VAL_M            GENMASK(5, 0)
#define REW_DSCP_RM_DP1_CFG_DP1_VAL_X(x)         ((x) & GENMASK(5, 0))

/*      REW:COMMON:DSCP_RM_CFG */
#define REW_DSCP_RM_CFG(r)        __REG(TARGET_REW,\
					0, 1, 3072, 0, 1, 528, 264, r, 64, 4)

#define REW_DSCP_RM_CFG_VAL(x)                   ((x) & GENMASK(5, 0))
#define REW_DSCP_RM_CFG_VAL_M                    GENMASK(5, 0)
#define REW_DSCP_RM_CFG_VAL_X(x)                 ((x) & GENMASK(5, 0))

/*      REW:COMMON:STAT_CFG */
#define REW_STAT_CFG              __REG(TARGET_REW,\
					0, 1, 3072, 0, 1, 528, 520, 0, 1, 4)

#define REW_STAT_CFG_STAT_MODE(x)                ((x) & GENMASK(1, 0))
#define REW_STAT_CFG_STAT_MODE_M                 GENMASK(1, 0)
#define REW_STAT_CFG_STAT_MODE_X(x)              ((x) & GENMASK(1, 0))

/*      REW:COMMON:REW_STICKY */
#define REW_REW_STICKY            __REG(TARGET_REW,\
					0, 1, 3072, 0, 1, 528, 524, 0, 1, 4)

#define REW_REW_STICKY_ES0_TAGB_PUSH_FAILED(x)   ((x) & GENMASK(0, 0))
#define REW_REW_STICKY_ES0_TAGB_PUSH_FAILED_M    GENMASK(0, 0)
#define REW_REW_STICKY_ES0_TAGB_PUSH_FAILED_X(x) ((x) & GENMASK(0, 0))

/*      REW:GPTP_DOM:GPTP_DOM_CFG */
#define REW_GPTP_DOM_CFG(g)       __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 0, 0, 1, 4)

#define REW_GPTP_DOM_CFG_TOD_DOMAIN(x)           ((x) & GENMASK(1, 0))
#define REW_GPTP_DOM_CFG_TOD_DOMAIN_M            GENMASK(1, 0)
#define REW_GPTP_DOM_CFG_TOD_DOMAIN_X(x)         ((x) & GENMASK(1, 0))

/*      REW:GPTP_DOM:GM_ITS */
#define REW_GM_ITS(g)             __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 4, 0, 1, 4)

/*      REW:GPTP_DOM:GM_IORG_SEC_MSB */
#define REW_GM_IORG_SEC_MSB(g)    __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 8, 0, 1, 4)

#define REW_GM_IORG_SEC_MSB_GM_IORG_SEC_MSB(x)   ((x) & GENMASK(15, 0))
#define REW_GM_IORG_SEC_MSB_GM_IORG_SEC_MSB_M    GENMASK(15, 0)
#define REW_GM_IORG_SEC_MSB_GM_IORG_SEC_MSB_X(x) ((x) & GENMASK(15, 0))

/*      REW:GPTP_DOM:GM_IORG_SEC_LSB */
#define REW_GM_IORG_SEC_LSB(g)    __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 12, 0, 1, 4)

/*      REW:GPTP_DOM:GM_IORG_NSEC */
#define REW_GM_IORG_NSEC(g)       __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 16, 0, 1, 4)

/*      REW:GPTP_DOM:GM_ICF_MSB */
#define REW_GM_ICF_MSB(g)         __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 20, 0, 1, 4)

/*      REW:GPTP_DOM:GM_ICF_LSB */
#define REW_GM_ICF_LSB(g)         __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 24, 0, 1, 4)

/*      REW:GPTP_DOM:GM_ICF_SUB */
#define REW_GM_ICF_SUB(g)         __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 28, 0, 1, 4)

#define REW_GM_ICF_SUB_GM_ICF_SUB(x)             ((x) & GENMASK(15, 0))
#define REW_GM_ICF_SUB_GM_ICF_SUB_M              GENMASK(15, 0)
#define REW_GM_ICF_SUB_GM_ICF_SUB_X(x)           ((x) & GENMASK(15, 0))

/*      REW:GPTP_DOM:GM_RATERATIO */
#define REW_GM_RATERATIO(g)       __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 32, 0, 1, 4)

/*      REW:GPTP_DOM:PTP_CLOCK_ID_MSB */
#define REW_PTP_CLOCK_ID_MSB(g)   __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 36, 0, 1, 4)

/*      REW:GPTP_DOM:PTP_CLOCK_ID_LSB */
#define REW_PTP_CLOCK_ID_LSB(g)   __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 40, 0, 1, 4)

/*      REW:GPTP_DOM:PTP_SRC_PORT_CFG */
#define REW_PTP_SRC_PORT_CFG(g)   __REG(TARGET_REW,\
					0, 1, 1280, g, 4, 64, 44, 0, 1, 4)

#define REW_PTP_SRC_PORT_CFG_PORT_NUM_SEL(x)     (((x) << 16) & GENMASK(16, 16))
#define REW_PTP_SRC_PORT_CFG_PORT_NUM_SEL_M      GENMASK(16, 16)
#define REW_PTP_SRC_PORT_CFG_PORT_NUM_SEL_X(x)   (((x) & GENMASK(16, 16)) >> 16)

#define REW_PTP_SRC_PORT_CFG_PORT_NUM(x)         ((x) & GENMASK(15, 0))
#define REW_PTP_SRC_PORT_CFG_PORT_NUM_M          GENMASK(15, 0)
#define REW_PTP_SRC_PORT_CFG_PORT_NUM_X(x)       ((x) & GENMASK(15, 0))

/*      REW:GPTP_COMMON_CFG:GPTP_NRR_CFG */
#define REW_GPTP_NRR_CFG(r)       __REG(TARGET_REW,\
					0, 1, 1536, 0, 1, 80, 0, r, 10, 4)

/*      REW:GPTP_COMMON_CFG:GPTP_PORTID_CFG */
#define REW_GPTP_PORTID_CFG(r)    __REG(TARGET_REW,\
					0, 1, 1536, 0, 1, 80, 40, r, 10, 4)

#define REW_GPTP_PORTID_CFG_GPTP_PORTID_VAL(x)   ((x) & GENMASK(15, 0))
#define REW_GPTP_PORTID_CFG_GPTP_PORTID_VAL_M    GENMASK(15, 0)
#define REW_GPTP_PORTID_CFG_GPTP_PORTID_VAL_X(x) ((x) & GENMASK(15, 0))

/*      SYS:SYSTEM:RESET_CFG */
#define SYS_RESET_CFG             __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 0, 0, 1, 4)

#define SYS_RESET_CFG_CORE_ENA(x)                ((x) & GENMASK(0, 0))
#define SYS_RESET_CFG_CORE_ENA_M                 GENMASK(0, 0)
#define SYS_RESET_CFG_CORE_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      SYS:SYSTEM:PORT_DBG */
#define SYS_PORT_DBG(r)           __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 4, r, 10, 4)

#define SYS_PORT_DBG_DBG_HOOKS(x)                ((x) & GENMASK(3, 0))
#define SYS_PORT_DBG_DBG_HOOKS_M                 GENMASK(3, 0)
#define SYS_PORT_DBG_DBG_HOOKS_X(x)              ((x) & GENMASK(3, 0))

/*      SYS:SYSTEM:PORT_MODE */
#define SYS_PORT_MODE(r)          __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 44, r, 10, 4)

#define SYS_PORT_MODE_DATA_WO_TS(x)              (((x) << 6) & GENMASK(7, 6))
#define SYS_PORT_MODE_DATA_WO_TS_M               GENMASK(7, 6)
#define SYS_PORT_MODE_DATA_WO_TS_X(x)            (((x) & GENMASK(7, 6)) >> 6)

#define SYS_PORT_MODE_INCL_INJ_HDR(x)            (((x) << 4) & GENMASK(5, 4))
#define SYS_PORT_MODE_INCL_INJ_HDR_M             GENMASK(5, 4)
#define SYS_PORT_MODE_INCL_INJ_HDR_X(x)          (((x) & GENMASK(5, 4)) >> 4)

#define SYS_PORT_MODE_INCL_XTR_HDR(x)            (((x) << 2) & GENMASK(3, 2))
#define SYS_PORT_MODE_INCL_XTR_HDR_M             GENMASK(3, 2)
#define SYS_PORT_MODE_INCL_XTR_HDR_X(x)          (((x) & GENMASK(3, 2)) >> 2)

#define SYS_PORT_MODE_INJ_HDR_ERR(x)             (((x) << 1) & GENMASK(1, 1))
#define SYS_PORT_MODE_INJ_HDR_ERR_M              GENMASK(1, 1)
#define SYS_PORT_MODE_INJ_HDR_ERR_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define SYS_PORT_MODE_PAD_DIS(x)                 ((x) & GENMASK(0, 0))
#define SYS_PORT_MODE_PAD_DIS_M                  GENMASK(0, 0)
#define SYS_PORT_MODE_PAD_DIS_X(x)               ((x) & GENMASK(0, 0))

/*      SYS:SYSTEM:FRONT_PORT_MODE */
#define SYS_FRONT_PORT_MODE(r)    __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 84, r, 8, 4)

#define SYS_FRONT_PORT_MODE_ADD_FRAG_SIZE(x)     (((x) << 8) & GENMASK(9, 8))
#define SYS_FRONT_PORT_MODE_ADD_FRAG_SIZE_M      GENMASK(9, 8)
#define SYS_FRONT_PORT_MODE_ADD_FRAG_SIZE_X(x)   (((x) & GENMASK(9, 8)) >> 8)

#define SYS_FRONT_PORT_MODE_HDX_MODE(x)          (((x) << 1) & GENMASK(1, 1))
#define SYS_FRONT_PORT_MODE_HDX_MODE_M           GENMASK(1, 1)
#define SYS_FRONT_PORT_MODE_HDX_MODE_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define SYS_FRONT_PORT_MODE_DONT_WAIT_FOR_TS(x)  ((x) & GENMASK(0, 0))
#define SYS_FRONT_PORT_MODE_DONT_WAIT_FOR_TS_M   GENMASK(0, 0)
#define SYS_FRONT_PORT_MODE_DONT_WAIT_FOR_TS_X(x) ((x) & GENMASK(0, 0))

/*      SYS:SYSTEM:FRM_AGING */
#define SYS_FRM_AGING             __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 116, 0, 1, 4)

#define SYS_FRM_AGING_AGE_TX_ENA(x)              (((x) << 20) & GENMASK(20, 20))
#define SYS_FRM_AGING_AGE_TX_ENA_M               GENMASK(20, 20)
#define SYS_FRM_AGING_AGE_TX_ENA_X(x)            (((x) & GENMASK(20, 20)) >> 20)

#define SYS_FRM_AGING_MAX_AGE(x)                 ((x) & GENMASK(19, 0))
#define SYS_FRM_AGING_MAX_AGE_M                  GENMASK(19, 0)
#define SYS_FRM_AGING_MAX_AGE_X(x)               ((x) & GENMASK(19, 0))

/*      SYS:SYSTEM:STAT_CFG */
#define SYS_STAT_CFG              __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 120, 0, 1, 4)

#define SYS_STAT_CFG_STAT_CLEAR_SHOT(x)          (((x) << 10) & GENMASK(16, 10))
#define SYS_STAT_CFG_STAT_CLEAR_SHOT_M           GENMASK(16, 10)
#define SYS_STAT_CFG_STAT_CLEAR_SHOT_X(x)        (((x) & GENMASK(16, 10)) >> 10)

#define SYS_STAT_CFG_STAT_VIEW(x)                ((x) & GENMASK(9, 0))
#define SYS_STAT_CFG_STAT_VIEW_M                 GENMASK(9, 0)
#define SYS_STAT_CFG_STAT_VIEW_X(x)              ((x) & GENMASK(9, 0))

/*      SYS:SYSTEM:SW_STATUS */
#define SYS_SW_STATUS(r)          __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 124, r, 9, 4)

#define SYS_SW_STATUS_PORT_RX_PAUSED(x)          ((x) & GENMASK(0, 0))
#define SYS_SW_STATUS_PORT_RX_PAUSED_M           GENMASK(0, 0)
#define SYS_SW_STATUS_PORT_RX_PAUSED_X(x)        ((x) & GENMASK(0, 0))

/*      SYS:SYSTEM:MISC_CFG */
#define SYS_MISC_CFG              __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 160, 0, 1, 4)

#define SYS_MISC_CFG_PTP_RSRV_CLR(x)             (((x) << 1) & GENMASK(1, 1))
#define SYS_MISC_CFG_PTP_RSRV_CLR_M              GENMASK(1, 1)
#define SYS_MISC_CFG_PTP_RSRV_CLR_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define SYS_MISC_CFG_PTP_IPV6_UDP_LAST(x)        ((x) & GENMASK(0, 0))
#define SYS_MISC_CFG_PTP_IPV6_UDP_LAST_M         GENMASK(0, 0)
#define SYS_MISC_CFG_PTP_IPV6_UDP_LAST_X(x)      ((x) & GENMASK(0, 0))

/*      SYS:SYSTEM:TIMESTAMP_OFFSET */
#define SYS_TIMESTAMP_OFFSET      __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 164, 0, 1, 4)

#define SYS_TIMESTAMP_OFFSET_ETH_TYPE_CFG(x)     (((x) << 6) & GENMASK(21, 6))
#define SYS_TIMESTAMP_OFFSET_ETH_TYPE_CFG_M      GENMASK(21, 6)
#define SYS_TIMESTAMP_OFFSET_ETH_TYPE_CFG_X(x)   (((x) & GENMASK(21, 6)) >> 6)

#define SYS_TIMESTAMP_OFFSET_OFFSET(x)           ((x) & GENMASK(5, 0))
#define SYS_TIMESTAMP_OFFSET_OFFSET_M            GENMASK(5, 0)
#define SYS_TIMESTAMP_OFFSET_OFFSET_X(x)         ((x) & GENMASK(5, 0))

/*      SYS:PAUSE_CFG:PAUSE_CFG */
#define SYS_PAUSE_CFG(r)          __REG(TARGET_SYS,\
					0, 1, 4296, 0, 1, 112, 0, r, 9, 4)

#define SYS_PAUSE_CFG_PAUSE_START(x)             (((x) << 10) & GENMASK(18, 10))
#define SYS_PAUSE_CFG_PAUSE_START_M              GENMASK(18, 10)
#define SYS_PAUSE_CFG_PAUSE_START_X(x)           (((x) & GENMASK(18, 10)) >> 10)

#define SYS_PAUSE_CFG_PAUSE_STOP(x)              (((x) << 1) & GENMASK(9, 1))
#define SYS_PAUSE_CFG_PAUSE_STOP_M               GENMASK(9, 1)
#define SYS_PAUSE_CFG_PAUSE_STOP_X(x)            (((x) & GENMASK(9, 1)) >> 1)

#define SYS_PAUSE_CFG_PAUSE_ENA(x)               ((x) & GENMASK(0, 0))
#define SYS_PAUSE_CFG_PAUSE_ENA_M                GENMASK(0, 0)
#define SYS_PAUSE_CFG_PAUSE_ENA_X(x)             ((x) & GENMASK(0, 0))

/*      SYS:PAUSE_CFG:PAUSE_TOT_CFG */
#define SYS_PAUSE_TOT_CFG         __REG(TARGET_SYS,\
					0, 1, 4296, 0, 1, 112, 36, 0, 1, 4)

#define SYS_PAUSE_TOT_CFG_PAUSE_TOT_START(x)     (((x) << 9) & GENMASK(17, 9))
#define SYS_PAUSE_TOT_CFG_PAUSE_TOT_START_M      GENMASK(17, 9)
#define SYS_PAUSE_TOT_CFG_PAUSE_TOT_START_X(x)   (((x) & GENMASK(17, 9)) >> 9)

#define SYS_PAUSE_TOT_CFG_PAUSE_TOT_STOP(x)      ((x) & GENMASK(8, 0))
#define SYS_PAUSE_TOT_CFG_PAUSE_TOT_STOP_M       GENMASK(8, 0)
#define SYS_PAUSE_TOT_CFG_PAUSE_TOT_STOP_X(x)    ((x) & GENMASK(8, 0))

/*      SYS:PAUSE_CFG:ATOP */
#define SYS_ATOP(r)               __REG(TARGET_SYS,\
					0, 1, 4296, 0, 1, 112, 40, r, 9, 4)

#define SYS_ATOP_ATOP(x)                         ((x) & GENMASK(8, 0))
#define SYS_ATOP_ATOP_M                          GENMASK(8, 0)
#define SYS_ATOP_ATOP_X(x)                       ((x) & GENMASK(8, 0))

/*      SYS:PAUSE_CFG:ATOP_TOT_CFG */
#define SYS_ATOP_TOT_CFG          __REG(TARGET_SYS,\
					0, 1, 4296, 0, 1, 112, 76, 0, 1, 4)

#define SYS_ATOP_TOT_CFG_ATOP_TOT(x)             ((x) & GENMASK(8, 0))
#define SYS_ATOP_TOT_CFG_ATOP_TOT_M              GENMASK(8, 0)
#define SYS_ATOP_TOT_CFG_ATOP_TOT_X(x)           ((x) & GENMASK(8, 0))

/*      SYS:PAUSE_CFG:MAC_FC_CFG */
#define SYS_MAC_FC_CFG(r)         __REG(TARGET_SYS,\
					0, 1, 4296, 0, 1, 112, 80, r, 8, 4)

#define SYS_MAC_FC_CFG_FC_LINK_SPEED(x)          (((x) << 26) & GENMASK(27, 26))
#define SYS_MAC_FC_CFG_FC_LINK_SPEED_M           GENMASK(27, 26)
#define SYS_MAC_FC_CFG_FC_LINK_SPEED_X(x)        (((x) & GENMASK(27, 26)) >> 26)

#define SYS_MAC_FC_CFG_FC_LATENCY_CFG(x)         (((x) << 20) & GENMASK(25, 20))
#define SYS_MAC_FC_CFG_FC_LATENCY_CFG_M          GENMASK(25, 20)
#define SYS_MAC_FC_CFG_FC_LATENCY_CFG_X(x)       (((x) & GENMASK(25, 20)) >> 20)

#define SYS_MAC_FC_CFG_ZERO_PAUSE_ENA(x)         (((x) << 18) & GENMASK(18, 18))
#define SYS_MAC_FC_CFG_ZERO_PAUSE_ENA_M          GENMASK(18, 18)
#define SYS_MAC_FC_CFG_ZERO_PAUSE_ENA_X(x)       (((x) & GENMASK(18, 18)) >> 18)

#define SYS_MAC_FC_CFG_TX_FC_ENA(x)              (((x) << 17) & GENMASK(17, 17))
#define SYS_MAC_FC_CFG_TX_FC_ENA_M               GENMASK(17, 17)
#define SYS_MAC_FC_CFG_TX_FC_ENA_X(x)            (((x) & GENMASK(17, 17)) >> 17)

#define SYS_MAC_FC_CFG_RX_FC_ENA(x)              (((x) << 16) & GENMASK(16, 16))
#define SYS_MAC_FC_CFG_RX_FC_ENA_M               GENMASK(16, 16)
#define SYS_MAC_FC_CFG_RX_FC_ENA_X(x)            (((x) & GENMASK(16, 16)) >> 16)

#define SYS_MAC_FC_CFG_PAUSE_VAL_CFG(x)          ((x) & GENMASK(15, 0))
#define SYS_MAC_FC_CFG_PAUSE_VAL_CFG_M           GENMASK(15, 0)
#define SYS_MAC_FC_CFG_PAUSE_VAL_CFG_X(x)        ((x) & GENMASK(15, 0))

/*      SYS:MMGT:MMGT */
#define SYS_MMGT                  __REG(TARGET_SYS,\
					0, 1, 4408, 0, 1, 8, 0, 0, 1, 4)

#define SYS_MMGT_RELCNT(x)                       (((x) << 16) & GENMASK(31, 16))
#define SYS_MMGT_RELCNT_M                        GENMASK(31, 16)
#define SYS_MMGT_RELCNT_X(x)                     (((x) & GENMASK(31, 16)) >> 16)

#define SYS_MMGT_FREECNT(x)                      ((x) & GENMASK(15, 0))
#define SYS_MMGT_FREECNT_M                       GENMASK(15, 0)
#define SYS_MMGT_FREECNT_X(x)                    ((x) & GENMASK(15, 0))

/*      SYS:MMGT:MMGT_FAST */
#define SYS_MMGT_FAST             __REG(TARGET_SYS,\
					0, 1, 4408, 0, 1, 8, 4, 0, 1, 4)

#define SYS_MMGT_FAST_FREEVLD(x)                 (((x) << 4) & GENMASK(7, 4))
#define SYS_MMGT_FAST_FREEVLD_M                  GENMASK(7, 4)
#define SYS_MMGT_FAST_FREEVLD_X(x)               (((x) & GENMASK(7, 4)) >> 4)

#define SYS_MMGT_FAST_RELVLD(x)                  ((x) & GENMASK(3, 0))
#define SYS_MMGT_FAST_RELVLD_M                   GENMASK(3, 0)
#define SYS_MMGT_FAST_RELVLD_X(x)                ((x) & GENMASK(3, 0))

/*      SYS:MISC:EVENTS_DIF */
#define SYS_EVENTS_DIF(r)         __REG(TARGET_SYS,\
					0, 1, 4416, 0, 1, 16, 0, r, 3, 4)

#define SYS_EVENTS_DIF_EV_DRX(x)                 (((x) << 6) & GENMASK(8, 6))
#define SYS_EVENTS_DIF_EV_DRX_M                  GENMASK(8, 6)
#define SYS_EVENTS_DIF_EV_DRX_X(x)               (((x) & GENMASK(8, 6)) >> 6)

#define SYS_EVENTS_DIF_EV_DTX(x)                 ((x) & GENMASK(5, 0))
#define SYS_EVENTS_DIF_EV_DTX_M                  GENMASK(5, 0)
#define SYS_EVENTS_DIF_EV_DTX_X(x)               ((x) & GENMASK(5, 0))

/*      SYS:MISC:EVENTS_CORE */
#define SYS_EVENTS_CORE           __REG(TARGET_SYS,\
					0, 1, 4416, 0, 1, 16, 12, 0, 1, 4)

#define SYS_EVENTS_CORE_EV_FWR(x)                (((x) << 2) & GENMASK(2, 2))
#define SYS_EVENTS_CORE_EV_FWR_M                 GENMASK(2, 2)
#define SYS_EVENTS_CORE_EV_FWR_X(x)              (((x) & GENMASK(2, 2)) >> 2)

#define SYS_EVENTS_CORE_EV_ANA(x)                ((x) & GENMASK(1, 0))
#define SYS_EVENTS_CORE_EV_ANA_M                 GENMASK(1, 0)
#define SYS_EVENTS_CORE_EV_ANA_X(x)              ((x) & GENMASK(1, 0))

/*      SYS:STAT:CNT */
#define SYS_CNT(g)                __REG(TARGET_SYS,\
					0, 1, 0, g, 896, 4, 0, 0, 1, 4)

/*      SYS:PSTATE:FPORT_STATE */
#define SYS_FPORT_STATE(r)        __REG(TARGET_SYS,\
					0, 1, 4096, 0, 1, 32, 0, r, 8, 4)

#define SYS_FPORT_STATE_MAC_HOLD(x)              ((x) & GENMASK(0, 0))
#define SYS_FPORT_STATE_MAC_HOLD_M               GENMASK(0, 0)
#define SYS_FPORT_STATE_MAC_HOLD_X(x)            ((x) & GENMASK(0, 0))

/*      SYS:CAL_CFG:CAL_CFG */
#define SYS_CAL_CFG(r)            __REG(TARGET_SYS,\
					0, 1, 3584, 0, 1, 512, 0, r, 112, 4)

#define SYS_CAL_CFG_CAL_VAL(x)                   ((x) & GENMASK(3, 0))
#define SYS_CAL_CFG_CAL_VAL_M                    GENMASK(3, 0)
#define SYS_CAL_CFG_CAL_VAL_X(x)                 ((x) & GENMASK(3, 0))

/*      SYS:RAM_CTRL:RAM_INIT */
#define SYS_RAM_INIT              __REG(TARGET_SYS,\
					0, 1, 4432, 0, 1, 4, 0, 0, 1, 4)

#define SYS_RAM_INIT_RAM_INIT(x)                 (((x) << 1) & GENMASK(1, 1))
#define SYS_RAM_INIT_RAM_INIT_M                  GENMASK(1, 1)
#define SYS_RAM_INIT_RAM_INIT_X(x)               (((x) & GENMASK(1, 1)) >> 1)

#define SYS_RAM_INIT_RAM_CFG_HOOK(x)             ((x) & GENMASK(0, 0))
#define SYS_RAM_INIT_RAM_CFG_HOOK_M              GENMASK(0, 0)
#define SYS_RAM_INIT_RAM_CFG_HOOK_X(x)           ((x) & GENMASK(0, 0))

/*      SYS:COREMEM:CM_ADDR */
#define SYS_CM_ADDR               __REG(TARGET_SYS,\
					0, 1, 4436, 0, 1, 16, 0, 0, 1, 4)

/*      SYS:COREMEM:CM_DATA_WR */
#define SYS_CM_DATA_WR            __REG(TARGET_SYS,\
					0, 1, 4436, 0, 1, 16, 4, 0, 1, 4)

/*      SYS:COREMEM:CM_DATA_RD */
#define SYS_CM_DATA_RD            __REG(TARGET_SYS,\
					0, 1, 4436, 0, 1, 16, 8, 0, 1, 4)

/*      SYS:COREMEM:CM_OP */
#define SYS_CM_OP                 __REG(TARGET_SYS,\
					0, 1, 4436, 0, 1, 16, 12, 0, 1, 4)

#define SYS_CM_OP_CM_OP(x)                       ((x) & GENMASK(1, 0))
#define SYS_CM_OP_CM_OP_M                        GENMASK(1, 0)
#define SYS_CM_OP_CM_OP_X(x)                     ((x) & GENMASK(1, 0))

/*      SYS:PTPPORT:PCH_CFG */
#define SYS_PCH_CFG(g)            __REG(TARGET_SYS,\
					0, 1, 4452, g, 10, 28, 0, 0, 1, 4)

#define SYS_PCH_CFG_PCH_SUB_PORT_ID(x)           (((x) << 7) & GENMASK(10, 7))
#define SYS_PCH_CFG_PCH_SUB_PORT_ID_M            GENMASK(10, 7)
#define SYS_PCH_CFG_PCH_SUB_PORT_ID_X(x)         (((x) & GENMASK(10, 7)) >> 7)

#define SYS_PCH_CFG_PCH_TX_MODE(x)               (((x) << 5) & GENMASK(6, 5))
#define SYS_PCH_CFG_PCH_TX_MODE_M                GENMASK(6, 5)
#define SYS_PCH_CFG_PCH_TX_MODE_X(x)             (((x) & GENMASK(6, 5)) >> 5)

#define SYS_PCH_CFG_PCH_RX_MODE(x)               (((x) << 2) & GENMASK(4, 2))
#define SYS_PCH_CFG_PCH_RX_MODE_M                GENMASK(4, 2)
#define SYS_PCH_CFG_PCH_RX_MODE_X(x)             (((x) & GENMASK(4, 2)) >> 2)

#define SYS_PCH_CFG_PCH_ERR_MODE(x)              ((x) & GENMASK(1, 0))
#define SYS_PCH_CFG_PCH_ERR_MODE_M               GENMASK(1, 0)
#define SYS_PCH_CFG_PCH_ERR_MODE_X(x)            ((x) & GENMASK(1, 0))

/*      SYS:PTPPORT:PTP_CFG */
#define SYS_PTP_CFG(g)            __REG(TARGET_SYS,\
					0, 1, 4452, g, 10, 28, 4, 0, 1, 4)

#define SYS_PTP_CFG_PTP_DOM_VAL(x)               (((x) << 2) & GENMASK(3, 2))
#define SYS_PTP_CFG_PTP_DOM_VAL_M                GENMASK(3, 2)
#define SYS_PTP_CFG_PTP_DOM_VAL_X(x)             (((x) & GENMASK(3, 2)) >> 2)

#define SYS_PTP_CFG_PTP_UDP6_CSUM_DIS(x)         (((x) << 1) & GENMASK(1, 1))
#define SYS_PTP_CFG_PTP_UDP6_CSUM_DIS_M          GENMASK(1, 1)
#define SYS_PTP_CFG_PTP_UDP6_CSUM_DIS_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define SYS_PTP_CFG_PTP_UDP4_CSUM_DIS(x)         ((x) & GENMASK(0, 0))
#define SYS_PTP_CFG_PTP_UDP4_CSUM_DIS_M          GENMASK(0, 0)
#define SYS_PTP_CFG_PTP_UDP4_CSUM_DIS_X(x)       ((x) & GENMASK(0, 0))

/*      SYS:PTPPORT:PTP_RXDLY_CFG */
#define SYS_PTP_RXDLY_CFG(g)      __REG(TARGET_SYS,\
					0, 1, 4452, g, 10, 28, 8, 0, 1, 4)

#define SYS_PTP_RXDLY_CFG_PTP_RX_IO_DLY(x)       ((x) & GENMASK(23, 0))
#define SYS_PTP_RXDLY_CFG_PTP_RX_IO_DLY_M        GENMASK(23, 0)
#define SYS_PTP_RXDLY_CFG_PTP_RX_IO_DLY_X(x)     ((x) & GENMASK(23, 0))

/*      SYS:PTPPORT:PTP_TXDLY_CFG */
#define SYS_PTP_TXDLY_CFG(g)      __REG(TARGET_SYS,\
					0, 1, 4452, g, 10, 28, 12, 0, 1, 4)

#define SYS_PTP_TXDLY_CFG_PTP_TX_IO_DLY(x)       ((x) & GENMASK(23, 0))
#define SYS_PTP_TXDLY_CFG_PTP_TX_IO_DLY_M        GENMASK(23, 0)
#define SYS_PTP_TXDLY_CFG_PTP_TX_IO_DLY_X(x)     ((x) & GENMASK(23, 0))

/*      SYS:PTPPORT:PTP_EVENTS */
#define SYS_PTP_EVENTS(g)         __REG(TARGET_SYS,\
					0, 1, 4452, g, 10, 28, 16, 0, 1, 4)

#define SYS_PTP_EVENTS_PCH_SUB_PORT_ID_ERR(x)    (((x) << 3) & GENMASK(3, 3))
#define SYS_PTP_EVENTS_PCH_SUB_PORT_ID_ERR_M     GENMASK(3, 3)
#define SYS_PTP_EVENTS_PCH_SUB_PORT_ID_ERR_X(x)  (((x) & GENMASK(3, 3)) >> 3)

#define SYS_PTP_EVENTS_CF_TOO_BIG(x)             (((x) << 2) & GENMASK(2, 2))
#define SYS_PTP_EVENTS_CF_TOO_BIG_M              GENMASK(2, 2)
#define SYS_PTP_EVENTS_CF_TOO_BIG_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define SYS_PTP_EVENTS_RSRV_NOT_ZERO(x)          (((x) << 1) & GENMASK(1, 1))
#define SYS_PTP_EVENTS_RSRV_NOT_ZERO_M           GENMASK(1, 1)
#define SYS_PTP_EVENTS_RSRV_NOT_ZERO_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define SYS_PTP_EVENTS_PCH_CRC_ERR(x)            ((x) & GENMASK(0, 0))
#define SYS_PTP_EVENTS_PCH_CRC_ERR_M             GENMASK(0, 0)
#define SYS_PTP_EVENTS_PCH_CRC_ERR_X(x)          ((x) & GENMASK(0, 0))

/*      SYS:PTPPORT:PTP_MODE_CFG */
#define SYS_PTP_MODE_CFG(g, r)    __REG(TARGET_SYS,\
					0, 1, 4452, g, 10, 28, 20, r, 2, 4)

#define SYS_PTP_MODE_CFG_PTP_MODE_VAL(x)         ((x) & GENMASK(1, 0))
#define SYS_PTP_MODE_CFG_PTP_MODE_VAL_M          GENMASK(1, 0)
#define SYS_PTP_MODE_CFG_PTP_MODE_VAL_X(x)       ((x) & GENMASK(1, 0))

/*      VCAP:VCAP_CORE_CFG:UPDATE_CTRL */
#define VCAP_UPDATE_CTRL(t)       __REG(TARGET_VCAP,\
					t, 3, 0, 0, 1, 8, 0, 0, 1, 4)

#define VCAP_UPDATE_CTRL_UPDATE_CMD(x)           (((x) << 22) & GENMASK(24, 22))
#define VCAP_UPDATE_CTRL_UPDATE_CMD_M            GENMASK(24, 22)
#define VCAP_UPDATE_CTRL_UPDATE_CMD_X(x)         (((x) & GENMASK(24, 22)) >> 22)

#define VCAP_UPDATE_CTRL_UPDATE_ENTRY_DIS(x)     (((x) << 21) & GENMASK(21, 21))
#define VCAP_UPDATE_CTRL_UPDATE_ENTRY_DIS_M      GENMASK(21, 21)
#define VCAP_UPDATE_CTRL_UPDATE_ENTRY_DIS_X(x)   (((x) & GENMASK(21, 21)) >> 21)

#define VCAP_UPDATE_CTRL_UPDATE_ACTION_DIS(x)    (((x) << 20) & GENMASK(20, 20))
#define VCAP_UPDATE_CTRL_UPDATE_ACTION_DIS_M     GENMASK(20, 20)
#define VCAP_UPDATE_CTRL_UPDATE_ACTION_DIS_X(x)  (((x) & GENMASK(20, 20)) >> 20)

#define VCAP_UPDATE_CTRL_UPDATE_CNT_DIS(x)       (((x) << 19) & GENMASK(19, 19))
#define VCAP_UPDATE_CTRL_UPDATE_CNT_DIS_M        GENMASK(19, 19)
#define VCAP_UPDATE_CTRL_UPDATE_CNT_DIS_X(x)     (((x) & GENMASK(19, 19)) >> 19)

#define VCAP_UPDATE_CTRL_UPDATE_ADDR(x)          (((x) << 3) & GENMASK(18, 3))
#define VCAP_UPDATE_CTRL_UPDATE_ADDR_M           GENMASK(18, 3)
#define VCAP_UPDATE_CTRL_UPDATE_ADDR_X(x)        (((x) & GENMASK(18, 3)) >> 3)

#define VCAP_UPDATE_CTRL_UPDATE_SHOT(x)          (((x) << 2) & GENMASK(2, 2))
#define VCAP_UPDATE_CTRL_UPDATE_SHOT_M           GENMASK(2, 2)
#define VCAP_UPDATE_CTRL_UPDATE_SHOT_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define VCAP_UPDATE_CTRL_CLEAR_CACHE(x)          (((x) << 1) & GENMASK(1, 1))
#define VCAP_UPDATE_CTRL_CLEAR_CACHE_M           GENMASK(1, 1)
#define VCAP_UPDATE_CTRL_CLEAR_CACHE_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_UPDATE_CTRL_MV_TRAFFIC_IGN(x)       ((x) & GENMASK(0, 0))
#define VCAP_UPDATE_CTRL_MV_TRAFFIC_IGN_M        GENMASK(0, 0)
#define VCAP_UPDATE_CTRL_MV_TRAFFIC_IGN_X(x)     ((x) & GENMASK(0, 0))

/*      VCAP:VCAP_CORE_CFG:MV_CFG */
#define VCAP_MV_CFG(t)            __REG(TARGET_VCAP,\
					t, 3, 0, 0, 1, 8, 4, 0, 1, 4)

#define VCAP_MV_CFG_MV_NUM_POS(x)                (((x) << 16) & GENMASK(31, 16))
#define VCAP_MV_CFG_MV_NUM_POS_M                 GENMASK(31, 16)
#define VCAP_MV_CFG_MV_NUM_POS_X(x)              (((x) & GENMASK(31, 16)) >> 16)

#define VCAP_MV_CFG_MV_SIZE(x)                   ((x) & GENMASK(15, 0))
#define VCAP_MV_CFG_MV_SIZE_M                    GENMASK(15, 0)
#define VCAP_MV_CFG_MV_SIZE_X(x)                 ((x) & GENMASK(15, 0))

/*      VCAP:VCAP_CORE_CACHE:ENTRY_DAT */
#define VCAP_ENTRY_DAT(t, r)      __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 0, r, 64, 4)

/*      VCAP:VCAP_CORE_CACHE:MASK_DAT */
#define VCAP_MASK_DAT(t, r)       __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 256, r, 64, 4)

/*      VCAP:VCAP_CORE_CACHE:ACTION_DAT */
#define VCAP_ACTION_DAT(t, r)     __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 512, r, 64, 4)

/*      VCAP:VCAP_CORE_CACHE:CNT_DAT */
#define VCAP_CNT_DAT(t, r)        __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 768, r, 32, 4)

/*      VCAP:VCAP_CORE_CACHE:CNT_FW_DAT */
#define VCAP_CNT_FW_DAT(t)        __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 896, 0, 1, 4)

/*      VCAP:VCAP_CORE_CACHE:TG_DAT */
#define VCAP_TG_DAT(t)            __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 900, 0, 1, 4)

/*      VCAP:VCAP_CORE_MAP:CORE_IDX */
#define VCAP_CORE_IDX(t)          __REG(TARGET_VCAP,\
					t, 3, 912, 0, 1, 8, 0, 0, 1, 4)

#define VCAP_CORE_IDX_CORE_IDX(x)                ((x) & GENMASK(3, 0))
#define VCAP_CORE_IDX_CORE_IDX_M                 GENMASK(3, 0)
#define VCAP_CORE_IDX_CORE_IDX_X(x)              ((x) & GENMASK(3, 0))

/*      VCAP:VCAP_CORE_MAP:CORE_MAP */
#define VCAP_CORE_MAP(t)          __REG(TARGET_VCAP,\
					t, 3, 912, 0, 1, 8, 4, 0, 1, 4)

#define VCAP_CORE_MAP_CORE_MAP(x)                ((x) & GENMASK(2, 0))
#define VCAP_CORE_MAP_CORE_MAP_M                 GENMASK(2, 0)
#define VCAP_CORE_MAP_CORE_MAP_X(x)              ((x) & GENMASK(2, 0))

/*      VCAP:VCAP_CORE_STICKY:STICKY */
#define VCAP_STICKY(t)            __REG(TARGET_VCAP,\
					t, 3, 920, 0, 1, 4, 0, 0, 1, 4)

#define VCAP_STICKY_VCAP_ROW_DELETED_STICKY(x)   ((x) & GENMASK(0, 0))
#define VCAP_STICKY_VCAP_ROW_DELETED_STICKY_M    GENMASK(0, 0)
#define VCAP_STICKY_VCAP_ROW_DELETED_STICKY_X(x) ((x) & GENMASK(0, 0))

/*      VCAP:VCAP_CONST:VER */
#define VCAP_VER(t)               __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 0, 0, 1, 4)

/*      VCAP:VCAP_CONST:ENTRY_WIDTH */
#define VCAP_ENTRY_WIDTH(t)       __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 4, 0, 1, 4)

/*      VCAP:VCAP_CONST:ENTRY_CNT */
#define VCAP_ENTRY_CNT(t)         __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 8, 0, 1, 4)

/*      VCAP:VCAP_CONST:ENTRY_SWCNT */
#define VCAP_ENTRY_SWCNT(t)       __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 12, 0, 1, 4)

/*      VCAP:VCAP_CONST:ENTRY_TG_WIDTH */
#define VCAP_ENTRY_TG_WIDTH(t)    __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 16, 0, 1, 4)

/*      VCAP:VCAP_CONST:ACTION_DEF_CNT */
#define VCAP_ACTION_DEF_CNT(t)    __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 20, 0, 1, 4)

/*      VCAP:VCAP_CONST:ACTION_WIDTH */
#define VCAP_ACTION_WIDTH(t)      __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 24, 0, 1, 4)

/*      VCAP:VCAP_CONST:CNT_WIDTH */
#define VCAP_CNT_WIDTH(t)         __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 28, 0, 1, 4)

/*      VCAP:VCAP_CONST:CORE_CNT */
#define VCAP_CORE_CNT(t)          __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 32, 0, 1, 4)

/*      VCAP:VCAP_CONST:IF_CNT */
#define VCAP_IF_CNT(t)            __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 36, 0, 1, 4)

/*      VCAP:TCAM_BIST:TCAM_CFG */
#define VCAP_TCAM_CFG(t)          __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 0, 0, 1, 4)

#define VCAP_TCAM_CFG_TCAM_HCG_DIS(x)            (((x) << 3) & GENMASK(3, 3))
#define VCAP_TCAM_CFG_TCAM_HCG_DIS_M             GENMASK(3, 3)
#define VCAP_TCAM_CFG_TCAM_HCG_DIS_X(x)          (((x) & GENMASK(3, 3)) >> 3)

#define VCAP_TCAM_CFG_TCAM_CG_DIS(x)             (((x) << 2) & GENMASK(2, 2))
#define VCAP_TCAM_CFG_TCAM_CG_DIS_M              GENMASK(2, 2)
#define VCAP_TCAM_CFG_TCAM_CG_DIS_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define VCAP_TCAM_CFG_TCAM_STCMP(x)              ((x) & GENMASK(1, 0))
#define VCAP_TCAM_CFG_TCAM_STCMP_M               GENMASK(1, 0)
#define VCAP_TCAM_CFG_TCAM_STCMP_X(x)            ((x) & GENMASK(1, 0))

/*      VCAP:TCAM_BIST:TCAM_CTRL */
#define VCAP_TCAM_CTRL(t)         __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 4, 0, 1, 4)

#define VCAP_TCAM_CTRL_TCAM_RST_SHOT(x)          (((x) << 16) & GENMASK(31, 16))
#define VCAP_TCAM_CTRL_TCAM_RST_SHOT_M           GENMASK(31, 16)
#define VCAP_TCAM_CTRL_TCAM_RST_SHOT_X(x)        (((x) & GENMASK(31, 16)) >> 16)

#define VCAP_TCAM_CTRL_TCAM_SD(x)                ((x) & GENMASK(15, 0))
#define VCAP_TCAM_CTRL_TCAM_SD_M                 GENMASK(15, 0)
#define VCAP_TCAM_CTRL_TCAM_SD_X(x)              ((x) & GENMASK(15, 0))

/*      VCAP:TCAM_BIST:BIST_CTRL */
#define VCAP_BIST_CTRL(t)         __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 8, 0, 1, 4)

#define VCAP_BIST_CTRL_BIST_RUN(x)               (((x) << 2) & GENMASK(2, 2))
#define VCAP_BIST_CTRL_BIST_RUN_M                GENMASK(2, 2)
#define VCAP_BIST_CTRL_BIST_RUN_X(x)             (((x) & GENMASK(2, 2)) >> 2)

#define VCAP_BIST_CTRL_BIST_RUN_FOREVER(x)       (((x) << 1) & GENMASK(1, 1))
#define VCAP_BIST_CTRL_BIST_RUN_FOREVER_M        GENMASK(1, 1)
#define VCAP_BIST_CTRL_BIST_RUN_FOREVER_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_BIST_CTRL_BIST_RESUME_SHOT(x)       ((x) & GENMASK(0, 0))
#define VCAP_BIST_CTRL_BIST_RESUME_SHOT_M        GENMASK(0, 0)
#define VCAP_BIST_CTRL_BIST_RESUME_SHOT_X(x)     ((x) & GENMASK(0, 0))

/*      VCAP:TCAM_BIST:BIST_CFG */
#define VCAP_BIST_CFG(t)          __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 12, 0, 1, 4)

#define VCAP_BIST_CFG_BIST_REPAIR_ENA(x)         (((x) << 1) & GENMASK(1, 1))
#define VCAP_BIST_CFG_BIST_REPAIR_ENA_M          GENMASK(1, 1)
#define VCAP_BIST_CFG_BIST_REPAIR_ENA_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_BIST_CFG_BIST_RETENT_ENA(x)         ((x) & GENMASK(0, 0))
#define VCAP_BIST_CFG_BIST_RETENT_ENA_M          GENMASK(0, 0)
#define VCAP_BIST_CFG_BIST_RETENT_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      VCAP:TCAM_BIST:BIST_STAT */
#define VCAP_BIST_STAT(t)         __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 16, 0, 1, 4)

#define VCAP_BIST_STAT_BIST_PASS(x)              (((x) << 3) & GENMASK(3, 3))
#define VCAP_BIST_STAT_BIST_PASS_M               GENMASK(3, 3)
#define VCAP_BIST_STAT_BIST_PASS_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define VCAP_BIST_STAT_BIST_FAIL(x)              (((x) << 2) & GENMASK(2, 2))
#define VCAP_BIST_STAT_BIST_FAIL_M               GENMASK(2, 2)
#define VCAP_BIST_STAT_BIST_FAIL_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define VCAP_BIST_STAT_BIST_PAUSED(x)            (((x) << 1) & GENMASK(1, 1))
#define VCAP_BIST_STAT_BIST_PAUSED_M             GENMASK(1, 1)
#define VCAP_BIST_STAT_BIST_PAUSED_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_BIST_STAT_BIST_DONE(x)              ((x) & GENMASK(0, 0))
#define VCAP_BIST_STAT_BIST_DONE_M               GENMASK(0, 0)
#define VCAP_BIST_STAT_BIST_DONE_X(x)            ((x) & GENMASK(0, 0))

/*      VCAP:TCAM_BIST:BIST_FAIL_STAT */
#define VCAP_BIST_FAIL_STAT(t, r) __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 20, r, 16, 4)

/*      VCAP:TCAM_BIST:BIST_DIAG_CTRL */
#define VCAP_BIST_DIAG_CTRL(t)    __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 84, 0, 1, 4)

#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_IDX(x)     (((x) << 7) & GENMASK(12, 7))
#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_IDX_M      GENMASK(12, 7)
#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_IDX_X(x)   (((x) & GENMASK(12, 7)) >> 7)

#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_SHOT(x)    (((x) << 6) & GENMASK(6, 6))
#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_SHOT_M     GENMASK(6, 6)
#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_SHOT_X(x)  (((x) & GENMASK(6, 6)) >> 6)

#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_RST_SHOT(x) (((x) << 5) & GENMASK(5, 5))
#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_RST_SHOT_M GENMASK(5, 5)
#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_RST_SHOT_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_SKIP_ERR(x) ((x) & GENMASK(4, 0))
#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_SKIP_ERR_M GENMASK(4, 0)
#define VCAP_BIST_DIAG_CTRL_BIST_DIAG_SKIP_ERR_X(x) ((x) & GENMASK(4, 0))

/*      VCAP:TCAM_BIST:BIST_DIAG_STAT */
#define VCAP_BIST_DIAG_STAT(t)    __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 88, 0, 1, 4)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_FAIL_SEQ(x)\
	(((x) << 18) & GENMASK(25, 18))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_FAIL_SEQ_M GENMASK(25, 18)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_FAIL_SEQ_X(x)\
	(((x) & GENMASK(25, 18)) >> 18)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_FAIL_ADDR(x)\
	(((x) << 10) & GENMASK(17, 10))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_FAIL_ADDR_M GENMASK(17, 10)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_FAIL_ADDR_X(x)\
	(((x) & GENMASK(17, 10)) >> 10)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_HITA_FAIL(x) (((x) << 9) & GENMASK(9, 9))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_HITA_FAIL_M GENMASK(9, 9)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_HITA_FAIL_X(x)\
	(((x) & GENMASK(9, 9)) >> 9)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_HITB_FAIL(x) (((x) << 8) & GENMASK(8, 8))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_HITB_FAIL_M GENMASK(8, 8)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_HITB_FAIL_X(x)\
	(((x) & GENMASK(8, 8)) >> 8)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_VBITA_FAIL(x) (((x) << 7) & GENMASK(7, 7))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_VBITA_FAIL_M GENMASK(7, 7)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_VBITA_FAIL_X(x)\
	(((x) & GENMASK(7, 7)) >> 7)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_VBITB_FAIL(x) (((x) << 6) & GENMASK(6, 6))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_VBITB_FAIL_M GENMASK(6, 6)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_VBITB_FAIL_X(x)\
	(((x) & GENMASK(6, 6)) >> 6)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_MASKA_FAIL(x) (((x) << 5) & GENMASK(5, 5))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_MASKA_FAIL_M GENMASK(5, 5)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_MASKA_FAIL_X(x)\
	(((x) & GENMASK(5, 5)) >> 5)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_MASKB_FAIL(x) (((x) << 4) & GENMASK(4, 4))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_MASKB_FAIL_M GENMASK(4, 4)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_MASKB_FAIL_X(x)\
	(((x) & GENMASK(4, 4)) >> 4)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_DATAA_FAIL(x) (((x) << 3) & GENMASK(3, 3))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_DATAA_FAIL_M GENMASK(3, 3)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_DATAA_FAIL_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_DATAB_FAIL(x) (((x) << 2) & GENMASK(2, 2))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_DATAB_FAIL_M GENMASK(2, 2)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_DATAB_FAIL_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_PASS(x)    (((x) << 1) & GENMASK(1, 1))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_PASS_M     GENMASK(1, 1)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_PASS_X(x)  (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_BIST_DIAG_STAT_BIST_DIAG_FAIL(x)    ((x) & GENMASK(0, 0))
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_FAIL_M     GENMASK(0, 0)
#define VCAP_BIST_DIAG_STAT_BIST_DIAG_FAIL_X(x)  ((x) & GENMASK(0, 0))

/*      VCAP:TCAM_BIST:BIST_DIAG_BMA_STAT */
#define VCAP_BIST_DIAG_BMA_STAT(t, r) __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 92, r, 3, 4)

/*      VCAP:TCAM_BIST:BIST_DIAG_BMB_STAT */
#define VCAP_BIST_DIAG_BMB_STAT(t, r) __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 104, r, 3, 4)

/*      VCAP:TCAM_BIST:RCR_CTRL */
#define VCAP_RCR_CTRL(t)          __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 116, 0, 1, 4)

#define VCAP_RCR_CTRL_RCR_OPR(x)                 (((x) << 21) & GENMASK(22, 21))
#define VCAP_RCR_CTRL_RCR_OPR_M                  GENMASK(22, 21)
#define VCAP_RCR_CTRL_RCR_OPR_X(x)               (((x) & GENMASK(22, 21)) >> 21)

#define VCAP_RCR_CTRL_RCR_IDX(x)                 (((x) << 15) & GENMASK(20, 15))
#define VCAP_RCR_CTRL_RCR_IDX_M                  GENMASK(20, 15)
#define VCAP_RCR_CTRL_RCR_IDX_X(x)               (((x) & GENMASK(20, 15)) >> 15)

#define VCAP_RCR_CTRL_RCR_DATA(x)                (((x) << 1) & GENMASK(14, 1))
#define VCAP_RCR_CTRL_RCR_DATA_M                 GENMASK(14, 1)
#define VCAP_RCR_CTRL_RCR_DATA_X(x)              (((x) & GENMASK(14, 1)) >> 1)

#define VCAP_RCR_CTRL_RCR_SHOT(x)                ((x) & GENMASK(0, 0))
#define VCAP_RCR_CTRL_RCR_SHOT_M                 GENMASK(0, 0)
#define VCAP_RCR_CTRL_RCR_SHOT_X(x)              ((x) & GENMASK(0, 0))

/*      VCAP:TCAM_BIST:RCR_STAT */
#define VCAP_RCR_STAT(t)          __REG(TARGET_VCAP,\
					t, 3, 964, 0, 1, 124, 120, 0, 1, 4)

#define VCAP_RCR_STAT_RCR_BUSY(x)                ((x) & GENMASK(0, 0))
#define VCAP_RCR_STAT_RCR_BUSY_M                 GENMASK(0, 0)
#define VCAP_RCR_STAT_RCR_BUSY_X(x)              ((x) & GENMASK(0, 0))

/*      VCAP:ECC_CHK:ECC_CTRL */
#define VCAP_ECC_CTRL(t)          __REG(TARGET_VCAP,\
					t, 3, 1088, 0, 1, 16, 0, 0, 1, 4)

#define VCAP_ECC_CTRL_AUTO_INVALIDATE_DIS(x)     (((x) << 2) & GENMASK(2, 2))
#define VCAP_ECC_CTRL_AUTO_INVALIDATE_DIS_M      GENMASK(2, 2)
#define VCAP_ECC_CTRL_AUTO_INVALIDATE_DIS_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define VCAP_ECC_CTRL_LOCAL_MEMITGR_DIS(x)       (((x) << 1) & GENMASK(1, 1))
#define VCAP_ECC_CTRL_LOCAL_MEMITGR_DIS_M        GENMASK(1, 1)
#define VCAP_ECC_CTRL_LOCAL_MEMITGR_DIS_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_ECC_CTRL_ECC_CHK_ENA(x)             ((x) & GENMASK(0, 0))
#define VCAP_ECC_CTRL_ECC_CHK_ENA_M              GENMASK(0, 0)
#define VCAP_ECC_CTRL_ECC_CHK_ENA_X(x)           ((x) & GENMASK(0, 0))

/*      VCAP:ECC_CHK:ECC_STAT */
#define VCAP_ECC_STAT(t)          __REG(TARGET_VCAP,\
					t, 3, 1088, 0, 1, 16, 4, 0, 1, 4)

#define VCAP_ECC_STAT_BLK_DLY_TOO_SMALL(x)       (((x) << 1) & GENMASK(1, 1))
#define VCAP_ECC_STAT_BLK_DLY_TOO_SMALL_M        GENMASK(1, 1)
#define VCAP_ECC_STAT_BLK_DLY_TOO_SMALL_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_ECC_STAT_BLK_DONE(x)                ((x) & GENMASK(0, 0))
#define VCAP_ECC_STAT_BLK_DONE_M                 GENMASK(0, 0)
#define VCAP_ECC_STAT_BLK_DONE_X(x)              ((x) & GENMASK(0, 0))

/*      VCAP:ECC_CHK:ECC_BLK_DLY */
#define VCAP_ECC_BLK_DLY(t)       __REG(TARGET_VCAP,\
					t, 3, 1088, 0, 1, 16, 8, 0, 1, 4)

/*      VCAP:ECC_CHK:ECC_INV */
#define VCAP_ECC_INV(t)           __REG(TARGET_VCAP,\
					t, 3, 1088, 0, 1, 16, 12, 0, 1, 4)

#define VCAP_ECC_INV_INV_ADDR(x)                 (((x) << 2) & GENMASK(17, 2))
#define VCAP_ECC_INV_INV_ADDR_M                  GENMASK(17, 2)
#define VCAP_ECC_INV_INV_ADDR_X(x)               (((x) & GENMASK(17, 2)) >> 2)

#define VCAP_ECC_INV_INV(x)                      (((x) << 1) & GENMASK(1, 1))
#define VCAP_ECC_INV_INV_M                       GENMASK(1, 1)
#define VCAP_ECC_INV_INV_X(x)                    (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_ECC_INV_INV_ALL(x)                  ((x) & GENMASK(0, 0))
#define VCAP_ECC_INV_INV_ALL_M                   GENMASK(0, 0)
#define VCAP_ECC_INV_INV_ALL_X(x)                ((x) & GENMASK(0, 0))

/*      VCAP:MEMITGR:MEMITGR_CTRL */
#define VCAP_MEMITGR_CTRL(t)      __REG(TARGET_VCAP,\
					t, 3, 1104, 0, 1, 24, 0, 0, 1, 4)

#define VCAP_MEMITGR_CTRL_ACTIVATE(x)            ((x) & GENMASK(0, 0))
#define VCAP_MEMITGR_CTRL_ACTIVATE_M             GENMASK(0, 0)
#define VCAP_MEMITGR_CTRL_ACTIVATE_X(x)          ((x) & GENMASK(0, 0))

/*      VCAP:MEMITGR:MEMITGR_STAT */
#define VCAP_MEMITGR_STAT(t)      __REG(TARGET_VCAP,\
					t, 3, 1104, 0, 1, 24, 4, 0, 1, 4)

#define VCAP_MEMITGR_STAT_INDICATION_OVF(x)      (((x) << 5) & GENMASK(5, 5))
#define VCAP_MEMITGR_STAT_INDICATION_OVF_M       GENMASK(5, 5)
#define VCAP_MEMITGR_STAT_INDICATION_OVF_X(x)    (((x) & GENMASK(5, 5)) >> 5)

#define VCAP_MEMITGR_STAT_INDICATION(x)          (((x) << 4) & GENMASK(4, 4))
#define VCAP_MEMITGR_STAT_INDICATION_M           GENMASK(4, 4)
#define VCAP_MEMITGR_STAT_INDICATION_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define VCAP_MEMITGR_STAT_MODE_LISTEN(x)         (((x) << 3) & GENMASK(3, 3))
#define VCAP_MEMITGR_STAT_MODE_LISTEN_M          GENMASK(3, 3)
#define VCAP_MEMITGR_STAT_MODE_LISTEN_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define VCAP_MEMITGR_STAT_MODE_DETECT(x)         (((x) << 2) & GENMASK(2, 2))
#define VCAP_MEMITGR_STAT_MODE_DETECT_M          GENMASK(2, 2)
#define VCAP_MEMITGR_STAT_MODE_DETECT_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define VCAP_MEMITGR_STAT_MODE_IDLE(x)           (((x) << 1) & GENMASK(1, 1))
#define VCAP_MEMITGR_STAT_MODE_IDLE_M            GENMASK(1, 1)
#define VCAP_MEMITGR_STAT_MODE_IDLE_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_MEMITGR_STAT_MODE_BUSY(x)           ((x) & GENMASK(0, 0))
#define VCAP_MEMITGR_STAT_MODE_BUSY_M            GENMASK(0, 0)
#define VCAP_MEMITGR_STAT_MODE_BUSY_X(x)         ((x) & GENMASK(0, 0))

/*      VCAP:MEMITGR:MEMITGR_INFO */
#define VCAP_MEMITGR_INFO(t)      __REG(TARGET_VCAP,\
					t, 3, 1104, 0, 1, 24, 8, 0, 1, 4)

#define VCAP_MEMITGR_INFO_MEM_ERR(x)             (((x) << 31) & GENMASK(31, 31))
#define VCAP_MEMITGR_INFO_MEM_ERR_M              GENMASK(31, 31)
#define VCAP_MEMITGR_INFO_MEM_ERR_X(x)           (((x) & GENMASK(31, 31)) >> 31)

#define VCAP_MEMITGR_INFO_MEM_COR(x)             (((x) << 30) & GENMASK(30, 30))
#define VCAP_MEMITGR_INFO_MEM_COR_M              GENMASK(30, 30)
#define VCAP_MEMITGR_INFO_MEM_COR_X(x)           (((x) & GENMASK(30, 30)) >> 30)

#define VCAP_MEMITGR_INFO_MEM_ERR_OVF(x)         (((x) << 29) & GENMASK(29, 29))
#define VCAP_MEMITGR_INFO_MEM_ERR_OVF_M          GENMASK(29, 29)
#define VCAP_MEMITGR_INFO_MEM_ERR_OVF_X(x)       (((x) & GENMASK(29, 29)) >> 29)

#define VCAP_MEMITGR_INFO_MEM_COR_OVF(x)         (((x) << 28) & GENMASK(28, 28))
#define VCAP_MEMITGR_INFO_MEM_COR_OVF_M          GENMASK(28, 28)
#define VCAP_MEMITGR_INFO_MEM_COR_OVF_X(x)       (((x) & GENMASK(28, 28)) >> 28)

#define VCAP_MEMITGR_INFO_MEM_ADDR(x)            ((x) & GENMASK(27, 0))
#define VCAP_MEMITGR_INFO_MEM_ADDR_M             GENMASK(27, 0)
#define VCAP_MEMITGR_INFO_MEM_ADDR_X(x)          ((x) & GENMASK(27, 0))

/*      VCAP:MEMITGR:MEMITGR_IDX */
#define VCAP_MEMITGR_IDX(t)       __REG(TARGET_VCAP,\
					t, 3, 1104, 0, 1, 24, 12, 0, 1, 4)

#define VCAP_MEMITGR_IDX_MEM_IDX(x)              ((x) & GENMASK(15, 0))
#define VCAP_MEMITGR_IDX_MEM_IDX_M               GENMASK(15, 0)
#define VCAP_MEMITGR_IDX_MEM_IDX_X(x)            ((x) & GENMASK(15, 0))

/*      VCAP:MEMITGR:MEMITGR_DIV */
#define VCAP_MEMITGR_DIV(t)       __REG(TARGET_VCAP,\
					t, 3, 1104, 0, 1, 24, 16, 0, 1, 4)

#define VCAP_MEMITGR_DIV_MEM_DIV(x)              ((x) & GENMASK(15, 0))
#define VCAP_MEMITGR_DIV_MEM_DIV_M               GENMASK(15, 0)
#define VCAP_MEMITGR_DIV_MEM_DIV_X(x)            ((x) & GENMASK(15, 0))

/*      VCAP:MEMITGR:MEMITGR_DBG */
#define VCAP_MEMITGR_DBG(t)       __REG(TARGET_VCAP,\
					t, 3, 1104, 0, 1, 24, 20, 0, 1, 4)

#define VCAP_MEMITGR_DBG_MEM_DIV_SENSE(x)        (((x) << 9) & GENMASK(9, 9))
#define VCAP_MEMITGR_DBG_MEM_DIV_SENSE_M         GENMASK(9, 9)
#define VCAP_MEMITGR_DBG_MEM_DIV_SENSE_X(x)      (((x) & GENMASK(9, 9)) >> 9)

#define VCAP_MEMITGR_DBG_FORCE_INTR(x)           (((x) << 8) & GENMASK(8, 8))
#define VCAP_MEMITGR_DBG_FORCE_INTR_M            GENMASK(8, 8)
#define VCAP_MEMITGR_DBG_FORCE_INTR_X(x)         (((x) & GENMASK(8, 8)) >> 8)

#define VCAP_MEMITGR_DBG_SYNC_IN(x)              (((x) << 7) & GENMASK(7, 7))
#define VCAP_MEMITGR_DBG_SYNC_IN_M               GENMASK(7, 7)
#define VCAP_MEMITGR_DBG_SYNC_IN_X(x)            (((x) & GENMASK(7, 7)) >> 7)

#define VCAP_MEMITGR_DBG_ENA_IN(x)               (((x) << 6) & GENMASK(6, 6))
#define VCAP_MEMITGR_DBG_ENA_IN_M                GENMASK(6, 6)
#define VCAP_MEMITGR_DBG_ENA_IN_X(x)             (((x) & GENMASK(6, 6)) >> 6)

#define VCAP_MEMITGR_DBG_DATA_IN(x)              (((x) << 5) & GENMASK(5, 5))
#define VCAP_MEMITGR_DBG_DATA_IN_M               GENMASK(5, 5)
#define VCAP_MEMITGR_DBG_DATA_IN_X(x)            (((x) & GENMASK(5, 5)) >> 5)

#define VCAP_MEMITGR_DBG_INTR_IN(x)              (((x) << 4) & GENMASK(4, 4))
#define VCAP_MEMITGR_DBG_INTR_IN_M               GENMASK(4, 4)
#define VCAP_MEMITGR_DBG_INTR_IN_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define VCAP_MEMITGR_DBG_SYNC_OUT(x)             (((x) << 3) & GENMASK(3, 3))
#define VCAP_MEMITGR_DBG_SYNC_OUT_M              GENMASK(3, 3)
#define VCAP_MEMITGR_DBG_SYNC_OUT_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define VCAP_MEMITGR_DBG_ENA_OUT(x)              (((x) << 2) & GENMASK(2, 2))
#define VCAP_MEMITGR_DBG_ENA_OUT_M               GENMASK(2, 2)
#define VCAP_MEMITGR_DBG_ENA_OUT_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define VCAP_MEMITGR_DBG_FORCE_ENA(x)            (((x) << 1) & GENMASK(1, 1))
#define VCAP_MEMITGR_DBG_FORCE_ENA_M             GENMASK(1, 1)
#define VCAP_MEMITGR_DBG_FORCE_ENA_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_MEMITGR_DBG_DETECT_ENA(x)           ((x) & GENMASK(0, 0))
#define VCAP_MEMITGR_DBG_DETECT_ENA_M            GENMASK(0, 0)
#define VCAP_MEMITGR_DBG_DETECT_ENA_X(x)         ((x) & GENMASK(0, 0))

#define MACACCESS_CMD_IDLE		0
#define MACACCESS_CMD_LEARN		1
#define MACACCESS_CMD_FORGET		2
#define MACACCESS_CMD_AGE		3
#define MACACCESS_CMD_GET_NEXT		4
#define MACACCESS_CMD_INIT		5
#define MACACCESS_CMD_READ		6
#define MACACCESS_CMD_WRITE		7

#define VLANACCESS_CMD_IDLE		0
#define VLANACCESS_CMD_READ		1
#define VLANACCESS_CMD_WRITE		2
#define VLANACCESS_CMD_INIT		3

#define XTR_EOF_0			0x00000080U
#define XTR_EOF_1			0x01000080U
#define XTR_EOF_2			0x02000080U
#define XTR_EOF_3			0x03000080U
#define XTR_PRUNED			0x04000080U
#define XTR_ABORT			0x05000080U
#define XTR_ESCAPE			0x06000080U
#define XTR_NOT_READY			0x07000080U
#define XTR_VALID_BYTES(x)		(4U - (((x) >> 24U) & 3U))

#endif /* _VTSS_LAN966X_REGS_H_ */
